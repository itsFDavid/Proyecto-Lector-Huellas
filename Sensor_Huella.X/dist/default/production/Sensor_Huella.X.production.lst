

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Oct 28 10:25:21 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Version 2.40
    56                           ; Generated 17/11/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     
    91                           	psect	idataBANK0
    92   001048                     __pidataBANK0:
    93                           	callstack 0
    94                           
    95                           ;initializer for _finger_sh
    96   001048  EF                 	db	239
    97   001049  01                 	db	1
    98   00104A  FF                 	db	255
    99   00104B  FF                 	db	255
   100   00104C  FF                 	db	255
   101   00104D  FF                 	db	255
   102   00104E  01                 	db	1
   103   00104F  00                 	db	0
   104   001050  08                 	db	8
   105   001051  04                 	db	4
   106   001052  01                 	db	1
   107   001053  00                 	db	0
   108   001054  00                 	db	0
   109   001055  00                 	db	0
   110   001056  00                 	db	0
   111   001057  00                 	db	0
   112   001058  00                 	db	0
   113                           
   114                           ;initializer for _finger_delete
   115   001059  EF                 	db	239
   116   00105A  01                 	db	1
   117   00105B  FF                 	db	255
   118   00105C  FF                 	db	255
   119   00105D  FF                 	db	255
   120   00105E  FF                 	db	255
   121   00105F  01                 	db	1
   122   001060  00                 	db	0
   123   001061  07                 	db	7
   124   001062  0C                 	db	12
   125   001063  00                 	db	0
   126   001064  00                 	db	0
   127   001065  00                 	db	0
   128   001066  01                 	db	1
   129   001067  00                 	db	0
   130   001068  00                 	db	0
   131                           
   132                           ;initializer for _finger_store_model
   133   001069  EF                 	db	239
   134   00106A  01                 	db	1
   135   00106B  FF                 	db	255
   136   00106C  FF                 	db	255
   137   00106D  FF                 	db	255
   138   00106E  FF                 	db	255
   139   00106F  01                 	db	1
   140   001070  00                 	db	0
   141   001071  06                 	db	6
   142   001072  06                 	db	6
   143   001073  01                 	db	1
   144   001074  00                 	db	0
   145   001075  00                 	db	0
   146   001076  00                 	db	0
   147   001077  00                 	db	0
   148                           
   149                           	psect	mediumconst
   150   007D5C                     __pmediumconst:
   151                           	callstack 0
   152   007D5C  00                 	db	0
   153   007D5D                     _finger_img2tz_2:
   154                           	callstack 0
   155   007D5D  EF                 	db	239
   156   007D5E  01                 	db	1
   157   007D5F  FF                 	db	255
   158   007D60  FF                 	db	255
   159   007D61  FF                 	db	255
   160   007D62  FF                 	db	255
   161   007D63  01                 	db	1
   162   007D64  00                 	db	0
   163   007D65  04                 	db	4
   164   007D66  02                 	db	2
   165   007D67  02                 	db	2
   166   007D68  00                 	db	0
   167   007D69  09                 	db	9
   168   007D6A                     __end_of_finger_img2tz_2:
   169                           	callstack 0
   170   007D6A                     _finger_img2tz_1:
   171                           	callstack 0
   172   007D6A  EF                 	db	239
   173   007D6B  01                 	db	1
   174   007D6C  FF                 	db	255
   175   007D6D  FF                 	db	255
   176   007D6E  FF                 	db	255
   177   007D6F  FF                 	db	255
   178   007D70  01                 	db	1
   179   007D71  00                 	db	0
   180   007D72  04                 	db	4
   181   007D73  02                 	db	2
   182   007D74  01                 	db	1
   183   007D75  00                 	db	0
   184   007D76  08                 	db	8
   185   007D77                     __end_of_finger_img2tz_1:
   186                           	callstack 0
   187   007D77                     _finger_delete_all:
   188                           	callstack 0
   189   007D77  EF                 	db	239
   190   007D78  01                 	db	1
   191   007D79  FF                 	db	255
   192   007D7A  FF                 	db	255
   193   007D7B  FF                 	db	255
   194   007D7C  FF                 	db	255
   195   007D7D  01                 	db	1
   196   007D7E  00                 	db	0
   197   007D7F  03                 	db	3
   198   007D80  0D                 	db	13
   199   007D81  00                 	db	0
   200   007D82  11                 	db	17
   201   007D83                     __end_of_finger_delete_all:
   202                           	callstack 0
   203   007D83                     _finger_template:
   204                           	callstack 0
   205   007D83  EF                 	db	239
   206   007D84  01                 	db	1
   207   007D85  FF                 	db	255
   208   007D86  FF                 	db	255
   209   007D87  FF                 	db	255
   210   007D88  FF                 	db	255
   211   007D89  01                 	db	1
   212   007D8A  00                 	db	0
   213   007D8B  03                 	db	3
   214   007D8C  1D                 	db	29
   215   007D8D  00                 	db	0
   216   007D8E  21                 	db	33
   217   007D8F                     __end_of_finger_template:
   218                           	callstack 0
   219   007D8F                     _finger_get_model:
   220                           	callstack 0
   221   007D8F  EF                 	db	239
   222   007D90  01                 	db	1
   223   007D91  FF                 	db	255
   224   007D92  FF                 	db	255
   225   007D93  FF                 	db	255
   226   007D94  FF                 	db	255
   227   007D95  01                 	db	1
   228   007D96  00                 	db	0
   229   007D97  03                 	db	3
   230   007D98  05                 	db	5
   231   007D99  00                 	db	0
   232   007D9A  09                 	db	9
   233   007D9B                     __end_of_finger_get_model:
   234                           	callstack 0
   235   007D9B                     _finger_detect:
   236                           	callstack 0
   237   007D9B  EF                 	db	239
   238   007D9C  01                 	db	1
   239   007D9D  FF                 	db	255
   240   007D9E  FF                 	db	255
   241   007D9F  FF                 	db	255
   242   007DA0  FF                 	db	255
   243   007DA1  01                 	db	1
   244   007DA2  00                 	db	0
   245   007DA3  03                 	db	3
   246   007DA4  01                 	db	1
   247   007DA5  00                 	db	0
   248   007DA6  05                 	db	5
   249   007DA7                     __end_of_finger_detect:
   250                           	callstack 0
   251   007DA7                     _finger_read_data:
   252                           	callstack 0
   253   007DA7  EF                 	db	239
   254   007DA8  01                 	db	1
   255   007DA9  FF                 	db	255
   256   007DAA  FF                 	db	255
   257   007DAB  FF                 	db	255
   258   007DAC  FF                 	db	255
   259   007DAD  01                 	db	1
   260   007DAE  00                 	db	0
   261   007DAF  03                 	db	3
   262   007DB0  0F                 	db	15
   263   007DB1  00                 	db	0
   264   007DB2  13                 	db	19
   265   007DB3                     __end_of_finger_read_data:
   266                           	callstack 0
   267   000000                     _RCREG	set	4014
   268   000000                     _TXREG	set	4013
   269   000000                     _SPBRG	set	4015
   270   000000                     _BAUDCON	set	4024
   271   000000                     _TXSTAbits	set	4012
   272   000000                     _BAUDCONbits	set	4024
   273   000000                     _PORTDbits	set	3971
   274   000000                     _LATDbits	set	3980
   275   000000                     _TRISDbits	set	3989
   276   000000                     _ADCON1bits	set	4033
   277   000000                     _INTCONbits	set	4082
   278   000000                     _PIE1bits	set	3997
   279   000000                     _RCSTA	set	4011
   280   000000                     _TXSTA	set	4012
   281   000000                     _TRISCbits	set	3988
   282   000000                     _SPBRGH	set	4016
   283   000000                     _PIR1bits	set	3998
   284   007DB3                     STR_20:
   285   007DB3  45                 	db	69	;'E'
   286   007DB4  6C                 	db	108	;'l'
   287   007DB5  20                 	db	32
   288   007DB6  49                 	db	73	;'I'
   289   007DB7  44                 	db	68	;'D'
   290   007DB8  20                 	db	32
   291   007DB9  64                 	db	100	;'d'
   292   007DBA  65                 	db	101	;'e'
   293   007DBB  20                 	db	32
   294   007DBC  6C                 	db	108	;'l'
   295   007DBD  61                 	db	97	;'a'
   296   007DBE  20                 	db	32
   297   007DBF  70                 	db	112	;'p'
   298   007DC0  61                 	db	97	;'a'
   299   007DC1  67                 	db	103	;'g'
   300   007DC2  69                 	db	105	;'i'
   301   007DC3  6E                 	db	110	;'n'
   302   007DC4  61                 	db	97	;'a'
   303   007DC5  20                 	db	32
   304   007DC6  65                 	db	101	;'e'
   305   007DC7  73                 	db	115	;'s'
   306   007DC8  20                 	db	32
   307   007DC9  6D                 	db	109	;'m'
   308   007DCA  61                 	db	97	;'a'
   309   007DCB  79                 	db	121	;'y'
   310   007DCC  6F                 	db	111	;'o'
   311   007DCD  72                 	db	114	;'r'
   312   007DCE  20                 	db	32
   313   007DCF  61                 	db	97	;'a'
   314   007DD0  6C                 	db	108	;'l'
   315   007DD1  20                 	db	32
   316   007DD2  6C                 	db	108	;'l'
   317   007DD3  69                 	db	105	;'i'
   318   007DD4  6D                 	db	109	;'m'
   319   007DD5  69                 	db	105	;'i'
   320   007DD6  74                 	db	116	;'t'
   321   007DD7  65                 	db	101	;'e'
   322   007DD8  20                 	db	32
   323   007DD9  73                 	db	115	;'s'
   324   007DDA  6F                 	db	111	;'o'
   325   007DDB  70                 	db	112	;'p'
   326   007DDC  6F                 	db	111	;'o'
   327   007DDD  72                 	db	114	;'r'
   328   007DDE  74                 	db	116	;'t'
   329   007DDF  61                 	db	97	;'a'
   330   007DE0  64                 	db	100	;'d'
   331   007DE1  6F                 	db	111	;'o'
   332   007DE2  0D                 	db	13
   333   007DE3  0A                 	db	10
   334   007DE4  00                 	db	0
   335   007DE5                     STR_5:
   336   007DE5  35                 	db	53	;'5'
   337   007DE6  3A                 	db	58	;':'
   338   007DE7  20                 	db	32
   339   007DE8  43                 	db	67	;'C'
   340   007DE9  61                 	db	97	;'a'
   341   007DEA  6E                 	db	110	;'n'
   342   007DEB  74                 	db	116	;'t'
   343   007DEC  69                 	db	105	;'i'
   344   007DED  64                 	db	100	;'d'
   345   007DEE  61                 	db	97	;'a'
   346   007DEF  64                 	db	100	;'d'
   347   007DF0  20                 	db	32
   348   007DF1  64                 	db	100	;'d'
   349   007DF2  65                 	db	101	;'e'
   350   007DF3  20                 	db	32
   351   007DF4  75                 	db	117	;'u'
   352   007DF5  73                 	db	115	;'s'
   353   007DF6  75                 	db	117	;'u'
   354   007DF7  61                 	db	97	;'a'
   355   007DF8  72                 	db	114	;'r'
   356   007DF9  69                 	db	105	;'i'
   357   007DFA  6F                 	db	111	;'o'
   358   007DFB  73                 	db	115	;'s'
   359   007DFC  20                 	db	32
   360   007DFD  72                 	db	114	;'r'
   361   007DFE  65                 	db	101	;'e'
   362   007DFF  67                 	db	103	;'g'
   363   007E00  69                 	db	105	;'i'
   364   007E01  73                 	db	115	;'s'
   365   007E02  74                 	db	116	;'t'
   366   007E03  72                 	db	114	;'r'
   367   007E04  61                 	db	97	;'a'
   368   007E05  64                 	db	100	;'d'
   369   007E06  6F                 	db	111	;'o'
   370   007E07  73                 	db	115	;'s'
   371   007E08  0D                 	db	13
   372   007E09  0A                 	db	10
   373   007E0A  0D                 	db	13
   374   007E0B  0A                 	db	10
   375   007E0C  00                 	db	0
   376   007E0D                     STR_10:
   377   007E0D  49                 	db	73	;'I'
   378   007E0E  44                 	db	68	;'D'
   379   007E0F  20                 	db	32
   380   007E10  6E                 	db	110	;'n'
   381   007E11  6F                 	db	111	;'o'
   382   007E12  20                 	db	32
   383   007E13  65                 	db	101	;'e'
   384   007E14  6E                 	db	110	;'n'
   385   007E15  63                 	db	99	;'c'
   386   007E16  6F                 	db	111	;'o'
   387   007E17  6E                 	db	110	;'n'
   388   007E18  74                 	db	116	;'t'
   389   007E19  72                 	db	114	;'r'
   390   007E1A  61                 	db	97	;'a'
   391   007E1B  64                 	db	100	;'d'
   392   007E1C  61                 	db	97	;'a'
   393   007E1D  20                 	db	32
   394   007E1E  65                 	db	101	;'e'
   395   007E1F  6E                 	db	110	;'n'
   396   007E20  20                 	db	32
   397   007E21  6C                 	db	108	;'l'
   398   007E22  61                 	db	97	;'a'
   399   007E23  20                 	db	32
   400   007E24  62                 	db	98	;'b'
   401   007E25  61                 	db	97	;'a'
   402   007E26  73                 	db	115	;'s'
   403   007E27  65                 	db	101	;'e'
   404   007E28  20                 	db	32
   405   007E29  64                 	db	100	;'d'
   406   007E2A  65                 	db	101	;'e'
   407   007E2B  20                 	db	32
   408   007E2C  64                 	db	100	;'d'
   409   007E2D  61                 	db	97	;'a'
   410   007E2E  74                 	db	116	;'t'
   411   007E2F  6F                 	db	111	;'o'
   412   007E30  73                 	db	115	;'s'
   413   007E31  0D                 	db	13
   414   007E32  0A                 	db	10
   415   007E33  00                 	db	0
   416   007E34                     STR_29:
   417   007E34  55                 	db	85	;'U'
   418   007E35  73                 	db	115	;'s'
   419   007E36  75                 	db	117	;'u'
   420   007E37  61                 	db	97	;'a'
   421   007E38  72                 	db	114	;'r'
   422   007E39  69                 	db	105	;'i'
   423   007E3A  6F                 	db	111	;'o'
   424   007E3B  73                 	db	115	;'s'
   425   007E3C  20                 	db	32
   426   007E3D  65                 	db	101	;'e'
   427   007E3E  6C                 	db	108	;'l'
   428   007E3F  69                 	db	105	;'i'
   429   007E40  6D                 	db	109	;'m'
   430   007E41  69                 	db	105	;'i'
   431   007E42  6E                 	db	110	;'n'
   432   007E43  61                 	db	97	;'a'
   433   007E44  64                 	db	100	;'d'
   434   007E45  6F                 	db	111	;'o'
   435   007E46  73                 	db	115	;'s'
   436   007E47  20                 	db	32
   437   007E48  63                 	db	99	;'c'
   438   007E49  6F                 	db	111	;'o'
   439   007E4A  72                 	db	114	;'r'
   440   007E4B  72                 	db	114	;'r'
   441   007E4C  65                 	db	101	;'e'
   442   007E4D  63                 	db	99	;'c'
   443   007E4E  74                 	db	116	;'t'
   444   007E4F  61                 	db	97	;'a'
   445   007E50  6D                 	db	109	;'m'
   446   007E51  65                 	db	101	;'e'
   447   007E52  6E                 	db	110	;'n'
   448   007E53  74                 	db	116	;'t'
   449   007E54  65                 	db	101	;'e'
   450   007E55  0D                 	db	13
   451   007E56  0A                 	db	10
   452   007E57  00                 	db	0
   453   007E58                     STR_9:
   454   007E58  49                 	db	73	;'I'
   455   007E59  44                 	db	68	;'D'
   456   007E5A  20                 	db	32
   457   007E5B  65                 	db	101	;'e'
   458   007E5C  6E                 	db	110	;'n'
   459   007E5D  63                 	db	99	;'c'
   460   007E5E  6F                 	db	111	;'o'
   461   007E5F  6E                 	db	110	;'n'
   462   007E60  74                 	db	116	;'t'
   463   007E61  72                 	db	114	;'r'
   464   007E62  61                 	db	97	;'a'
   465   007E63  64                 	db	100	;'d'
   466   007E64  61                 	db	97	;'a'
   467   007E65  20                 	db	32
   468   007E66  65                 	db	101	;'e'
   469   007E67  6E                 	db	110	;'n'
   470   007E68  20                 	db	32
   471   007E69  6C                 	db	108	;'l'
   472   007E6A  61                 	db	97	;'a'
   473   007E6B  20                 	db	32
   474   007E6C  62                 	db	98	;'b'
   475   007E6D  61                 	db	97	;'a'
   476   007E6E  73                 	db	115	;'s'
   477   007E6F  65                 	db	101	;'e'
   478   007E70  20                 	db	32
   479   007E71  64                 	db	100	;'d'
   480   007E72  65                 	db	101	;'e'
   481   007E73  20                 	db	32
   482   007E74  64                 	db	100	;'d'
   483   007E75  61                 	db	97	;'a'
   484   007E76  74                 	db	116	;'t'
   485   007E77  6F                 	db	111	;'o'
   486   007E78  73                 	db	115	;'s'
   487   007E79  0D                 	db	13
   488   007E7A  0A                 	db	10
   489   007E7B  00                 	db	0
   490   007E7C                     STR_21:
   491   007E7C  45                 	db	69	;'E'
   492   007E7D  72                 	db	114	;'r'
   493   007E7E  72                 	db	114	;'r'
   494   007E7F  6F                 	db	111	;'o'
   495   007E80  72                 	db	114	;'r'
   496   007E81  20                 	db	32
   497   007E82  61                 	db	97	;'a'
   498   007E83  6C                 	db	108	;'l'
   499   007E84  20                 	db	32
   500   007E85  65                 	db	101	;'e'
   501   007E86  73                 	db	115	;'s'
   502   007E87  63                 	db	99	;'c'
   503   007E88  72                 	db	114	;'r'
   504   007E89  69                 	db	105	;'i'
   505   007E8A  62                 	db	98	;'b'
   506   007E8B  69                 	db	105	;'i'
   507   007E8C  72                 	db	114	;'r'
   508   007E8D  20                 	db	32
   509   007E8E  65                 	db	101	;'e'
   510   007E8F  6E                 	db	110	;'n'
   511   007E90  20                 	db	32
   512   007E91  6C                 	db	108	;'l'
   513   007E92  61                 	db	97	;'a'
   514   007E93  20                 	db	32
   515   007E94  6D                 	db	109	;'m'
   516   007E95  65                 	db	101	;'e'
   517   007E96  6D                 	db	109	;'m'
   518   007E97  6F                 	db	111	;'o'
   519   007E98  72                 	db	114	;'r'
   520   007E99  69                 	db	105	;'i'
   521   007E9A  61                 	db	97	;'a'
   522   007E9B  0D                 	db	13
   523   007E9C  0A                 	db	10
   524   007E9D  00                 	db	0
   525   007E9E                     STR_17:
   526   007E9E  48                 	db	72	;'H'
   527   007E9F  75                 	db	117	;'u'
   528   007EA0  65                 	db	101	;'e'
   529   007EA1  6C                 	db	108	;'l'
   530   007EA2  6C                 	db	108	;'l'
   531   007EA3  61                 	db	97	;'a'
   532   007EA4  20                 	db	32
   533   007EA5  61                 	db	97	;'a'
   534   007EA6  6C                 	db	108	;'l'
   535   007EA7  6D                 	db	109	;'m'
   536   007EA8  61                 	db	97	;'a'
   537   007EA9  63                 	db	99	;'c'
   538   007EAA  65                 	db	101	;'e'
   539   007EAB  6E                 	db	110	;'n'
   540   007EAC  61                 	db	97	;'a'
   541   007EAD  64                 	db	100	;'d'
   542   007EAE  61                 	db	97	;'a'
   543   007EAF  20                 	db	32
   544   007EB0  63                 	db	99	;'c'
   545   007EB1  6F                 	db	111	;'o'
   546   007EB2  72                 	db	114	;'r'
   547   007EB3  72                 	db	114	;'r'
   548   007EB4  65                 	db	101	;'e'
   549   007EB5  63                 	db	99	;'c'
   550   007EB6  74                 	db	116	;'t'
   551   007EB7  61                 	db	97	;'a'
   552   007EB8  6D                 	db	109	;'m'
   553   007EB9  65                 	db	101	;'e'
   554   007EBA  6E                 	db	110	;'n'
   555   007EBB  74                 	db	116	;'t'
   556   007EBC  65                 	db	101	;'e'
   557   007EBD  0D                 	db	13
   558   007EBE  0A                 	db	10
   559   007EBF  00                 	db	0
   560   007EC0                     STR_24:
   561   007EC0  48                 	db	72	;'H'
   562   007EC1  75                 	db	117	;'u'
   563   007EC2  65                 	db	101	;'e'
   564   007EC3  6C                 	db	108	;'l'
   565   007EC4  6C                 	db	108	;'l'
   566   007EC5  61                 	db	97	;'a'
   567   007EC6  20                 	db	32
   568   007EC7  65                 	db	101	;'e'
   569   007EC8  6C                 	db	108	;'l'
   570   007EC9  69                 	db	105	;'i'
   571   007ECA  6D                 	db	109	;'m'
   572   007ECB  69                 	db	105	;'i'
   573   007ECC  6E                 	db	110	;'n'
   574   007ECD  61                 	db	97	;'a'
   575   007ECE  64                 	db	100	;'d'
   576   007ECF  61                 	db	97	;'a'
   577   007ED0  20                 	db	32
   578   007ED1  63                 	db	99	;'c'
   579   007ED2  6F                 	db	111	;'o'
   580   007ED3  72                 	db	114	;'r'
   581   007ED4  72                 	db	114	;'r'
   582   007ED5  65                 	db	101	;'e'
   583   007ED6  63                 	db	99	;'c'
   584   007ED7  74                 	db	116	;'t'
   585   007ED8  61                 	db	97	;'a'
   586   007ED9  6D                 	db	109	;'m'
   587   007EDA  65                 	db	101	;'e'
   588   007EDB  6E                 	db	110	;'n'
   589   007EDC  74                 	db	116	;'t'
   590   007EDD  65                 	db	101	;'e'
   591   007EDE  0D                 	db	13
   592   007EDF  0A                 	db	10
   593   007EE0  00                 	db	0
   594   007EE1                     STR_19:
   595   007EE1  45                 	db	69	;'E'
   596   007EE2  72                 	db	114	;'r'
   597   007EE3  72                 	db	114	;'r'
   598   007EE4  6F                 	db	111	;'o'
   599   007EE5  72                 	db	114	;'r'
   600   007EE6  20                 	db	32
   601   007EE7  61                 	db	97	;'a'
   602   007EE8  6C                 	db	108	;'l'
   603   007EE9  20                 	db	32
   604   007EEA  72                 	db	114	;'r'
   605   007EEB  65                 	db	101	;'e'
   606   007EEC  63                 	db	99	;'c'
   607   007EED  69                 	db	105	;'i'
   608   007EEE  62                 	db	98	;'b'
   609   007EEF  69                 	db	105	;'i'
   610   007EF0  72                 	db	114	;'r'
   611   007EF1  20                 	db	32
   612   007EF2  65                 	db	101	;'e'
   613   007EF3  6C                 	db	108	;'l'
   614   007EF4  20                 	db	32
   615   007EF5  70                 	db	112	;'p'
   616   007EF6  61                 	db	97	;'a'
   617   007EF7  71                 	db	113	;'q'
   618   007EF8  75                 	db	117	;'u'
   619   007EF9  65                 	db	101	;'e'
   620   007EFA  74                 	db	116	;'t'
   621   007EFB  65                 	db	101	;'e'
   622   007EFC  0D                 	db	13
   623   007EFD  0A                 	db	10
   624   007EFE  00                 	db	0
   625   007EFF                     STR_16:
   626   007EFF  43                 	db	67	;'C'
   627   007F00  6F                 	db	111	;'o'
   628   007F01  6C                 	db	108	;'l'
   629   007F02  6F                 	db	111	;'o'
   630   007F03  63                 	db	99	;'c'
   631   007F04  61                 	db	97	;'a'
   632   007F05  72                 	db	114	;'r'
   633   007F06  20                 	db	32
   634   007F07  64                 	db	100	;'d'
   635   007F08  65                 	db	101	;'e'
   636   007F09  64                 	db	100	;'d'
   637   007F0A  6F                 	db	111	;'o'
   638   007F0B  20                 	db	32
   639   007F0C  64                 	db	100	;'d'
   640   007F0D  65                 	db	101	;'e'
   641   007F0E  20                 	db	32
   642   007F0F  6E                 	db	110	;'n'
   643   007F10  75                 	db	117	;'u'
   644   007F11  65                 	db	101	;'e'
   645   007F12  76                 	db	118	;'v'
   646   007F13  6F                 	db	111	;'o'
   647   007F14  2E                 	db	46
   648   007F15  2E                 	db	46
   649   007F16  2E                 	db	46
   650   007F17  0D                 	db	13
   651   007F18  0A                 	db	10
   652   007F19  00                 	db	0
   653   007F1A                     STR_27:
   654   007F1A  45                 	db	69	;'E'
   655   007F1B  72                 	db	114	;'r'
   656   007F1C  72                 	db	114	;'r'
   657   007F1D  6F                 	db	111	;'o'
   658   007F1E  72                 	db	114	;'r'
   659   007F1F  20                 	db	32
   660   007F20  61                 	db	97	;'a'
   661   007F21  6C                 	db	108	;'l'
   662   007F22  20                 	db	32
   663   007F23  65                 	db	101	;'e'
   664   007F24  6C                 	db	108	;'l'
   665   007F25  69                 	db	105	;'i'
   666   007F26  6D                 	db	109	;'m'
   667   007F27  69                 	db	105	;'i'
   668   007F28  6E                 	db	110	;'n'
   669   007F29  61                 	db	97	;'a'
   670   007F2A  72                 	db	114	;'r'
   671   007F2B  20                 	db	32
   672   007F2C  68                 	db	104	;'h'
   673   007F2D  75                 	db	117	;'u'
   674   007F2E  65                 	db	101	;'e'
   675   007F2F  6C                 	db	108	;'l'
   676   007F30  6C                 	db	108	;'l'
   677   007F31  61                 	db	97	;'a'
   678   007F32  0D                 	db	13
   679   007F33  0A                 	db	10
   680   007F34  00                 	db	0
   681   007F35                     STR_33:
   682   007F35  55                 	db	85	;'U'
   683   007F36  73                 	db	115	;'s'
   684   007F37  75                 	db	117	;'u'
   685   007F38  61                 	db	97	;'a'
   686   007F39  72                 	db	114	;'r'
   687   007F3A  69                 	db	105	;'i'
   688   007F3B  6F                 	db	111	;'o'
   689   007F3C  73                 	db	115	;'s'
   690   007F3D  20                 	db	32
   691   007F3E  72                 	db	114	;'r'
   692   007F3F  65                 	db	101	;'e'
   693   007F40  67                 	db	103	;'g'
   694   007F41  69                 	db	105	;'i'
   695   007F42  73                 	db	115	;'s'
   696   007F43  74                 	db	116	;'t'
   697   007F44  72                 	db	114	;'r'
   698   007F45  61                 	db	97	;'a'
   699   007F46  64                 	db	100	;'d'
   700   007F47  6F                 	db	111	;'o'
   701   007F48  73                 	db	115	;'s'
   702   007F49  3A                 	db	58	;':'
   703   007F4A  20                 	db	32
   704   007F4B  25                 	db	37
   705   007F4C  75                 	db	117	;'u'
   706   007F4D  0D                 	db	13
   707   007F4E  0A                 	db	10
   708   007F4F  00                 	db	0
   709   007F50                     STR_2:
   710   007F50  32                 	db	50	;'2'
   711   007F51  3A                 	db	58	;':'
   712   007F52  20                 	db	32
   713   007F53  52                 	db	82	;'R'
   714   007F54  65                 	db	101	;'e'
   715   007F55  67                 	db	103	;'g'
   716   007F56  69                 	db	105	;'i'
   717   007F57  73                 	db	115	;'s'
   718   007F58  74                 	db	116	;'t'
   719   007F59  72                 	db	114	;'r'
   720   007F5A  61                 	db	97	;'a'
   721   007F5B  72                 	db	114	;'r'
   722   007F5C  20                 	db	32
   723   007F5D  68                 	db	104	;'h'
   724   007F5E  75                 	db	117	;'u'
   725   007F5F  65                 	db	101	;'e'
   726   007F60  6C                 	db	108	;'l'
   727   007F61  6C                 	db	108	;'l'
   728   007F62  61                 	db	97	;'a'
   729   007F63  0D                 	db	13
   730   007F64  0A                 	db	10
   731   007F65  00                 	db	0
   732   007F66                     STR_3:
   733   007F66  33                 	db	51	;'3'
   734   007F67  3A                 	db	58	;':'
   735   007F68  20                 	db	32
   736   007F69  45                 	db	69	;'E'
   737   007F6A  6C                 	db	108	;'l'
   738   007F6B  69                 	db	105	;'i'
   739   007F6C  6D                 	db	109	;'m'
   740   007F6D  69                 	db	105	;'i'
   741   007F6E  6E                 	db	110	;'n'
   742   007F6F  61                 	db	97	;'a'
   743   007F70  72                 	db	114	;'r'
   744   007F71  20                 	db	32
   745   007F72  68                 	db	104	;'h'
   746   007F73  75                 	db	117	;'u'
   747   007F74  65                 	db	101	;'e'
   748   007F75  6C                 	db	108	;'l'
   749   007F76  6C                 	db	108	;'l'
   750   007F77  61                 	db	97	;'a'
   751   007F78  0D                 	db	13
   752   007F79  0A                 	db	10
   753   007F7A  00                 	db	0
   754   007F7B                     STR_31:
   755   007F7B  45                 	db	69	;'E'
   756   007F7C  72                 	db	114	;'r'
   757   007F7D  72                 	db	114	;'r'
   758   007F7E  6F                 	db	111	;'o'
   759   007F7F  72                 	db	114	;'r'
   760   007F80  20                 	db	32
   761   007F81  61                 	db	97	;'a'
   762   007F82  6C                 	db	108	;'l'
   763   007F83  20                 	db	32
   764   007F84  65                 	db	101	;'e'
   765   007F85  6C                 	db	108	;'l'
   766   007F86  69                 	db	105	;'i'
   767   007F87  6D                 	db	109	;'m'
   768   007F88  69                 	db	105	;'i'
   769   007F89  6E                 	db	110	;'n'
   770   007F8A  61                 	db	97	;'a'
   771   007F8B  72                 	db	114	;'r'
   772   007F8C  0D                 	db	13
   773   007F8D  0A                 	db	10
   774   007F8E  00                 	db	0
   775   007F8F                     STR_7:
   776   007F8F  48                 	db	72	;'H'
   777   007F90  75                 	db	117	;'u'
   778   007F91  65                 	db	101	;'e'
   779   007F92  6C                 	db	108	;'l'
   780   007F93  6C                 	db	108	;'l'
   781   007F94  61                 	db	97	;'a'
   782   007F95  20                 	db	32
   783   007F96  64                 	db	100	;'d'
   784   007F97  65                 	db	101	;'e'
   785   007F98  74                 	db	116	;'t'
   786   007F99  65                 	db	101	;'e'
   787   007F9A  63                 	db	99	;'c'
   788   007F9B  74                 	db	116	;'t'
   789   007F9C  61                 	db	97	;'a'
   790   007F9D  64                 	db	100	;'d'
   791   007F9E  61                 	db	97	;'a'
   792   007F9F  0D                 	db	13
   793   007FA0  0A                 	db	10
   794   007FA1  00                 	db	0
   795   007FA2                     STR_4:
   796   007FA2  34                 	db	52	;'4'
   797   007FA3  3A                 	db	58	;':'
   798   007FA4  20                 	db	32
   799   007FA5  45                 	db	69	;'E'
   800   007FA6  6C                 	db	108	;'l'
   801   007FA7  69                 	db	105	;'i'
   802   007FA8  6D                 	db	109	;'m'
   803   007FA9  69                 	db	105	;'i'
   804   007FAA  6E                 	db	110	;'n'
   805   007FAB  61                 	db	97	;'a'
   806   007FAC  72                 	db	114	;'r'
   807   007FAD  20                 	db	32
   808   007FAE  74                 	db	116	;'t'
   809   007FAF  6F                 	db	111	;'o'
   810   007FB0  64                 	db	100	;'d'
   811   007FB1  6F                 	db	111	;'o'
   812   007FB2  0D                 	db	13
   813   007FB3  0A                 	db	10
   814   007FB4  00                 	db	0
   815   007FB5                     STR_6:
   816   007FB5  43                 	db	67	;'C'
   817   007FB6  6F                 	db	111	;'o'
   818   007FB7  6C                 	db	108	;'l'
   819   007FB8  6F                 	db	111	;'o'
   820   007FB9  63                 	db	99	;'c'
   821   007FBA  61                 	db	97	;'a'
   822   007FBB  72                 	db	114	;'r'
   823   007FBC  20                 	db	32
   824   007FBD  64                 	db	100	;'d'
   825   007FBE  65                 	db	101	;'e'
   826   007FBF  64                 	db	100	;'d'
   827   007FC0  6F                 	db	111	;'o'
   828   007FC1  2E                 	db	46
   829   007FC2  2E                 	db	46
   830   007FC3  2E                 	db	46
   831   007FC4  0D                 	db	13
   832   007FC5  0A                 	db	10
   833   007FC6  00                 	db	0
   834   007FC7                     STR_12:
   835   007FC7  49                 	db	73	;'I'
   836   007FC8  6E                 	db	110	;'n'
   837   007FC9  67                 	db	103	;'g'
   838   007FCA  72                 	db	114	;'r'
   839   007FCB  65                 	db	101	;'e'
   840   007FCC  73                 	db	115	;'s'
   841   007FCD  61                 	db	97	;'a'
   842   007FCE  72                 	db	114	;'r'
   843   007FCF  20                 	db	32
   844   007FD0  49                 	db	73	;'I'
   845   007FD1  44                 	db	68	;'D'
   846   007FD2  3A                 	db	58	;':'
   847   007FD3  20                 	db	32
   848   007FD4  0D                 	db	13
   849   007FD5  0A                 	db	10
   850   007FD6  00                 	db	0
   851   007FD7                     STR_1:
   852   007FD7  31                 	db	49	;'1'
   853   007FD8  3A                 	db	58	;':'
   854   007FD9  20                 	db	32
   855   007FDA  42                 	db	66	;'B'
   856   007FDB  75                 	db	117	;'u'
   857   007FDC  73                 	db	115	;'s'
   858   007FDD  63                 	db	99	;'c'
   859   007FDE  61                 	db	97	;'a'
   860   007FDF  72                 	db	114	;'r'
   861   007FE0  20                 	db	32
   862   007FE1  49                 	db	73	;'I'
   863   007FE2  44                 	db	68	;'D'
   864   007FE3  0D                 	db	13
   865   007FE4  0A                 	db	10
   866   007FE5  00                 	db	0
   867   007FE6                     STR_15:
   868   007FE6  52                 	db	82	;'R'
   869   007FE7  65                 	db	101	;'e'
   870   007FE8  6D                 	db	109	;'m'
   871   007FE9  6F                 	db	111	;'o'
   872   007FEA  76                 	db	118	;'v'
   873   007FEB  65                 	db	101	;'e'
   874   007FEC  72                 	db	114	;'r'
   875   007FED  20                 	db	32
   876   007FEE  64                 	db	100	;'d'
   877   007FEF  65                 	db	101	;'e'
   878   007FF0  64                 	db	100	;'d'
   879   007FF1  6F                 	db	111	;'o'
   880   007FF2  0D                 	db	13
   881   007FF3  0A                 	db	10
   882   007FF4  00                 	db	0
   883   007FF5                     STR_8:
   884   007FF5  49                 	db	73	;'I'
   885   007FF6  44                 	db	68	;'D'
   886   007FF7  3A                 	db	58	;':'
   887   007FF8  20                 	db	32
   888   007FF9  25                 	db	37
   889   007FFA  75                 	db	117	;'u'
   890   007FFB  0D                 	db	13
   891   007FFC  0A                 	db	10
   892   007FFD  00                 	db	0
   893   007FFE  00                 	db	0	; dummy byte at the end
   894   000000                     
   895                           ; #config settings
   896                           
   897                           	psect	cinit
   898   000CA8                     __pcinit:
   899                           	callstack 0
   900   000CA8                     start_initialization:
   901                           	callstack 0
   902   000CA8                     __initialization:
   903                           	callstack 0
   904                           
   905                           ; Initialize objects allocated to BANK0 (48 bytes)
   906                           ; load TBLPTR registers with __pidataBANK0
   907   000CA8  0E48               	movlw	low __pidataBANK0
   908   000CAA  6EF6               	movwf	tblptrl,c
   909   000CAC  0E10               	movlw	high __pidataBANK0
   910   000CAE  6EF7               	movwf	tblptrh,c
   911   000CB0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   912   000CB2  6EF8               	movwf	tblptru,c
   913   000CB4  EE00  F0A8         	lfsr	0,__pdataBANK0
   914   000CB8  EE10 F030          	lfsr	1,48
   915   000CBC                     copy_data0:
   916   000CBC  0009               	tblrd		*+
   917   000CBE  CFF5 FFEE          	movff	tablat,postinc0
   918   000CC2  50E5               	movf	postdec1,w,c
   919   000CC4  50E1               	movf	fsr1l,w,c
   920   000CC6  E1FA               	bnz	copy_data0
   921                           
   922                           ; Clear objects allocated to BANK1 (32 bytes)
   923   000CC8  EE01  F000         	lfsr	0,__pbssBANK1
   924   000CCC  0E20               	movlw	32
   925   000CCE                     clear_0:
   926   000CCE  6AEE               	clrf	postinc0,c
   927   000CD0  06E8               	decf	wreg,f,c
   928   000CD2  E1FD               	bnz	clear_0
   929                           
   930                           ; Clear objects allocated to BANK0 (72 bytes)
   931   000CD4  EE00  F060         	lfsr	0,__pbssBANK0
   932   000CD8  0E48               	movlw	72
   933   000CDA                     clear_1:
   934   000CDA  6AEE               	clrf	postinc0,c
   935   000CDC  06E8               	decf	wreg,f,c
   936   000CDE  E1FD               	bnz	clear_1
   937                           
   938                           ; Clear objects allocated to COMRAM (6 bytes)
   939   000CE0  6A5C               	clrf	(__pbssCOMRAM+5)& (0+255),c
   940   000CE2  6A5B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   941   000CE4  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   942   000CE6  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   943   000CE8  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   944   000CEA  6A57               	clrf	__pbssCOMRAM& (0+255),c
   945   000CEC                     end_of_initialization:
   946                           	callstack 0
   947   000CEC                     __end_of__initialization:
   948                           	callstack 0
   949   000CEC  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   950   000CEE  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   951   000CF0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   952   000CF2  6EF8               	movwf	tblptru,c
   953   000CF4  0100               	movlb	0
   954   000CF6  EF09  F000         	goto	_main	;jump to C main() function
   955                           
   956                           	psect	bssCOMRAM
   957   000057                     __pbssCOMRAM:
   958                           	callstack 0
   959   000057                     _checksum:
   960                           	callstack 0
   961   000057                     	ds	2
   962   000059                     _cont_rx:
   963                           	callstack 0
   964   000059                     	ds	1
   965   00005A                     _c_empty:
   966                           	callstack 0
   967   00005A                     	ds	1
   968   00005B                     _n_users:
   969                           	callstack 0
   970   00005B                     	ds	1
   971   00005C                     _enter_id:
   972                           	callstack 0
   973   00005C                     	ds	1
   974                           
   975                           	psect	bssBANK0
   976   000060                     __pbssBANK0:
   977                           	callstack 0
   978   000060                     _request_fingerprint:
   979                           	callstack 0
   980   000060                     	ds	28
   981   00007C                     _width:
   982                           	callstack 0
   983   00007C                     	ds	2
   984   00007E                     _prec:
   985                           	callstack 0
   986   00007E                     	ds	2
   987   000080                     _flags:
   988                           	callstack 0
   989   000080                     	ds	1
   990   000081                     _finger_size_l:
   991                           	callstack 0
   992   000081                     	ds	1
   993   000082                     _c_delete:
   994                           	callstack 0
   995   000082                     	ds	1
   996   000083                     _c_store:
   997                           	callstack 0
   998   000083                     	ds	1
   999   000084                     _buf_tx:
  1000                           	callstack 0
  1001   000084                     	ds	30
  1002   0000A2                     _buf_rx:
  1003                           	callstack 0
  1004   0000A2                     	ds	6
  1005                           
  1006                           	psect	dataBANK0
  1007   0000A8                     __pdataBANK0:
  1008                           	callstack 0
  1009   0000A8                     _finger_sh:
  1010                           	callstack 0
  1011   0000A8                     	ds	17
  1012   0000B9                     _finger_delete:
  1013                           	callstack 0
  1014   0000B9                     	ds	16
  1015   0000C9                     _finger_store_model:
  1016                           	callstack 0
  1017   0000C9                     	ds	15
  1018                           
  1019                           	psect	bssBANK1
  1020   000100                     __pbssBANK1:
  1021                           	callstack 0
  1022   000100                     _dbuf:
  1023                           	callstack 0
  1024   000100                     	ds	32
  1025                           
  1026                           	psect	cstackBANK0
  1027   0000D8                     __pcstackBANK0:
  1028                           	callstack 0
  1029   0000D8                     sprintf@ap:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x0
  1033   0000D8                     	ds	1
  1034   0000D9                     sprintf@f:
  1035                           	callstack 0
  1036                           
  1037                           ; 11 bytes @ 0x1
  1038   0000D9                     	ds	11
  1039   0000E4                     main@id:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0xC
  1043   0000E4                     	ds	2
  1044                           
  1045                           	psect	cstackCOMRAM
  1046   000001                     __pcstackCOMRAM:
  1047                           	callstack 0
  1048   000001                     ??_INT_UART_RX:
  1049   000001                     
  1050                           ; 1 bytes @ 0x0
  1051   000001                     	ds	2
  1052   000003                     ?_isspace:
  1053                           	callstack 0
  1054   000003                     ?_isdigit:
  1055                           	callstack 0
  1056   000003                     ?___wmul:
  1057                           	callstack 0
  1058   000003                     ?___lldiv:
  1059                           	callstack 0
  1060   000003                     ?___lodiv:
  1061                           	callstack 0
  1062   000003                     ?___lomod:
  1063                           	callstack 0
  1064   000003                     S_Uart_Send_Char@Data:
  1065                           	callstack 0
  1066   000003                     S_Uart_Read@Data:
  1067                           	callstack 0
  1068   000003                     Fingerprint_Send_Buffer@buf:
  1069                           	callstack 0
  1070   000003                     ___wmul@multiplier:
  1071                           	callstack 0
  1072   000003                     isdigit@c:
  1073                           	callstack 0
  1074   000003                     isspace@c:
  1075                           	callstack 0
  1076   000003                     fputc@c:
  1077                           	callstack 0
  1078   000003                     ___lldiv@dividend:
  1079                           	callstack 0
  1080   000003                     ___lodiv@dividend:
  1081                           	callstack 0
  1082   000003                     ___lomod@dividend:
  1083                           	callstack 0
  1084                           
  1085                           ; 8 bytes @ 0x2
  1086   000003                     	ds	1
  1087   000004                     S_Uart_Send_Char@mask:
  1088                           	callstack 0
  1089   000004                     S_Uart_Read@mask:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x3
  1093   000004                     	ds	1
  1094   000005                     ??_isspace:
  1095   000005                     ??_isdigit:
  1096   000005                     Fingerprint_Send_Buffer@size:
  1097                           	callstack 0
  1098   000005                     S_Uart_Read_String@str:
  1099                           	callstack 0
  1100   000005                     fputc@fp:
  1101                           	callstack 0
  1102   000005                     S_Uart_Send_String@Text:
  1103                           	callstack 0
  1104   000005                     ___wmul@multiplicand:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x4
  1108   000005                     	ds	1
  1109   000006                     ??_fputc:
  1110   000006                     Fingerprint_Send_Buffer@i:
  1111                           	callstack 0
  1112   000006                     S_Uart_Read_String@size:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x5
  1116   000006                     	ds	1
  1117   000007                     ??_Fingerprint_Read_Parameters:
  1118   000007                     ??_Fingerprint_GetImage:
  1119   000007                     ??_Fingerprint_Image2Tz:
  1120   000007                     ??_Fingerprint_GetModel:
  1121   000007                     ??_Fingerprint_StoreModel:
  1122   000007                     ??_Fingerprint_DeleteModel:
  1123   000007                     ??_Fingerprint_EmptyDatabase:
  1124   000007                     ??_Fingerprint_GetTemplateCount:
  1125   000007                     ??_Fingerprint_Search:
  1126   000007                     S_Uart_Read_String@c:
  1127                           	callstack 0
  1128   000007                     _isspace$1209:
  1129                           	callstack 0
  1130   000007                     ___wmul@product:
  1131                           	callstack 0
  1132   000007                     ___lldiv@divisor:
  1133                           	callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x6
  1136   000007                     	ds	1
  1137   000008                     Fingerprint_StoreModel@id:
  1138                           	callstack 0
  1139   000008                     Fingerprint_DeleteModel@id:
  1140                           	callstack 0
  1141   000008                     S_Uart_Read_String@cont_buf:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x7
  1145   000008                     	ds	1
  1146   000009                     ?_atoi:
  1147                           	callstack 0
  1148   000009                     Fingerprint_Image2Tz@n:
  1149                           	callstack 0
  1150   000009                     Fingerprint_GetTemplateCount@usr:
  1151                           	callstack 0
  1152   000009                     atoi@s:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x8
  1156   000009                     	ds	1
  1157   00000A                     ?_Fingerprint_Get_ID:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x9
  1161   00000A                     	ds	1
  1162   00000B                     ??_atoi:
  1163   00000B                     fputs@s:
  1164                           	callstack 0
  1165   00000B                     ___lldiv@quotient:
  1166                           	callstack 0
  1167   00000B                     ___lodiv@divisor:
  1168                           	callstack 0
  1169   00000B                     ___lomod@divisor:
  1170                           	callstack 0
  1171                           
  1172                           ; 8 bytes @ 0xA
  1173   00000B                     	ds	1
  1174   00000C                     ??_Fingerprint_Get_ID:
  1175                           
  1176                           ; 1 bytes @ 0xB
  1177   00000C                     	ds	1
  1178   00000D                     fputs@fp:
  1179                           	callstack 0
  1180                           
  1181                           ; 1 bytes @ 0xC
  1182   00000D                     	ds	1
  1183   00000E                     fputs@c:
  1184                           	callstack 0
  1185   00000E                     Fingerprint_Get_ID@page_id:
  1186                           	callstack 0
  1187   00000E                     atoi@neg:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0xD
  1191   00000E                     	ds	1
  1192   00000F                     ___lldiv@counter:
  1193                           	callstack 0
  1194   00000F                     fputs@i:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0xE
  1198   00000F                     	ds	1
  1199   000010                     atoi@n:
  1200                           	callstack 0
  1201   000010                     Fingerprint_Init@baud:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0xF
  1205   000010                     	ds	1
  1206   000011                     pad@fp:
  1207                           	callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x10
  1210   000011                     	ds	1
  1211   000012                     pad@buf:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x11
  1215   000012                     	ds	1
  1216   000013                     ___lomod@counter:
  1217                           	callstack 0
  1218   000013                     ___lodiv@quotient:
  1219                           	callstack 0
  1220                           
  1221                           ; 8 bytes @ 0x12
  1222   000013                     	ds	1
  1223   000014                     ??_Fingerprint_Init:
  1224   000014                     pad@p:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x13
  1228   000014                     	ds	2
  1229   000016                     ??_pad:
  1230                           
  1231                           ; 1 bytes @ 0x15
  1232   000016                     	ds	1
  1233   000017                     pad@i:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x16
  1237   000017                     	ds	1
  1238   000018                     Fingerprint_Init@vx:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x17
  1242   000018                     	ds	1
  1243   000019                     pad@w:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x18
  1247   000019                     	ds	2
  1248   00001B                     ___lodiv@counter:
  1249                           	callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x1A
  1252   00001B                     	ds	1
  1253   00001C                     utoa@fp:
  1254                           	callstack 0
  1255                           
  1256                           ; 1 bytes @ 0x1B
  1257   00001C                     	ds	1
  1258   00001D                     utoa@d:
  1259                           	callstack 0
  1260                           
  1261                           ; 8 bytes @ 0x1C
  1262   00001D                     	ds	8
  1263   000025                     ??_utoa:
  1264                           
  1265                           ; 1 bytes @ 0x24
  1266   000025                     	ds	8
  1267   00002D                     utoa@w:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x2C
  1271   00002D                     	ds	2
  1272   00002F                     utoa@p:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x2E
  1276   00002F                     	ds	2
  1277   000031                     utoa@n:
  1278                           	callstack 0
  1279                           
  1280                           ; 8 bytes @ 0x30
  1281   000031                     	ds	8
  1282   000039                     utoa@i:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x38
  1286   000039                     	ds	2
  1287   00003B                     vfpfcnvrt@fp:
  1288                           	callstack 0
  1289                           
  1290                           ; 1 bytes @ 0x3A
  1291   00003B                     	ds	1
  1292   00003C                     vfpfcnvrt@fmt:
  1293                           	callstack 0
  1294                           
  1295                           ; 1 bytes @ 0x3B
  1296   00003C                     	ds	1
  1297   00003D                     vfpfcnvrt@ap:
  1298                           	callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x3C
  1301   00003D                     	ds	1
  1302   00003E                     ??_vfpfcnvrt:
  1303                           
  1304                           ; 1 bytes @ 0x3D
  1305   00003E                     	ds	2
  1306   000040                     vfpfcnvrt@convarg:
  1307                           	callstack 0
  1308                           
  1309                           ; 8 bytes @ 0x3F
  1310   000040                     	ds	8
  1311   000048                     vfpfcnvrt@cp:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x47
  1315   000048                     	ds	2
  1316   00004A                     ?_vfprintf:
  1317                           	callstack 0
  1318   00004A                     vfprintf@fp:
  1319                           	callstack 0
  1320                           
  1321                           ; 1 bytes @ 0x49
  1322   00004A                     	ds	1
  1323   00004B                     vfprintf@fmt:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x4A
  1327   00004B                     	ds	2
  1328   00004D                     vfprintf@ap:
  1329                           	callstack 0
  1330                           
  1331                           ; 1 bytes @ 0x4C
  1332   00004D                     	ds	1
  1333   00004E                     vfprintf@cfmt:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x4D
  1337   00004E                     	ds	2
  1338   000050                     ?_sprintf:
  1339                           	callstack 0
  1340   000050                     sprintf@s:
  1341                           	callstack 0
  1342                           
  1343                           ; 1 bytes @ 0x4F
  1344   000050                     	ds	1
  1345   000051                     sprintf@fmt:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x50
  1349   000051                     	ds	4
  1350   000055                     ??_main:
  1351                           
  1352                           ; 1 bytes @ 0x54
  1353   000055                     	ds	2
  1354                           
  1355 ;;
  1356 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1357 ;;
  1358 ;; *************** function _main *****************
  1359 ;; Defined at:
  1360 ;;		line 31 in file "Sensor_Huella.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  id              2   12[BANK0 ] unsigned short 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0
  1375 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1376 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1377 ;;      Totals:         2       2       0       0       0       0       0       0       0
  1378 ;;Total ram usage:        4 bytes
  1379 ;; Hardware stack levels required when called: 9
  1380 ;; This function calls:
  1381 ;;		_Fingerprint_DeleteModel
  1382 ;;		_Fingerprint_EmptyDatabase
  1383 ;;		_Fingerprint_GetImage
  1384 ;;		_Fingerprint_GetModel
  1385 ;;		_Fingerprint_GetTemplateCount
  1386 ;;		_Fingerprint_Get_ID
  1387 ;;		_Fingerprint_Image2Tz
  1388 ;;		_Fingerprint_Init
  1389 ;;		_Fingerprint_Read_Parameters
  1390 ;;		_Fingerprint_StoreModel
  1391 ;;		_S_Uart_Init
  1392 ;;		_S_Uart_Read_String
  1393 ;;		_S_Uart_Send_String
  1394 ;;		_atoi
  1395 ;;		_sprintf
  1396 ;; This function is called by:
  1397 ;;		Startup code after reset
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text0
  1402   000012                     __ptext0:
  1403                           	callstack 0
  1404   000012                     _main:
  1405                           	callstack 22
  1406                           
  1407                           ;Sensor_Huella.c: 33:     ADCON1bits.PCFG = 0x0F;
  1408                           
  1409                           ;incstack = 0
  1410   000012  0E0F               	movlw	15
  1411   000014  12C1               	iorwf	193,f,c	;volatile
  1412                           
  1413                           ;Sensor_Huella.c: 34:     TRISDbits.RD6 = 0;
  1414   000016  9C95               	bcf	149,6,c	;volatile
  1415                           
  1416                           ;Sensor_Huella.c: 35:     TRISDbits.RD7 = 0;
  1417   000018  9E95               	bcf	149,7,c	;volatile
  1418                           
  1419                           ;Sensor_Huella.c: 36:     LATDbits.LD6 = 0;
  1420   00001A  9C8C               	bcf	140,6,c	;volatile
  1421                           
  1422                           ;Sensor_Huella.c: 37:     LATDbits.LD7 = 0;
  1423   00001C  9E8C               	bcf	140,7,c	;volatile
  1424                           
  1425                           ;Sensor_Huella.c: 39:     S_Uart_Init();
  1426   00001E  EC76  F008         	call	_S_Uart_Init	;wreg free
  1427                           
  1428                           ;Sensor_Huella.c: 40:     Fingerprint_Init(57600);
  1429   000022  0E00               	movlw	0
  1430   000024  6E10               	movwf	Fingerprint_Init@baud^0,c
  1431   000026  0EE1               	movlw	225
  1432   000028  6E11               	movwf	(Fingerprint_Init@baud+1)^0,c
  1433   00002A  0E00               	movlw	0
  1434   00002C  6E12               	movwf	(Fingerprint_Init@baud+2)^0,c
  1435   00002E  0E00               	movlw	0
  1436   000030  6E13               	movwf	(Fingerprint_Init@baud+3)^0,c
  1437   000032  EC77  F004         	call	_Fingerprint_Init	;wreg free
  1438                           
  1439                           ;Sensor_Huella.c: 41:     Fingerprint_Read_Parameters();
  1440   000036  EC6B  F007         	call	_Fingerprint_Read_Parameters	;wreg free
  1441   00003A                     l3253:
  1442                           
  1443                           ;Sensor_Huella.c: 44:     {;Sensor_Huella.c: 45:         S_Uart_Send_String("1: Buscar I
      +                          D\r\n");
  1444   00003A  0ED7               	movlw	low STR_1
  1445   00003C  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1446   00003E  0E7F               	movlw	high STR_1
  1447   000040  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1448   000042  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1449                           
  1450                           ;Sensor_Huella.c: 46:         S_Uart_Send_String("2: Registrar huella\r\n");
  1451   000046  0E50               	movlw	low STR_2
  1452   000048  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1453   00004A  0E7F               	movlw	high STR_2
  1454   00004C  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1455   00004E  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1456                           
  1457                           ;Sensor_Huella.c: 47:         S_Uart_Send_String("3: Eliminar huella\r\n");
  1458   000052  0E66               	movlw	low STR_3
  1459   000054  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1460   000056  0E7F               	movlw	high STR_3
  1461   000058  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1462   00005A  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1463                           
  1464                           ;Sensor_Huella.c: 48:         S_Uart_Send_String("4: Eliminar todo\r\n");
  1465   00005E  0EA2               	movlw	low STR_4
  1466   000060  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1467   000062  0E7F               	movlw	high STR_4
  1468   000064  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1469   000066  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1470                           
  1471                           ;Sensor_Huella.c: 49:         S_Uart_Send_String("5: Cantidad de usuarios registrados\r\
      +                          n\r\n");
  1472   00006A  0EE5               	movlw	low STR_5
  1473   00006C  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1474   00006E  0E7D               	movlw	high STR_5
  1475   000070  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1476   000072  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1477                           
  1478                           ;Sensor_Huella.c: 50:         S_Uart_Read_String(buf_rx, 6);
  1479   000076  0EA2               	movlw	low _buf_rx
  1480   000078  6E05               	movwf	S_Uart_Read_String@str^0,c
  1481   00007A  0E06               	movlw	6
  1482   00007C  6E06               	movwf	S_Uart_Read_String@size^0,c
  1483   00007E  EC4E  F007         	call	_S_Uart_Read_String	;wreg free
  1484                           
  1485                           ;Sensor_Huella.c: 52:         switch(buf_rx[0])
  1486   000082  D184               	goto	l3381
  1487   000084                     l3265:
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;Sensor_Huella.c: 57:                 S_Uart_Send_String("Colocar dedo...\r\n");
  1491   000084  0EB5               	movlw	low STR_6
  1492   000086  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1493   000088  0E7F               	movlw	high STR_6
  1494   00008A  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1495   00008C  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1496                           
  1497                           ;Sensor_Huella.c: 58:                 uint16_t id = Fingerprint_Get_ID();
  1498   000090  ECCF  F005         	call	_Fingerprint_Get_ID	;wreg free
  1499   000094  C00A  F0E4         	movff	?_Fingerprint_Get_ID,main@id
  1500   000098  C00B  F0E5         	movff	?_Fingerprint_Get_ID+1,main@id+1
  1501                           
  1502                           ;Sensor_Huella.c: 60:                 S_Uart_Send_String("Huella detectada\r\n");
  1503   00009C  0E8F               	movlw	low STR_7
  1504   00009E  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1505   0000A0  0E7F               	movlw	high STR_7
  1506   0000A2  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1507   0000A4  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1508                           
  1509                           ;Sensor_Huella.c: 61:                 sprintf(buf_tx, "ID: %u\r\n", id);
  1510   0000A8  0E84               	movlw	low _buf_tx
  1511   0000AA  6E50               	movwf	sprintf@s^0,c
  1512   0000AC  0EF5               	movlw	low STR_8
  1513   0000AE  6E51               	movwf	sprintf@fmt^0,c
  1514   0000B0  0E7F               	movlw	high STR_8
  1515   0000B2  6E52               	movwf	(sprintf@fmt+1)^0,c
  1516   0000B4  C0E4  F053         	movff	main@id,?_sprintf+3
  1517   0000B8  C0E5  F054         	movff	main@id+1,?_sprintf+4
  1518   0000BC  EC11  F007         	call	_sprintf	;wreg free
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;Sensor_Huella.c: 62:                 S_Uart_Send_String(buf_tx);
  1522   0000C0  0E84               	movlw	low _buf_tx
  1523   0000C2  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1524   0000C4  6A06               	clrf	(S_Uart_Send_String@Text+1)^0,c
  1525   0000C6  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1526                           
  1527                           ;Sensor_Huella.c: 64:                 if(id > 0){
  1528   0000CA  0100               	movlb	0	; () banked
  1529   0000CC  51E4               	movf	main@id& (0+255),w,b
  1530   0000CE  11E5               	iorwf	(main@id+1)& (0+255),w,b
  1531   0000D0  B4D8               	btfsc	status,2,c
  1532   0000D2  D008               	goto	l60
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;Sensor_Huella.c: 65:                     LATDbits.LD6 = 1;
  1536   0000D4  8C8C               	bsf	140,6,c	;volatile
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;Sensor_Huella.c: 66:                     S_Uart_Send_String("ID encontrada en la base d
      +                          e datos\r\n");
  1540   0000D6  0E58               	movlw	low STR_9
  1541   0000D8  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1542   0000DA  0E7E               	movlw	high STR_9
  1543   0000DC  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1544   0000DE  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1545                           
  1546                           ;Sensor_Huella.c: 67:                 }else{
  1547   0000E2  D007               	goto	l61
  1548   0000E4                     l60:
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;Sensor_Huella.c: 68:                     LATDbits.LD7 = 1;
  1552   0000E4  8E8C               	bsf	140,7,c	;volatile
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;Sensor_Huella.c: 69:                     S_Uart_Send_String("ID no encontrada en la bas
      +                          e de datos\r\n");
  1556   0000E6  0E0D               	movlw	low STR_10
  1557   0000E8  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1558   0000EA  0E7E               	movlw	high STR_10
  1559   0000EC  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1560   0000EE  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1561   0000F2                     l61:
  1562                           
  1563                           ;Sensor_Huella.c: 71:                 S_Uart_Send_String("\r\n");
  1564   0000F2  0E0A               	movlw	low (STR_5+37)
  1565   0000F4  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1566   0000F6  0E7E               	movlw	high (STR_5+37)
  1567   0000F8  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1568   0000FA  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1569                           
  1570                           ;Sensor_Huella.c: 72:                 _delay((unsigned long)((1500)*(48000000/4000.0)));
  1571   0000FE  0E5C               	movlw	92
  1572   000100  6E56               	movwf	(??_main+1)^0,c
  1573   000102  0E51               	movlw	81
  1574   000104  6E55               	movwf	??_main^0,c
  1575   000106  0E60               	movlw	96
  1576   000108                     u1957:
  1577   000108  2EE8               	decfsz	wreg,f,c
  1578   00010A  D7FE               	bra	u1957
  1579   00010C  2E55               	decfsz	??_main^0,f,c
  1580   00010E  D7FC               	bra	u1957
  1581   000110  2E56               	decfsz	(??_main+1)^0,f,c
  1582   000112  D7FA               	bra	u1957
  1583   000114  D000               	nop2	
  1584                           
  1585                           ;Sensor_Huella.c: 73:                 LATDbits.LD6 = 0;
  1586   000116  9C8C               	bcf	140,6,c	;volatile
  1587                           
  1588                           ;Sensor_Huella.c: 74:                 LATDbits.LD7 = 0;
  1589   000118  9E8C               	bcf	140,7,c	;volatile
  1590                           
  1591                           ;Sensor_Huella.c: 75:                 break;
  1592   00011A  D150               	goto	l3383
  1593   00011C                     l3285:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;Sensor_Huella.c: 79:                 S_Uart_Send_String("Ingresar ID: \r\n");
  1597   00011C  0EC7               	movlw	low STR_12
  1598   00011E  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1599   000120  0E7F               	movlw	high STR_12
  1600   000122  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1601   000124  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1602                           
  1603                           ;Sensor_Huella.c: 80:                 S_Uart_Read_String(buf_rx, 6);
  1604   000128  0EA2               	movlw	low _buf_rx
  1605   00012A  6E05               	movwf	S_Uart_Read_String@str^0,c
  1606   00012C  0E06               	movlw	6
  1607   00012E  6E06               	movwf	S_Uart_Read_String@size^0,c
  1608   000130  EC4E  F007         	call	_S_Uart_Read_String	;wreg free
  1609                           
  1610                           ;Sensor_Huella.c: 81:                 enter_id = (uint8_t)atoi(buf_rx);
  1611   000134  0EA2               	movlw	low _buf_rx
  1612   000136  6E09               	movwf	atoi@s^0,c
  1613   000138  EC3D  F003         	call	_atoi	;wreg free
  1614   00013C  5009               	movf	?_atoi^0,w,c
  1615   00013E  6E5C               	movwf	_enter_id^0,c
  1616                           
  1617                           ;Sensor_Huella.c: 83:                 S_Uart_Send_String("Colocar dedo...\r\n");
  1618   000140  0EB5               	movlw	low STR_6
  1619   000142  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1620   000144  0E7F               	movlw	high STR_6
  1621   000146  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1622   000148  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1623                           
  1624                           ;Sensor_Huella.c: 84:                 Fingerprint_GetImage();
  1625   00014C  ECD7  F007         	call	_Fingerprint_GetImage	;wreg free
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;Sensor_Huella.c: 85:                 S_Uart_Send_String("Huella detectada\r\n");
  1629   000150  0E8F               	movlw	low STR_7
  1630   000152  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1631   000154  0E7F               	movlw	high STR_7
  1632   000156  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1633   000158  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1634                           
  1635                           ;Sensor_Huella.c: 86:                 _delay((unsigned long)((1000)*(48000000/4000.0)));
  1636   00015C  0E3D               	movlw	61
  1637   00015E  6E56               	movwf	(??_main+1)^0,c
  1638   000160  0EE1               	movlw	225
  1639   000162  6E55               	movwf	??_main^0,c
  1640   000164  0E40               	movlw	64
  1641   000166                     u1967:
  1642   000166  2EE8               	decfsz	wreg,f,c
  1643   000168  D7FE               	bra	u1967
  1644   00016A  2E55               	decfsz	??_main^0,f,c
  1645   00016C  D7FC               	bra	u1967
  1646   00016E  2E56               	decfsz	(??_main+1)^0,f,c
  1647   000170  D7FA               	bra	u1967
  1648                           
  1649                           ;Sensor_Huella.c: 87:                 Fingerprint_Image2Tz(1);
  1650   000172  0E01               	movlw	1
  1651   000174  EC3D  F005         	call	_Fingerprint_Image2Tz
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;Sensor_Huella.c: 88:                 S_Uart_Send_String("Remover dedo\r\n");
  1655   000178  0EE6               	movlw	low STR_15
  1656   00017A  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1657   00017C  0E7F               	movlw	high STR_15
  1658   00017E  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1659   000180  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1660                           
  1661                           ;Sensor_Huella.c: 89:                 _delay((unsigned long)((1500)*(48000000/4000.0)));
  1662   000184  0E5C               	movlw	92
  1663   000186  6E56               	movwf	(??_main+1)^0,c
  1664   000188  0E51               	movlw	81
  1665   00018A  6E55               	movwf	??_main^0,c
  1666   00018C  0E60               	movlw	96
  1667   00018E                     u1977:
  1668   00018E  2EE8               	decfsz	wreg,f,c
  1669   000190  D7FE               	bra	u1977
  1670   000192  2E55               	decfsz	??_main^0,f,c
  1671   000194  D7FC               	bra	u1977
  1672   000196  2E56               	decfsz	(??_main+1)^0,f,c
  1673   000198  D7FA               	bra	u1977
  1674   00019A  D000               	nop2	
  1675                           
  1676                           ;Sensor_Huella.c: 90:                 S_Uart_Send_String("Colocar dedo de nuevo...\r\n")
      +                          ;
  1677   00019C  0EFF               	movlw	low STR_16
  1678   00019E  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1679   0001A0  0E7E               	movlw	high STR_16
  1680   0001A2  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1681   0001A4  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1682                           
  1683                           ;Sensor_Huella.c: 91:                 Fingerprint_GetImage();
  1684   0001A8  ECD7  F007         	call	_Fingerprint_GetImage	;wreg free
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;Sensor_Huella.c: 92:                 Fingerprint_Image2Tz(2);
  1688   0001AC  0E02               	movlw	2
  1689   0001AE  EC3D  F005         	call	_Fingerprint_Image2Tz
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;Sensor_Huella.c: 93:                 Fingerprint_GetModel();
  1693   0001B2  ECF1  F007         	call	_Fingerprint_GetModel	;wreg free
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;Sensor_Huella.c: 94:                 c_store = Fingerprint_StoreModel(enter_id);
  1697   0001B6  505C               	movf	_enter_id^0,w,c
  1698   0001B8  ECFC  F005         	call	_Fingerprint_StoreModel
  1699   0001BC  6F83               	movwf	_c_store& (0+255),b
  1700                           
  1701                           ;Sensor_Huella.c: 96:                 switch(c_store)
  1702   0001BE  D02C               	goto	l3329
  1703   0001C0                     l3315:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;Sensor_Huella.c: 99:                         S_Uart_Send_String("Huella almacenada corr
      +                          ectamente\r\n");
  1707   0001C0  0E9E               	movlw	low STR_17
  1708   0001C2  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1709   0001C4  0E7E               	movlw	high STR_17
  1710   0001C6  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1711   0001C8  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1712                           
  1713                           ;Sensor_Huella.c: 100:                         sprintf(buf_tx, "ID: %u\r\n", enter_id);
  1714   0001CC  0E84               	movlw	low _buf_tx
  1715   0001CE  6E50               	movwf	sprintf@s^0,c
  1716   0001D0  0EF5               	movlw	low STR_8
  1717   0001D2  6E51               	movwf	sprintf@fmt^0,c
  1718   0001D4  0E7F               	movlw	high STR_8
  1719   0001D6  6E52               	movwf	(sprintf@fmt+1)^0,c
  1720   0001D8  C05C  F053         	movff	_enter_id,?_sprintf+3
  1721   0001DC  6A54               	clrf	(?_sprintf+4)^0,c
  1722   0001DE  EC11  F007         	call	_sprintf	;wreg free
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;Sensor_Huella.c: 101:                         S_Uart_Send_String(buf_tx);
  1726   0001E2  0E84               	movlw	low _buf_tx
  1727   0001E4  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1728   0001E6  6A06               	clrf	(S_Uart_Send_String@Text+1)^0,c
  1729   0001E8  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1730                           
  1731                           ;Sensor_Huella.c: 102:                         break;
  1732   0001EC  D029               	goto	l3331
  1733   0001EE                     l3321:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;Sensor_Huella.c: 105:                         S_Uart_Send_String("Error al recibir el p
      +                          aquete\r\n");
  1737   0001EE  0EE1               	movlw	low STR_19
  1738   0001F0  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1739   0001F2  0E7E               	movlw	high STR_19
  1740   0001F4  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1741   0001F6  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1742                           
  1743                           ;Sensor_Huella.c: 106:                         break;
  1744   0001FA  D022               	goto	l3331
  1745   0001FC                     l3323:
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;Sensor_Huella.c: 109:                         S_Uart_Send_String("El ID de la pagina es
      +                           mayor al limite soportado\r\n");
  1749   0001FC  0EB3               	movlw	low STR_20
  1750   0001FE  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1751   000200  0E7D               	movlw	high STR_20
  1752   000202  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1753   000204  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1754                           
  1755                           ;Sensor_Huella.c: 110:                         break;
  1756   000208  D01B               	goto	l3331
  1757   00020A                     l3325:
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;Sensor_Huella.c: 113:                         S_Uart_Send_String("Error al escribir en 
      +                          la memoria\r\n");
  1761   00020A  0E7C               	movlw	low STR_21
  1762   00020C  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1763   00020E  0E7E               	movlw	high STR_21
  1764   000210  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1765   000212  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1766                           
  1767                           ;Sensor_Huella.c: 114:                         break;
  1768   000216  D014               	goto	l3331
  1769   000218                     l3329:
  1770                           
  1771                           ; BSR set to: 0
  1772   000218  5183               	movf	_c_store& (0+255),w,b
  1773   00021A  6E55               	movwf	??_main^0,c
  1774   00021C  6A56               	clrf	(??_main+1)^0,c
  1775                           
  1776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1777                           ; Switch size 1, requested type "simple"
  1778                           ; Number of cases is 1, Range of values is 0 to 0
  1779                           ; switch strategies available:
  1780                           ; Name         Instructions Cycles
  1781                           ; simple_byte            4     3 (average)
  1782                           ;	Chosen strategy is simple_byte
  1783   00021E  5056               	movf	(??_main+1)^0,w,c
  1784   000220  0A00               	xorlw	0	; case 0
  1785   000222  A4D8               	btfss	status,2,c
  1786   000224  D00D               	goto	l3331
  1787                           
  1788                           ; BSR set to: 0
  1789                           ; Switch size 1, requested type "simple"
  1790                           ; Number of cases is 4, Range of values is 0 to 24
  1791                           ; switch strategies available:
  1792                           ; Name         Instructions Cycles
  1793                           ; simple_byte           13     7 (average)
  1794                           ;	Chosen strategy is simple_byte
  1795   000226  5055               	movf	??_main^0,w,c
  1796   000228  0A00               	xorlw	0	; case 0
  1797   00022A  B4D8               	btfsc	status,2,c
  1798   00022C  D7C9               	goto	l3315
  1799   00022E  0A01               	xorlw	1	; case 1
  1800   000230  B4D8               	btfsc	status,2,c
  1801   000232  D7DD               	goto	l3321
  1802   000234  0A0A               	xorlw	10	; case 11
  1803   000236  B4D8               	btfsc	status,2,c
  1804   000238  D7E1               	goto	l3323
  1805   00023A  0A13               	xorlw	19	; case 24
  1806   00023C  B4D8               	btfsc	status,2,c
  1807   00023E  D7E5               	goto	l3325
  1808   000240                     l3331:
  1809                           
  1810                           ;Sensor_Huella.c: 116:                 S_Uart_Send_String("\r\n");
  1811   000240  0E0A               	movlw	low (STR_5+37)
  1812   000242  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1813   000244  0E7E               	movlw	high (STR_5+37)
  1814   000246  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1815   000248  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1816                           
  1817                           ;Sensor_Huella.c: 117:                 break;
  1818   00024C  D0B7               	goto	l3383
  1819   00024E                     l3333:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;Sensor_Huella.c: 121:                 S_Uart_Send_String("Ingresar ID: \r\n");
  1823   00024E  0EC7               	movlw	low STR_12
  1824   000250  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1825   000252  0E7F               	movlw	high STR_12
  1826   000254  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1827   000256  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1828                           
  1829                           ;Sensor_Huella.c: 122:                 S_Uart_Read_String(buf_rx, 6);
  1830   00025A  0EA2               	movlw	low _buf_rx
  1831   00025C  6E05               	movwf	S_Uart_Read_String@str^0,c
  1832   00025E  0E06               	movlw	6
  1833   000260  6E06               	movwf	S_Uart_Read_String@size^0,c
  1834   000262  EC4E  F007         	call	_S_Uart_Read_String	;wreg free
  1835                           
  1836                           ;Sensor_Huella.c: 123:                 enter_id = (uint8_t)atoi(buf_rx);
  1837   000266  0EA2               	movlw	low _buf_rx
  1838   000268  6E09               	movwf	atoi@s^0,c
  1839   00026A  EC3D  F003         	call	_atoi	;wreg free
  1840   00026E  5009               	movf	?_atoi^0,w,c
  1841   000270  6E5C               	movwf	_enter_id^0,c
  1842                           
  1843                           ;Sensor_Huella.c: 125:                 c_delete = Fingerprint_DeleteModel(enter_id);
  1844   000272  505C               	movf	_enter_id^0,w,c
  1845   000274  EC28  F006         	call	_Fingerprint_DeleteModel
  1846   000278  6F82               	movwf	_c_delete& (0+255),b
  1847                           
  1848                           ;Sensor_Huella.c: 127:                 switch(c_delete)
  1849   00027A  D025               	goto	l3353
  1850   00027C                     l3341:
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;Sensor_Huella.c: 130:                         S_Uart_Send_String("Huella eliminada corr
      +                          ectamente\r\n");
  1854   00027C  0EC0               	movlw	low STR_24
  1855   00027E  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1856   000280  0E7E               	movlw	high STR_24
  1857   000282  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1858   000284  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1859                           
  1860                           ;Sensor_Huella.c: 131:                         sprintf(buf_tx, "ID: %u\r\n", enter_id);
  1861   000288  0E84               	movlw	low _buf_tx
  1862   00028A  6E50               	movwf	sprintf@s^0,c
  1863   00028C  0EF5               	movlw	low STR_8
  1864   00028E  6E51               	movwf	sprintf@fmt^0,c
  1865   000290  0E7F               	movlw	high STR_8
  1866   000292  6E52               	movwf	(sprintf@fmt+1)^0,c
  1867   000294  C05C  F053         	movff	_enter_id,?_sprintf+3
  1868   000298  6A54               	clrf	(?_sprintf+4)^0,c
  1869   00029A  EC11  F007         	call	_sprintf	;wreg free
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;Sensor_Huella.c: 132:                         S_Uart_Send_String(buf_tx);
  1873   00029E  0E84               	movlw	low _buf_tx
  1874   0002A0  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1875   0002A2  6A06               	clrf	(S_Uart_Send_String@Text+1)^0,c
  1876   0002A4  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1877                           
  1878                           ;Sensor_Huella.c: 133:                         break;
  1879   0002A8  D01F               	goto	l3355
  1880   0002AA                     l3347:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;Sensor_Huella.c: 136:                         S_Uart_Send_String("Error al recibir el p
      +                          aquete\r\n");
  1884   0002AA  0EE1               	movlw	low STR_19
  1885   0002AC  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1886   0002AE  0E7E               	movlw	high STR_19
  1887   0002B0  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1888   0002B2  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1889                           
  1890                           ;Sensor_Huella.c: 137:                         break;
  1891   0002B6  D018               	goto	l3355
  1892   0002B8                     l3349:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;Sensor_Huella.c: 140:                         S_Uart_Send_String("Error al eliminar hue
      +                          lla\r\n");
  1896   0002B8  0E1A               	movlw	low STR_27
  1897   0002BA  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1898   0002BC  0E7F               	movlw	high STR_27
  1899   0002BE  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1900   0002C0  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1901                           
  1902                           ;Sensor_Huella.c: 141:                         break;
  1903   0002C4  D011               	goto	l3355
  1904   0002C6                     l3353:
  1905                           
  1906                           ; BSR set to: 0
  1907   0002C6  5182               	movf	_c_delete& (0+255),w,b
  1908   0002C8  6E55               	movwf	??_main^0,c
  1909   0002CA  6A56               	clrf	(??_main+1)^0,c
  1910                           
  1911                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1912                           ; Switch size 1, requested type "simple"
  1913                           ; Number of cases is 1, Range of values is 0 to 0
  1914                           ; switch strategies available:
  1915                           ; Name         Instructions Cycles
  1916                           ; simple_byte            4     3 (average)
  1917                           ;	Chosen strategy is simple_byte
  1918   0002CC  5056               	movf	(??_main+1)^0,w,c
  1919   0002CE  0A00               	xorlw	0	; case 0
  1920   0002D0  A4D8               	btfss	status,2,c
  1921   0002D2  D00A               	goto	l3355
  1922                           
  1923                           ; BSR set to: 0
  1924                           ; Switch size 1, requested type "simple"
  1925                           ; Number of cases is 3, Range of values is 0 to 16
  1926                           ; switch strategies available:
  1927                           ; Name         Instructions Cycles
  1928                           ; simple_byte           10     6 (average)
  1929                           ;	Chosen strategy is simple_byte
  1930   0002D4  5055               	movf	??_main^0,w,c
  1931   0002D6  0A00               	xorlw	0	; case 0
  1932   0002D8  B4D8               	btfsc	status,2,c
  1933   0002DA  D7D0               	goto	l3341
  1934   0002DC  0A01               	xorlw	1	; case 1
  1935   0002DE  B4D8               	btfsc	status,2,c
  1936   0002E0  D7E4               	goto	l3347
  1937   0002E2  0A11               	xorlw	17	; case 16
  1938   0002E4  B4D8               	btfsc	status,2,c
  1939   0002E6  D7E8               	goto	l3349
  1940   0002E8                     l3355:
  1941                           
  1942                           ;Sensor_Huella.c: 143:                 S_Uart_Send_String("\r\n");
  1943   0002E8  0E0A               	movlw	low (STR_5+37)
  1944   0002EA  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1945   0002EC  0E7E               	movlw	high (STR_5+37)
  1946   0002EE  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1947   0002F0  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1948                           
  1949                           ;Sensor_Huella.c: 144:                 break;
  1950   0002F4  D063               	goto	l3383
  1951   0002F6                     l3357:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;Sensor_Huella.c: 148:                 c_empty = Fingerprint_EmptyDatabase();
  1955   0002F6  ECA2  F007         	call	_Fingerprint_EmptyDatabase	;wreg free
  1956   0002FA  6E5A               	movwf	_c_empty^0,c
  1957                           
  1958                           ;Sensor_Huella.c: 150:                 switch(c_empty)
  1959   0002FC  D015               	goto	l3367
  1960   0002FE                     l3359:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;Sensor_Huella.c: 153:                         S_Uart_Send_String("Usuarios eliminados c
      +                          orrectamente\r\n");
  1964   0002FE  0E34               	movlw	low STR_29
  1965   000300  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1966   000302  0E7E               	movlw	high STR_29
  1967   000304  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1968   000306  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1969                           
  1970                           ;Sensor_Huella.c: 154:                         break;
  1971   00030A  D01F               	goto	l3369
  1972   00030C                     l3361:
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;Sensor_Huella.c: 157:                         S_Uart_Send_String("Error al recibir el p
      +                          aquete\r\n");
  1976   00030C  0EE1               	movlw	low STR_19
  1977   00030E  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1978   000310  0E7E               	movlw	high STR_19
  1979   000312  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1980   000314  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1981                           
  1982                           ;Sensor_Huella.c: 158:                         break;
  1983   000318  D018               	goto	l3369
  1984   00031A                     l3363:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;Sensor_Huella.c: 161:                         S_Uart_Send_String("Error al eliminar\r\n
      +                          ");
  1988   00031A  0E7B               	movlw	low STR_31
  1989   00031C  6E05               	movwf	S_Uart_Send_String@Text^0,c
  1990   00031E  0E7F               	movlw	high STR_31
  1991   000320  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  1992   000322  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  1993                           
  1994                           ;Sensor_Huella.c: 162:                         break;
  1995   000326  D011               	goto	l3369
  1996   000328                     l3367:
  1997                           
  1998                           ; BSR set to: 0
  1999   000328  505A               	movf	_c_empty^0,w,c
  2000   00032A  6E55               	movwf	??_main^0,c
  2001   00032C  6A56               	clrf	(??_main+1)^0,c
  2002                           
  2003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2004                           ; Switch size 1, requested type "simple"
  2005                           ; Number of cases is 1, Range of values is 0 to 0
  2006                           ; switch strategies available:
  2007                           ; Name         Instructions Cycles
  2008                           ; simple_byte            4     3 (average)
  2009                           ;	Chosen strategy is simple_byte
  2010   00032E  5056               	movf	(??_main+1)^0,w,c
  2011   000330  0A00               	xorlw	0	; case 0
  2012   000332  A4D8               	btfss	status,2,c
  2013   000334  D00A               	goto	l3369
  2014                           
  2015                           ; BSR set to: 0
  2016                           ; Switch size 1, requested type "simple"
  2017                           ; Number of cases is 3, Range of values is 0 to 17
  2018                           ; switch strategies available:
  2019                           ; Name         Instructions Cycles
  2020                           ; simple_byte           10     6 (average)
  2021                           ;	Chosen strategy is simple_byte
  2022   000336  5055               	movf	??_main^0,w,c
  2023   000338  0A00               	xorlw	0	; case 0
  2024   00033A  B4D8               	btfsc	status,2,c
  2025   00033C  D7E0               	goto	l3359
  2026   00033E  0A01               	xorlw	1	; case 1
  2027   000340  B4D8               	btfsc	status,2,c
  2028   000342  D7E4               	goto	l3361
  2029   000344  0A10               	xorlw	16	; case 17
  2030   000346  B4D8               	btfsc	status,2,c
  2031   000348  D7E8               	goto	l3363
  2032   00034A                     l3369:
  2033                           
  2034                           ;Sensor_Huella.c: 164:                 S_Uart_Send_String("\r\n");
  2035   00034A  0E0A               	movlw	low (STR_5+37)
  2036   00034C  6E05               	movwf	S_Uart_Send_String@Text^0,c
  2037   00034E  0E7E               	movlw	high (STR_5+37)
  2038   000350  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  2039   000352  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  2040                           
  2041                           ;Sensor_Huella.c: 165:                 break;
  2042   000356  D032               	goto	l3383
  2043   000358                     l3371:
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;Sensor_Huella.c: 169:                 n_users = Fingerprint_GetTemplateCount();
  2047   000358  EC71  F005         	call	_Fingerprint_GetTemplateCount	;wreg free
  2048   00035C  6E5B               	movwf	_n_users^0,c
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;Sensor_Huella.c: 170:                 sprintf(buf_tx, "Usuarios registrados: %u\r\n", n
      +                          _users);
  2052   00035E  0E84               	movlw	low _buf_tx
  2053   000360  6E50               	movwf	sprintf@s^0,c
  2054   000362  0E35               	movlw	low STR_33
  2055   000364  6E51               	movwf	sprintf@fmt^0,c
  2056   000366  0E7F               	movlw	high STR_33
  2057   000368  6E52               	movwf	(sprintf@fmt+1)^0,c
  2058   00036A  C05B  F053         	movff	_n_users,?_sprintf+3
  2059   00036E  6A54               	clrf	(?_sprintf+4)^0,c
  2060   000370  EC11  F007         	call	_sprintf	;wreg free
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;Sensor_Huella.c: 171:                 S_Uart_Send_String(buf_tx);
  2064   000374  0E84               	movlw	low _buf_tx
  2065   000376  6E05               	movwf	S_Uart_Send_String@Text^0,c
  2066   000378  6A06               	clrf	(S_Uart_Send_String@Text+1)^0,c
  2067   00037A  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  2068                           
  2069                           ;Sensor_Huella.c: 172:                 S_Uart_Send_String("\r\n");
  2070   00037E  0E0A               	movlw	low (STR_5+37)
  2071   000380  6E05               	movwf	S_Uart_Send_String@Text^0,c
  2072   000382  0E7E               	movlw	high (STR_5+37)
  2073   000384  6E06               	movwf	(S_Uart_Send_String@Text+1)^0,c
  2074   000386  EC7D  F006         	call	_S_Uart_Send_String	;wreg free
  2075                           
  2076                           ;Sensor_Huella.c: 173:                 break;
  2077   00038A  D018               	goto	l3383
  2078   00038C                     l3381:
  2079   00038C  0100               	movlb	0	; () banked
  2080   00038E  51A2               	movf	_buf_rx& (0+255),w,b
  2081   000390  6E55               	movwf	??_main^0,c
  2082   000392  6A56               	clrf	(??_main+1)^0,c
  2083                           
  2084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2085                           ; Switch size 1, requested type "simple"
  2086                           ; Number of cases is 1, Range of values is 0 to 0
  2087                           ; switch strategies available:
  2088                           ; Name         Instructions Cycles
  2089                           ; simple_byte            4     3 (average)
  2090                           ;	Chosen strategy is simple_byte
  2091   000394  5056               	movf	(??_main+1)^0,w,c
  2092   000396  0A00               	xorlw	0	; case 0
  2093   000398  A4D8               	btfss	status,2,c
  2094   00039A  D010               	goto	l3383
  2095                           
  2096                           ; BSR set to: 0
  2097                           ; Switch size 1, requested type "simple"
  2098                           ; Number of cases is 5, Range of values is 49 to 53
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte           16     9 (average)
  2102                           ;	Chosen strategy is simple_byte
  2103   00039C  5055               	movf	??_main^0,w,c
  2104   00039E  0A31               	xorlw	49	; case 49
  2105   0003A0  B4D8               	btfsc	status,2,c
  2106   0003A2  D670               	goto	l3265
  2107   0003A4  0A03               	xorlw	3	; case 50
  2108   0003A6  B4D8               	btfsc	status,2,c
  2109   0003A8  D6B9               	goto	l3285
  2110   0003AA  0A01               	xorlw	1	; case 51
  2111   0003AC  B4D8               	btfsc	status,2,c
  2112   0003AE  D74F               	goto	l3333
  2113   0003B0  0A07               	xorlw	7	; case 52
  2114   0003B2  B4D8               	btfsc	status,2,c
  2115   0003B4  D7A0               	goto	l3357
  2116   0003B6  0A01               	xorlw	1	; case 53
  2117   0003B8  B4D8               	btfsc	status,2,c
  2118   0003BA  D7CE               	goto	l3371
  2119   0003BC                     l3383:
  2120                           
  2121                           ;Sensor_Huella.c: 175:         _delay((unsigned long)((500)*(48000000/4000.0)));
  2122   0003BC  0E1F               	movlw	31
  2123   0003BE  6E56               	movwf	(??_main+1)^0,c
  2124   0003C0  0E71               	movlw	113
  2125   0003C2  6E55               	movwf	??_main^0,c
  2126   0003C4  0E1E               	movlw	30
  2127   0003C6                     u1987:
  2128   0003C6  2EE8               	decfsz	wreg,f,c
  2129   0003C8  D7FE               	bra	u1987
  2130   0003CA  2E55               	decfsz	??_main^0,f,c
  2131   0003CC  D7FC               	bra	u1987
  2132   0003CE  2E56               	decfsz	(??_main+1)^0,f,c
  2133   0003D0  D7FA               	bra	u1987
  2134   0003D2  D000               	nop2	
  2135   0003D4  D632               	goto	l3253
  2136   0003D6                     __end_of_main:
  2137                           	callstack 0
  2138                           
  2139 ;; *************** function _sprintf *****************
  2140 ;; Defined at:
  2141 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  s               1   79[COMRAM] PTR unsigned char 
  2144 ;;		 -> buf_tx(30), 
  2145 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
  2146 ;;		 -> STR_33(27), STR_25(9), STR_18(9), STR_8(9), 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  f              11    1[BANK0 ] struct _IO_FILE
  2149 ;;  ret             2    0        int 
  2150 ;;  ap              1    0[BANK0 ] PTR void [1]
  2151 ;;		 -> ?_sprintf(2), 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2   79[COMRAM] int 
  2154 ;; Registers used:
  2155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 3F/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2161 ;;      Params:         5       0       0       0       0       0       0       0       0
  2162 ;;      Locals:         0      12       0       0       0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2164 ;;      Totals:         5      12       0       0       0       0       0       0       0
  2165 ;;Total ram usage:       17 bytes
  2166 ;; Hardware stack levels used: 1
  2167 ;; Hardware stack levels required when called: 8
  2168 ;; This function calls:
  2169 ;;		_vfprintf
  2170 ;; This function is called by:
  2171 ;;		_main
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text1
  2176   000E22                     __ptext1:
  2177                           	callstack 0
  2178   000E22                     _sprintf:
  2179                           	callstack 22
  2180                           
  2181                           ;incstack = 0
  2182   000E22  0E53               	movlw	low (?_sprintf+3)
  2183   000E24  0100               	movlb	0	; () banked
  2184   000E26  6FD8               	movwf	sprintf@ap& (0+255),b
  2185   000E28  C050  F0D9         	movff	sprintf@s,sprintf@f
  2186                           
  2187                           ; BSR set to: 0
  2188   000E2C  0E00               	movlw	0
  2189   000E2E  6FDD               	movwf	(sprintf@f+4)& (0+255),b
  2190   000E30  0E00               	movlw	0
  2191   000E32  6FDC               	movwf	(sprintf@f+3)& (0+255),b
  2192                           
  2193                           ; BSR set to: 0
  2194   000E34  0E00               	movlw	0
  2195   000E36  6FE3               	movwf	(sprintf@f+10)& (0+255),b
  2196   000E38  0E00               	movlw	0
  2197   000E3A  6FE2               	movwf	(sprintf@f+9)& (0+255),b
  2198                           
  2199                           ; BSR set to: 0
  2200   000E3C  0ED9               	movlw	low sprintf@f
  2201   000E3E  6E4A               	movwf	vfprintf@fp^0,c
  2202   000E40  C051  F04B         	movff	sprintf@fmt,vfprintf@fmt
  2203   000E44  C052  F04C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2204   000E48  0ED8               	movlw	low sprintf@ap
  2205   000E4A  6E4D               	movwf	vfprintf@ap^0,c
  2206   000E4C  EC87  F007         	call	_vfprintf	;wreg free
  2207   000E50  5050               	movf	sprintf@s^0,w,c
  2208   000E52  0100               	movlb	0	; () banked
  2209   000E54  25DC               	addwf	(sprintf@f+3)& (0+255),w,b
  2210   000E56  6ED9               	movwf	fsr2l,c
  2211   000E58  6ADA               	clrf	fsr2h,c
  2212   000E5A  0E00               	movlw	0
  2213   000E5C  6EDF               	movwf	indf2,c
  2214                           
  2215                           ; BSR set to: 0
  2216   000E5E  0012               	return		;funcret
  2217   000E60                     __end_of_sprintf:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function _vfprintf *****************
  2221 ;; Defined at:
  2222 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  fp              1   73[COMRAM] PTR struct _IO_FILE
  2225 ;;		 -> sprintf@f(11), 
  2226 ;;  fmt             2   74[COMRAM] PTR const unsigned char 
  2227 ;;		 -> STR_33(27), STR_25(9), STR_18(9), STR_8(9), 
  2228 ;;  ap              1   76[COMRAM] PTR PTR void 
  2229 ;;		 -> sprintf@ap(1), 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  2232 ;;		 -> STR_33(27), STR_25(9), STR_18(9), STR_8(9), 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  2   73[COMRAM] int 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 3F/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2242 ;;      Params:         4       0       0       0       0       0       0       0       0
  2243 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2245 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2246 ;;Total ram usage:        6 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 7
  2249 ;; This function calls:
  2250 ;;		_vfpfcnvrt
  2251 ;; This function is called by:
  2252 ;;		_sprintf
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text2
  2257   000F0E                     __ptext2:
  2258                           	callstack 0
  2259   000F0E                     _vfprintf:
  2260                           	callstack 22
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;incstack = 0
  2267   000F0E  C04B  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  2268   000F12  C04C  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2271   000F16  D008               	goto	l3003
  2272   000F18                     l3001:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2275   000F18  C04A  F03B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2276   000F1C  0E4E               	movlw	low vfprintf@cfmt
  2277   000F1E  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  2278   000F20  C04D  F03D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2279   000F24  ECB2  F002         	call	_vfpfcnvrt	;wreg free
  2280   000F28                     l3003:
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2283   000F28  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2284   000F2C  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2285   000F30                     	if	0	;tblptru may be non-zero
  2286   000F30                     	endif
  2287   000F30                     	if	0	;tblptru may be non-zero
  2288   000F30                     	endif
  2289   000F30  0008               	tblrd		*
  2290   000F32  50F5               	movf	tablat,w,c
  2291   000F34  0900               	iorlw	0
  2292   000F36  A4D8               	btfss	status,2,c
  2293   000F38  D7EF               	goto	l3001
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2296   000F3A  0E00               	movlw	0
  2297   000F3C  6E4B               	movwf	(?_vfprintf+1)^0,c
  2298   000F3E  0E00               	movlw	0
  2299   000F40  6E4A               	movwf	?_vfprintf^0,c
  2300   000F42  0012               	return		;funcret
  2301   000F44                     __end_of_vfprintf:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _vfpfcnvrt *****************
  2305 ;; Defined at:
  2306 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  fp              1   58[COMRAM] PTR struct _IO_FILE
  2309 ;;		 -> sprintf@f(11), 
  2310 ;;  fmt             1   59[COMRAM] PTR PTR unsigned char 
  2311 ;;		 -> vfprintf@cfmt(2), 
  2312 ;;  ap              1   60[COMRAM] PTR PTR void 
  2313 ;;		 -> sprintf@ap(1), 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  convarg         8   63[COMRAM] struct .
  2316 ;;  cp              2   71[COMRAM] PTR unsigned char 
  2317 ;;		 -> STR_33(27), STR_25(9), STR_18(9), STR_8(9), 
  2318 ;;  i               2    0        int 
  2319 ;;  done            2    0        int 
  2320 ;;  c               1    0        unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2330 ;;      Params:         3       0       0       0       0       0       0       0       0
  2331 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2332 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2333 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2334 ;;Total ram usage:       15 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 6
  2337 ;; This function calls:
  2338 ;;		_fputc
  2339 ;;		_utoa
  2340 ;; This function is called by:
  2341 ;;		_vfprintf
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text3
  2346   000564                     __ptext3:
  2347                           	callstack 0
  2348   000564                     _vfpfcnvrt:
  2349                           	callstack 22
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2352                           
  2353                           ;incstack = 0
  2354   000564  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2355   000566  6ED9               	movwf	fsr2l,c
  2356   000568  6ADA               	clrf	fsr2h,c
  2357   00056A  CFDE FFF6          	movff	postinc2,tblptrl
  2358   00056E  CFDD FFF7          	movff	postdec2,tblptrh
  2359   000572                     	if	0	;tblptru may be non-zero
  2360   000572                     	endif
  2361   000572                     	if	0	;tblptru may be non-zero
  2362   000572                     	endif
  2363   000572  0008               	tblrd		*
  2364   000574  50F5               	movf	tablat,w,c
  2365   000576  0A25               	xorlw	37
  2366   000578  A4D8               	btfss	status,2,c
  2367   00057A  D06F               	goto	l2849
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2370   00057C  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2371   00057E  6ED9               	movwf	fsr2l,c
  2372   000580  6ADA               	clrf	fsr2h,c
  2373   000582  2ADE               	incf	postinc2,f,c
  2374   000584  0E00               	movlw	0
  2375   000586  22DD               	addwfc	postdec2,f,c
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2378   000588  0E00               	movlw	0
  2379   00058A  0100               	movlb	0	; () banked
  2380   00058C  6F7D               	movwf	(_width+1)& (0+255),b
  2381   00058E  0E00               	movlw	0
  2382   000590  6F7C               	movwf	_width& (0+255),b
  2383   000592  C07C  F080         	movff	_width,_flags
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2387   000596  697E               	setf	_prec& (0+255),b
  2388   000598  697F               	setf	(_prec+1)& (0+255),b
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  2392   00059A  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2393   00059C  6ED9               	movwf	fsr2l,c
  2394   00059E  6ADA               	clrf	fsr2h,c
  2395   0005A0  CFDE F048          	movff	postinc2,vfpfcnvrt@cp
  2396   0005A4  CFDD F049          	movff	postdec2,vfpfcnvrt@cp+1
  2397                           
  2398                           ; BSR set to: 0
  2399   0005A8  C048  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2400   0005AC  C049  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2401   0005B0                     	if	0	;tblptru may be non-zero
  2402   0005B0                     	endif
  2403   0005B0                     	if	0	;tblptru may be non-zero
  2404   0005B0                     	endif
  2405   0005B0  0008               	tblrd		*
  2406   0005B2  50F5               	movf	tablat,w,c
  2407   0005B4  0A75               	xorlw	117
  2408   0005B6  A4D8               	btfss	status,2,c
  2409   0005B8  D049               	goto	l2845
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2413   0005BA  503D               	movf	vfpfcnvrt@ap^0,w,c
  2414   0005BC  6ED9               	movwf	fsr2l,c
  2415   0005BE  6ADA               	clrf	fsr2h,c
  2416   0005C0  50DF               	movf	indf2,w,c
  2417   0005C2  2ADF               	incf	indf2,f,c
  2418   0005C4  2ADF               	incf	indf2,f,c
  2419   0005C6  6ED9               	movwf	fsr2l,c
  2420   0005C8  6ADA               	clrf	fsr2h,c
  2421   0005CA  CFDE F03E          	movff	postinc2,??_vfpfcnvrt
  2422   0005CE  CFDD F03F          	movff	postdec2,??_vfpfcnvrt+1
  2423   0005D2  C03E  F040         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
  2424   0005D6  C03F  F041         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
  2425   0005DA  6A42               	clrf	(vfpfcnvrt@convarg+2)^0,c
  2426   0005DC  6A43               	clrf	(vfpfcnvrt@convarg+3)^0,c
  2427   0005DE  6A44               	clrf	(vfpfcnvrt@convarg+4)^0,c
  2428   0005E0  6A45               	clrf	(vfpfcnvrt@convarg+5)^0,c
  2429   0005E2  6A46               	clrf	(vfpfcnvrt@convarg+6)^0,c
  2430   0005E4  6A47               	clrf	(vfpfcnvrt@convarg+7)^0,c
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2434   0005E6  0E01               	movlw	1
  2435   0005E8  2448               	addwf	vfpfcnvrt@cp^0,w,c
  2436   0005EA  6E3E               	movwf	??_vfpfcnvrt^0,c
  2437   0005EC  0E00               	movlw	0
  2438   0005EE  2049               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2439   0005F0  6E3F               	movwf	(??_vfpfcnvrt+1)^0,c
  2440   0005F2  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2441   0005F4  6ED9               	movwf	fsr2l,c
  2442   0005F6  6ADA               	clrf	fsr2h,c
  2443   0005F8  C03E  FFDE         	movff	??_vfpfcnvrt,postinc2
  2444   0005FC  C03F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2447   000600  D015               	goto	l2843
  2448   000602                     l2837:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  2452   000602  C03B  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2453   000606  C040  F01D         	movff	vfpfcnvrt@convarg,utoa@d
  2454   00060A  C041  F01E         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2455   00060E  C042  F01F         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  2456   000612  C043  F020         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  2457   000616  C044  F021         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  2458   00061A  C045  F022         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  2459   00061E  C046  F023         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  2460   000622  C047  F024         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  2461   000626  ECEB  F001         	call	_utoa	;wreg free
  2462   00062A  0012               	return	
  2463   00062C                     l2843:
  2464                           
  2465                           ; BSR set to: 0
  2466   00062C  C048  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2467   000630  C049  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2468   000634                     	if	0	;tblptru may be non-zero
  2469   000634                     	endif
  2470   000634                     	if	0	;tblptru may be non-zero
  2471   000634                     	endif
  2472   000634  0008               	tblrd		*
  2473   000636  50F5               	movf	tablat,w,c
  2474   000638  6E3E               	movwf	??_vfpfcnvrt^0,c
  2475   00063A  6A3F               	clrf	(??_vfpfcnvrt+1)^0,c
  2476                           
  2477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2478                           ; Switch size 1, requested type "simple"
  2479                           ; Number of cases is 1, Range of values is 0 to 0
  2480                           ; switch strategies available:
  2481                           ; Name         Instructions Cycles
  2482                           ; simple_byte            4     3 (average)
  2483                           ;	Chosen strategy is simple_byte
  2484   00063C  503F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2485   00063E  0A00               	xorlw	0	; case 0
  2486   000640  A4D8               	btfss	status,2,c
  2487   000642  D004               	goto	l2845
  2488                           
  2489                           ; BSR set to: 0
  2490                           ; Switch size 1, requested type "simple"
  2491                           ; Number of cases is 1, Range of values is 117 to 117
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte            4     3 (average)
  2495                           ;	Chosen strategy is simple_byte
  2496   000644  503E               	movf	??_vfpfcnvrt^0,w,c
  2497   000646  0A75               	xorlw	117	; case 117
  2498   000648  B4D8               	btfsc	status,2,c
  2499   00064A  D7DB               	goto	l2837
  2500   00064C                     l2845:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2503   00064C  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2504   00064E  6ED9               	movwf	fsr2l,c
  2505   000650  6ADA               	clrf	fsr2h,c
  2506   000652  2ADE               	incf	postinc2,f,c
  2507   000654  0E00               	movlw	0
  2508   000656  22DD               	addwfc	postdec2,f,c
  2509   000658  0012               	return	
  2510   00065A                     l2849:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2513   00065A  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2514   00065C  6ED9               	movwf	fsr2l,c
  2515   00065E  6ADA               	clrf	fsr2h,c
  2516   000660  CFDE FFF6          	movff	postinc2,tblptrl
  2517   000664  CFDD FFF7          	movff	postdec2,tblptrh
  2518   000668                     	if	0	;tblptru may be non-zero
  2519   000668                     	endif
  2520   000668                     	if	0	;tblptru may be non-zero
  2521   000668                     	endif
  2522   000668  0008               	tblrd		*
  2523   00066A  50F5               	movf	tablat,w,c
  2524   00066C  6E03               	movwf	fputc@c^0,c
  2525   00066E  6A04               	clrf	(fputc@c+1)^0,c
  2526   000670  C03B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2527   000674  ECFD  F004         	call	_fputc	;wreg free
  2528   000678  D7E9               	goto	l2845
  2529   00067A                     __end_of_vfpfcnvrt:
  2530                           	callstack 0
  2531                           
  2532 ;; *************** function _utoa *****************
  2533 ;; Defined at:
  2534 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  fp              1   27[COMRAM] PTR struct _IO_FILE
  2537 ;;		 -> sprintf@f(11), 
  2538 ;;  d               8   28[COMRAM] unsigned long long 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  n               8   48[COMRAM] unsigned long long 
  2541 ;;  i               2   56[COMRAM] int 
  2542 ;;  p               2   46[COMRAM] int 
  2543 ;;  w               2   44[COMRAM] int 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2553 ;;      Params:         9       0       0       0       0       0       0       0       0
  2554 ;;      Locals:        14       0       0       0       0       0       0       0       0
  2555 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2556 ;;      Totals:        31       0       0       0       0       0       0       0       0
  2557 ;;Total ram usage:       31 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 5
  2560 ;; This function calls:
  2561 ;;		___lodiv
  2562 ;;		___lomod
  2563 ;;		_pad
  2564 ;; This function is called by:
  2565 ;;		_vfpfcnvrt
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text4
  2570   0003D6                     __ptext4:
  2571                           	callstack 0
  2572   0003D6                     _utoa:
  2573                           	callstack 22
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  2576                           
  2577                           ;incstack = 0
  2578   0003D6  0100               	movlb	0	; () banked
  2579   0003D8  BF7F               	btfsc	(_prec+1)& (0+255),7,b
  2580   0003DA  D005               	goto	u1450
  2581   0003DC  517F               	movf	(_prec+1)& (0+255),w,b
  2582   0003DE  E108               	bnz	l1038
  2583   0003E0  057E               	decf	_prec& (0+255),w,b
  2584   0003E2  B0D8               	btfsc	status,0,c
  2585   0003E4  D005               	goto	l1038
  2586   0003E6                     u1450:
  2587                           
  2588                           ; BSR set to: 0
  2589   0003E6  0E00               	movlw	0
  2590   0003E8  6E30               	movwf	(utoa@p+1)^0,c
  2591   0003EA  0E01               	movlw	1
  2592   0003EC  6E2F               	movwf	utoa@p^0,c
  2593   0003EE  D004               	goto	l1040
  2594   0003F0                     l1038:
  2595                           
  2596                           ; BSR set to: 0
  2597   0003F0  C07E  F02F         	movff	_prec,utoa@p
  2598   0003F4  C07F  F030         	movff	_prec+1,utoa@p+1
  2599   0003F8                     l1040:
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  2603   0003F8  C07C  F02D         	movff	_width,utoa@w
  2604   0003FC  C07D  F02E         	movff	_width+1,utoa@w+1
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  2607   000400  C01D  F031         	movff	utoa@d,utoa@n
  2608   000404  C01E  F032         	movff	utoa@d+1,utoa@n+1
  2609   000408  C01F  F033         	movff	utoa@d+2,utoa@n+2
  2610   00040C  C020  F034         	movff	utoa@d+3,utoa@n+3
  2611   000410  C021  F035         	movff	utoa@d+4,utoa@n+4
  2612   000414  C022  F036         	movff	utoa@d+5,utoa@n+5
  2613   000418  C023  F037         	movff	utoa@d+6,utoa@n+6
  2614   00041C  C024  F038         	movff	utoa@d+7,utoa@n+7
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  2618   000420  0E00               	movlw	0
  2619   000422  6E3A               	movwf	(utoa@i+1)^0,c
  2620   000424  0E1F               	movlw	31
  2621   000426  6E39               	movwf	utoa@i^0,c
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  2625   000428  0E00               	movlw	0
  2626   00042A  0101               	movlb	1	; () banked
  2627   00042C  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2630   00042E  D076               	goto	l2801
  2631   000430                     l2791:
  2632                           
  2633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  2634   000430  0639               	decf	utoa@i^0,f,c
  2635   000432  A0D8               	btfss	status,0,c
  2636   000434  063A               	decf	(utoa@i+1)^0,f,c
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  2639   000436  0E00               	movlw	low _dbuf
  2640   000438  2439               	addwf	utoa@i^0,w,c
  2641   00043A  6ED9               	movwf	fsr2l,c
  2642   00043C  0E01               	movlw	high _dbuf
  2643   00043E  203A               	addwfc	(utoa@i+1)^0,w,c
  2644   000440  6EDA               	movwf	fsr2h,c
  2645   000442  C031  F003         	movff	utoa@n,___lomod@dividend
  2646   000446  C032  F004         	movff	utoa@n+1,___lomod@dividend+1
  2647   00044A  C033  F005         	movff	utoa@n+2,___lomod@dividend+2
  2648   00044E  C034  F006         	movff	utoa@n+3,___lomod@dividend+3
  2649   000452  C035  F007         	movff	utoa@n+4,___lomod@dividend+4
  2650   000456  C036  F008         	movff	utoa@n+5,___lomod@dividend+5
  2651   00045A  C037  F009         	movff	utoa@n+6,___lomod@dividend+6
  2652   00045E  C038  F00A         	movff	utoa@n+7,___lomod@dividend+7
  2653   000462  0E0A               	movlw	10
  2654   000464  6E0B               	movwf	___lomod@divisor^0,c
  2655   000466  0E00               	movlw	0
  2656   000468  6E0C               	movwf	(___lomod@divisor+1)^0,c
  2657   00046A  0E00               	movlw	0
  2658   00046C  6E0D               	movwf	(___lomod@divisor+2)^0,c
  2659   00046E  0E00               	movlw	0
  2660   000470  6E0E               	movwf	(___lomod@divisor+3)^0,c
  2661   000472  0E00               	movlw	0
  2662   000474  6E0F               	movwf	(___lomod@divisor+4)^0,c
  2663   000476  0E00               	movlw	0
  2664   000478  6E10               	movwf	(___lomod@divisor+5)^0,c
  2665   00047A  0E00               	movlw	0
  2666   00047C  6E11               	movwf	(___lomod@divisor+6)^0,c
  2667   00047E  0E00               	movlw	0
  2668   000480  6E12               	movwf	(___lomod@divisor+7)^0,c
  2669   000482  EC20  F004         	call	___lomod	;wreg free
  2670   000486  C003  F025         	movff	?___lomod,??_utoa
  2671   00048A  C004  F026         	movff	?___lomod+1,??_utoa+1
  2672   00048E  C005  F027         	movff	?___lomod+2,??_utoa+2
  2673   000492  C006  F028         	movff	?___lomod+3,??_utoa+3
  2674   000496  C007  F029         	movff	?___lomod+4,??_utoa+4
  2675   00049A  C008  F02A         	movff	?___lomod+5,??_utoa+5
  2676   00049E  C009  F02B         	movff	?___lomod+6,??_utoa+6
  2677   0004A2  C00A  F02C         	movff	?___lomod+7,??_utoa+7
  2678   0004A6  5025               	movf	??_utoa^0,w,c
  2679   0004A8  0F30               	addlw	48
  2680   0004AA  6EDF               	movwf	indf2,c
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  2683   0004AC  062F               	decf	utoa@p^0,f,c
  2684   0004AE  A0D8               	btfss	status,0,c
  2685   0004B0  0630               	decf	(utoa@p+1)^0,f,c
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  2688   0004B2  062D               	decf	utoa@w^0,f,c
  2689   0004B4  A0D8               	btfss	status,0,c
  2690   0004B6  062E               	decf	(utoa@w+1)^0,f,c
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  2693   0004B8  C031  F003         	movff	utoa@n,___lodiv@dividend
  2694   0004BC  C032  F004         	movff	utoa@n+1,___lodiv@dividend+1
  2695   0004C0  C033  F005         	movff	utoa@n+2,___lodiv@dividend+2
  2696   0004C4  C034  F006         	movff	utoa@n+3,___lodiv@dividend+3
  2697   0004C8  C035  F007         	movff	utoa@n+4,___lodiv@dividend+4
  2698   0004CC  C036  F008         	movff	utoa@n+5,___lodiv@dividend+5
  2699   0004D0  C037  F009         	movff	utoa@n+6,___lodiv@dividend+6
  2700   0004D4  C038  F00A         	movff	utoa@n+7,___lodiv@dividend+7
  2701   0004D8  0E0A               	movlw	10
  2702   0004DA  6E0B               	movwf	___lodiv@divisor^0,c
  2703   0004DC  0E00               	movlw	0
  2704   0004DE  6E0C               	movwf	(___lodiv@divisor+1)^0,c
  2705   0004E0  0E00               	movlw	0
  2706   0004E2  6E0D               	movwf	(___lodiv@divisor+2)^0,c
  2707   0004E4  0E00               	movlw	0
  2708   0004E6  6E0E               	movwf	(___lodiv@divisor+3)^0,c
  2709   0004E8  0E00               	movlw	0
  2710   0004EA  6E0F               	movwf	(___lodiv@divisor+4)^0,c
  2711   0004EC  0E00               	movlw	0
  2712   0004EE  6E10               	movwf	(___lodiv@divisor+5)^0,c
  2713   0004F0  0E00               	movlw	0
  2714   0004F2  6E11               	movwf	(___lodiv@divisor+6)^0,c
  2715   0004F4  0E00               	movlw	0
  2716   0004F6  6E12               	movwf	(___lodiv@divisor+7)^0,c
  2717   0004F8  ECB9  F003         	call	___lodiv	;wreg free
  2718   0004FC  C003  F031         	movff	?___lodiv,utoa@n
  2719   000500  C004  F032         	movff	?___lodiv+1,utoa@n+1
  2720   000504  C005  F033         	movff	?___lodiv+2,utoa@n+2
  2721   000508  C006  F034         	movff	?___lodiv+3,utoa@n+3
  2722   00050C  C007  F035         	movff	?___lodiv+4,utoa@n+4
  2723   000510  C008  F036         	movff	?___lodiv+5,utoa@n+5
  2724   000514  C009  F037         	movff	?___lodiv+6,utoa@n+6
  2725   000518  C00A  F038         	movff	?___lodiv+7,utoa@n+7
  2726   00051C                     l2801:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2729   00051C  5039               	movf	utoa@i^0,w,c
  2730   00051E  103A               	iorwf	(utoa@i+1)^0,w,c
  2731   000520  B4D8               	btfsc	status,2,c
  2732   000522  D011               	goto	u1480
  2733   000524  5031               	movf	utoa@n^0,w,c
  2734   000526  1032               	iorwf	(utoa@n+1)^0,w,c
  2735   000528  1033               	iorwf	(utoa@n+2)^0,w,c
  2736   00052A  1034               	iorwf	(utoa@n+3)^0,w,c
  2737   00052C  1035               	iorwf	(utoa@n+4)^0,w,c
  2738   00052E  1036               	iorwf	(utoa@n+5)^0,w,c
  2739   000530  1037               	iorwf	(utoa@n+6)^0,w,c
  2740   000532  1038               	iorwf	(utoa@n+7)^0,w,c
  2741   000534  A4D8               	btfss	status,2,c
  2742   000536  D77C               	goto	l2791
  2743   000538  BE30               	btfsc	(utoa@p+1)^0,7,c
  2744   00053A  D005               	goto	u1480
  2745   00053C  5030               	movf	(utoa@p+1)^0,w,c
  2746   00053E  E102               	bnz	u1481
  2747   000540  042F               	decf	utoa@p^0,w,c
  2748   000542  B0D8               	btfsc	status,0,c
  2749   000544                     u1481:
  2750   000544  D775               	goto	l2791
  2751   000546                     u1480:
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2754   000546  C01C  F011         	movff	utoa@fp,pad@fp
  2755   00054A  0E00               	movlw	low _dbuf
  2756   00054C  2439               	addwf	utoa@i^0,w,c
  2757   00054E  6E12               	movwf	pad@buf^0,c
  2758   000550  0E01               	movlw	high _dbuf
  2759   000552  203A               	addwfc	(utoa@i+1)^0,w,c
  2760   000554  6E13               	movwf	(pad@buf+1)^0,c
  2761   000556  C02D  F014         	movff	utoa@w,pad@p
  2762   00055A  C02E  F015         	movff	utoa@w+1,pad@p+1
  2763   00055E  ECA2  F005         	call	_pad	;wreg free
  2764   000562  0012               	return		;funcret
  2765   000564                     __end_of_utoa:
  2766                           	callstack 0
  2767                           
  2768 ;; *************** function _pad *****************
  2769 ;; Defined at:
  2770 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  2773 ;;		 -> sprintf@f(11), 
  2774 ;;  buf             2   17[COMRAM] PTR unsigned char 
  2775 ;;		 -> dbuf(32), 
  2776 ;;  p               2   19[COMRAM] int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  w               2   24[COMRAM] int 
  2779 ;;  i               2   22[COMRAM] int 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/1
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2789 ;;      Params:         5       0       0       0       0       0       0       0       0
  2790 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2791 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2792 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2793 ;;Total ram usage:       10 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 4
  2796 ;; This function calls:
  2797 ;;		_fputc
  2798 ;;		_fputs
  2799 ;; This function is called by:
  2800 ;;		_utoa
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text5
  2805   000B44                     __ptext5:
  2806                           	callstack 0
  2807   000B44                     _pad:
  2808                           	callstack 22
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2811                           
  2812                           ;incstack = 0
  2813   000B44  BE15               	btfsc	(pad@p+1)^0,7,c
  2814   000B46  D005               	goto	l2773
  2815   000B48  C014  F019         	movff	pad@p,pad@w
  2816   000B4C  C015  F01A         	movff	pad@p+1,pad@w+1
  2817   000B50  D004               	goto	l1030
  2818   000B52                     l2773:
  2819   000B52  0E00               	movlw	0
  2820   000B54  6E1A               	movwf	(pad@w+1)^0,c
  2821   000B56  0E00               	movlw	0
  2822   000B58  6E19               	movwf	pad@w^0,c
  2823   000B5A                     l1030:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2826   000B5A  0E00               	movlw	0
  2827   000B5C  6E18               	movwf	(pad@i+1)^0,c
  2828   000B5E  0E00               	movlw	0
  2829   000B60  6E17               	movwf	pad@i^0,c
  2830                           
  2831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2832   000B62  D00A               	goto	l2779
  2833   000B64                     l2775:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2836   000B64  0E00               	movlw	0
  2837   000B66  6E04               	movwf	(fputc@c+1)^0,c
  2838   000B68  0E20               	movlw	32
  2839   000B6A  6E03               	movwf	fputc@c^0,c
  2840   000B6C  C011  F005         	movff	pad@fp,fputc@fp
  2841   000B70  ECFD  F004         	call	_fputc	;wreg free
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2844   000B74  4A17               	infsnz	pad@i^0,f,c
  2845   000B76  2A18               	incf	(pad@i+1)^0,f,c
  2846   000B78                     l2779:
  2847                           
  2848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2849   000B78  5019               	movf	pad@w^0,w,c
  2850   000B7A  5C17               	subwf	pad@i^0,w,c
  2851   000B7C  5018               	movf	(pad@i+1)^0,w,c
  2852   000B7E  0A80               	xorlw	128
  2853   000B80  6E16               	movwf	??_pad^0,c
  2854   000B82  501A               	movf	(pad@w+1)^0,w,c
  2855   000B84  0A80               	xorlw	128
  2856   000B86  5816               	subwfb	??_pad^0,w,c
  2857   000B88  A0D8               	btfss	status,0,c
  2858   000B8A  D7EC               	goto	l2775
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2861   000B8C  C012  F00B         	movff	pad@buf,fputs@s
  2862   000B90  C013  F00C         	movff	pad@buf+1,fputs@s+1
  2863   000B94  C011  F00D         	movff	pad@fp,fputs@fp
  2864   000B98  ECBD  F007         	call	_fputs	;wreg free
  2865   000B9C  0012               	return		;funcret
  2866   000B9E                     __end_of_pad:
  2867                           	callstack 0
  2868                           
  2869 ;; *************** function _fputs *****************
  2870 ;; Defined at:
  2871 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2874 ;;		 -> dbuf(32), 
  2875 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  2876 ;;		 -> sprintf@f(11), 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  i               2   14[COMRAM] int 
  2879 ;;  c               1   13[COMRAM] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  2   10[COMRAM] int 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/1
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2889 ;;      Params:         3       0       0       0       0       0       0       0       0
  2890 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2892 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2893 ;;Total ram usage:        6 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 3
  2896 ;; This function calls:
  2897 ;;		_fputc
  2898 ;; This function is called by:
  2899 ;;		_pad
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text6
  2904   000F7A                     __ptext6:
  2905                           	callstack 0
  2906   000F7A                     _fputs:
  2907                           	callstack 22
  2908                           
  2909                           ;incstack = 0
  2910   000F7A  0E00               	movlw	0
  2911   000F7C  6E10               	movwf	(fputs@i+1)^0,c
  2912   000F7E  0E00               	movlw	0
  2913   000F80  6E0F               	movwf	fputs@i^0,c
  2914   000F82  D009               	goto	l2729
  2915   000F84                     l2725:
  2916   000F84  C00E  F003         	movff	fputs@c,fputc@c
  2917   000F88  6A04               	clrf	(fputc@c+1)^0,c
  2918   000F8A  C00D  F005         	movff	fputs@fp,fputc@fp
  2919   000F8E  ECFD  F004         	call	_fputc	;wreg free
  2920   000F92  4A0F               	infsnz	fputs@i^0,f,c
  2921   000F94  2A10               	incf	(fputs@i+1)^0,f,c
  2922   000F96                     l2729:
  2923   000F96  500F               	movf	fputs@i^0,w,c
  2924   000F98  240B               	addwf	fputs@s^0,w,c
  2925   000F9A  6ED9               	movwf	fsr2l,c
  2926   000F9C  5010               	movf	(fputs@i+1)^0,w,c
  2927   000F9E  200C               	addwfc	(fputs@s+1)^0,w,c
  2928   000FA0  6EDA               	movwf	fsr2h,c
  2929   000FA2  50DF               	movf	indf2,w,c
  2930   000FA4  6E0E               	movwf	fputs@c^0,c
  2931   000FA6  500E               	movf	fputs@c^0,w,c
  2932   000FA8  B4D8               	btfsc	status,2,c
  2933   000FAA  0012               	return	
  2934   000FAC  D7EB               	goto	l2725
  2935   000FAE                     __end_of_fputs:
  2936                           	callstack 0
  2937                           
  2938 ;; *************** function _fputc *****************
  2939 ;; Defined at:
  2940 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  c               2    2[COMRAM] int 
  2943 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  2944 ;;		 -> sprintf@f(11), 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  2    2[COMRAM] int 
  2949 ;; Registers used:
  2950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2956 ;;      Params:         3       0       0       0       0       0       0       0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2958 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2959 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2960 ;;Total ram usage:        8 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 2
  2963 ;; This function calls:
  2964 ;;		_putch
  2965 ;; This function is called by:
  2966 ;;		_pad
  2967 ;;		_vfpfcnvrt
  2968 ;;		_fputs
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text7
  2973   0009FA                     __ptext7:
  2974                           	callstack 0
  2975   0009FA                     _fputc:
  2976                           	callstack 22
  2977                           
  2978                           ;incstack = 0
  2979   0009FA  5005               	movf	fputc@fp^0,w,c
  2980   0009FC  B4D8               	btfsc	status,2,c
  2981   0009FE  D003               	goto	u1320
  2982   000A00  5005               	movf	fputc@fp^0,w,c
  2983   000A02  A4D8               	btfss	status,2,c
  2984   000A04  D004               	goto	l2715
  2985   000A06                     u1320:
  2986   000A06  5003               	movf	fputc@c^0,w,c
  2987   000A08  EC82  F008         	call	_putch
  2988   000A0C  0012               	return	
  2989   000A0E                     l2715:
  2990   000A0E  5005               	movf	fputc@fp^0,w,c
  2991   000A10  6ED9               	movwf	fsr2l,c
  2992   000A12  6ADA               	clrf	fsr2h,c
  2993   000A14  0E09               	movlw	9
  2994   000A16  26D9               	addwf	fsr2l,f,c
  2995   000A18  50DE               	movf	postinc2,w,c
  2996   000A1A  10DE               	iorwf	postinc2,w,c
  2997   000A1C  B4D8               	btfsc	status,2,c
  2998   000A1E  D014               	goto	u1340
  2999   000A20  5005               	movf	fputc@fp^0,w,c
  3000   000A22  6ED9               	movwf	fsr2l,c
  3001   000A24  6ADA               	clrf	fsr2h,c
  3002   000A26  0E09               	movlw	9
  3003   000A28  26D9               	addwf	fsr2l,f,c
  3004   000A2A  5005               	movf	fputc@fp^0,w,c
  3005   000A2C  6EE1               	movwf	fsr1l,c
  3006   000A2E  6AE2               	clrf	fsr1h,c
  3007   000A30  0E03               	movlw	3
  3008   000A32  26E1               	addwf	fsr1l,f,c
  3009   000A34  50DE               	movf	postinc2,w,c
  3010   000A36  5CE6               	subwf	postinc1,w,c
  3011   000A38  50E6               	movf	postinc1,w,c
  3012   000A3A  0A80               	xorlw	128
  3013   000A3C  6E0A               	movwf	(??_fputc+4)^0,c
  3014   000A3E  50DE               	movf	postinc2,w,c
  3015   000A40  0A80               	xorlw	128
  3016   000A42  580A               	subwfb	(??_fputc+4)^0,w,c
  3017   000A44  B0D8               	btfsc	status,0,c
  3018   000A46  0012               	return	
  3019   000A48                     u1340:
  3020   000A48  5005               	movf	fputc@fp^0,w,c
  3021   000A4A  6ED9               	movwf	fsr2l,c
  3022   000A4C  6ADA               	clrf	fsr2h,c
  3023   000A4E  0E03               	movlw	3
  3024   000A50  26D9               	addwf	fsr2l,f,c
  3025   000A52  50DF               	movf	indf2,w,c
  3026   000A54  6E06               	movwf	??_fputc^0,c
  3027   000A56  5005               	movf	fputc@fp^0,w,c
  3028   000A58  6ED9               	movwf	fsr2l,c
  3029   000A5A  6ADA               	clrf	fsr2h,c
  3030   000A5C  50DF               	movf	indf2,w,c
  3031   000A5E  2406               	addwf	??_fputc^0,w,c
  3032   000A60  6ED9               	movwf	fsr2l,c
  3033   000A62  6ADA               	clrf	fsr2h,c
  3034   000A64  C003  FFDF         	movff	fputc@c,indf2
  3035   000A68  5005               	movf	fputc@fp^0,w,c
  3036   000A6A  6ED9               	movwf	fsr2l,c
  3037   000A6C  6ADA               	clrf	fsr2h,c
  3038   000A6E  0E03               	movlw	3
  3039   000A70  26D9               	addwf	fsr2l,f,c
  3040   000A72  2ADE               	incf	postinc2,f,c
  3041   000A74  0E00               	movlw	0
  3042   000A76  22DD               	addwfc	postdec2,f,c
  3043   000A78  0012               	return		;funcret
  3044   000A7A                     __end_of_fputc:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function _putch *****************
  3048 ;; Defined at:
  3049 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  c               1    wreg     unsigned char 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  c               1    0[COMRAM] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0
  3064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3066 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3067 ;;Total ram usage:        0 bytes
  3068 ;; Hardware stack levels used: 1
  3069 ;; Hardware stack levels required when called: 1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_fputc
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text8
  3078   001104                     __ptext8:
  3079                           	callstack 0
  3080   001104                     _putch:
  3081                           	callstack 22
  3082                           
  3083                           ;incstack = 0
  3084   001104  0012               	return		;funcret
  3085   001106                     __end_of_putch:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function ___lomod *****************
  3089 ;; Defined at:
  3090 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  dividend        8    2[COMRAM] unsigned long long 
  3093 ;;  divisor         8   10[COMRAM] unsigned long long 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  counter         1   18[COMRAM] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  8    2[COMRAM] unsigned long long 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, status,0
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/1
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3105 ;;      Params:        16       0       0       0       0       0       0       0       0
  3106 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3108 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3109 ;;Total ram usage:       17 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_utoa
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text9
  3120   000840                     __ptext9:
  3121                           	callstack 0
  3122   000840                     ___lomod:
  3123                           	callstack 25
  3124                           
  3125                           ;incstack = 0
  3126   000840  500B               	movf	___lomod@divisor^0,w,c
  3127   000842  100C               	iorwf	(___lomod@divisor+1)^0,w,c
  3128   000844  100D               	iorwf	(___lomod@divisor+2)^0,w,c
  3129   000846  100E               	iorwf	(___lomod@divisor+3)^0,w,c
  3130   000848  100F               	iorwf	(___lomod@divisor+4)^0,w,c
  3131   00084A  1010               	iorwf	(___lomod@divisor+5)^0,w,c
  3132   00084C  1011               	iorwf	(___lomod@divisor+6)^0,w,c
  3133   00084E  1012               	iorwf	(___lomod@divisor+7)^0,w,c
  3134   000850  B4D8               	btfsc	status,2,c
  3135   000852  D03C               	goto	l741
  3136   000854  0E01               	movlw	1
  3137   000856  6E13               	movwf	___lomod@counter^0,c
  3138   000858  D00A               	goto	l2759
  3139   00085A                     l2757:
  3140   00085A  90D8               	bcf	status,0,c
  3141   00085C  360B               	rlcf	___lomod@divisor^0,f,c
  3142   00085E  360C               	rlcf	(___lomod@divisor+1)^0,f,c
  3143   000860  360D               	rlcf	(___lomod@divisor+2)^0,f,c
  3144   000862  360E               	rlcf	(___lomod@divisor+3)^0,f,c
  3145   000864  360F               	rlcf	(___lomod@divisor+4)^0,f,c
  3146   000866  3610               	rlcf	(___lomod@divisor+5)^0,f,c
  3147   000868  3611               	rlcf	(___lomod@divisor+6)^0,f,c
  3148   00086A  3612               	rlcf	(___lomod@divisor+7)^0,f,c
  3149   00086C  2A13               	incf	___lomod@counter^0,f,c
  3150   00086E                     l2759:
  3151   00086E  AE12               	btfss	(___lomod@divisor+7)^0,7,c
  3152   000870  D7F4               	goto	l2757
  3153   000872                     u1410:
  3154   000872  500B               	movf	___lomod@divisor^0,w,c
  3155   000874  5C03               	subwf	___lomod@dividend^0,w,c
  3156   000876  500C               	movf	(___lomod@divisor+1)^0,w,c
  3157   000878  5804               	subwfb	(___lomod@dividend+1)^0,w,c
  3158   00087A  500D               	movf	(___lomod@divisor+2)^0,w,c
  3159   00087C  5805               	subwfb	(___lomod@dividend+2)^0,w,c
  3160   00087E  500E               	movf	(___lomod@divisor+3)^0,w,c
  3161   000880  5806               	subwfb	(___lomod@dividend+3)^0,w,c
  3162   000882  500F               	movf	(___lomod@divisor+4)^0,w,c
  3163   000884  5807               	subwfb	(___lomod@dividend+4)^0,w,c
  3164   000886  5010               	movf	(___lomod@divisor+5)^0,w,c
  3165   000888  5808               	subwfb	(___lomod@dividend+5)^0,w,c
  3166   00088A  5011               	movf	(___lomod@divisor+6)^0,w,c
  3167   00088C  5809               	subwfb	(___lomod@dividend+6)^0,w,c
  3168   00088E  5012               	movf	(___lomod@divisor+7)^0,w,c
  3169   000890  580A               	subwfb	(___lomod@dividend+7)^0,w,c
  3170   000892  A0D8               	btfss	status,0,c
  3171   000894  D010               	goto	l2765
  3172   000896  500B               	movf	___lomod@divisor^0,w,c
  3173   000898  5E03               	subwf	___lomod@dividend^0,f,c
  3174   00089A  500C               	movf	(___lomod@divisor+1)^0,w,c
  3175   00089C  5A04               	subwfb	(___lomod@dividend+1)^0,f,c
  3176   00089E  500D               	movf	(___lomod@divisor+2)^0,w,c
  3177   0008A0  5A05               	subwfb	(___lomod@dividend+2)^0,f,c
  3178   0008A2  500E               	movf	(___lomod@divisor+3)^0,w,c
  3179   0008A4  5A06               	subwfb	(___lomod@dividend+3)^0,f,c
  3180   0008A6  500F               	movf	(___lomod@divisor+4)^0,w,c
  3181   0008A8  5A07               	subwfb	(___lomod@dividend+4)^0,f,c
  3182   0008AA  5010               	movf	(___lomod@divisor+5)^0,w,c
  3183   0008AC  5A08               	subwfb	(___lomod@dividend+5)^0,f,c
  3184   0008AE  5011               	movf	(___lomod@divisor+6)^0,w,c
  3185   0008B0  5A09               	subwfb	(___lomod@dividend+6)^0,f,c
  3186   0008B2  5012               	movf	(___lomod@divisor+7)^0,w,c
  3187   0008B4  5A0A               	subwfb	(___lomod@dividend+7)^0,f,c
  3188   0008B6                     l2765:
  3189   0008B6  90D8               	bcf	status,0,c
  3190   0008B8  3212               	rrcf	(___lomod@divisor+7)^0,f,c
  3191   0008BA  3211               	rrcf	(___lomod@divisor+6)^0,f,c
  3192   0008BC  3210               	rrcf	(___lomod@divisor+5)^0,f,c
  3193   0008BE  320F               	rrcf	(___lomod@divisor+4)^0,f,c
  3194   0008C0  320E               	rrcf	(___lomod@divisor+3)^0,f,c
  3195   0008C2  320D               	rrcf	(___lomod@divisor+2)^0,f,c
  3196   0008C4  320C               	rrcf	(___lomod@divisor+1)^0,f,c
  3197   0008C6  320B               	rrcf	___lomod@divisor^0,f,c
  3198   0008C8  2E13               	decfsz	___lomod@counter^0,f,c
  3199   0008CA  D7D3               	goto	u1410
  3200   0008CC                     l741:
  3201   0008CC  C003  F003         	movff	___lomod@dividend,?___lomod
  3202   0008D0  C004  F004         	movff	___lomod@dividend+1,?___lomod+1
  3203   0008D4  C005  F005         	movff	___lomod@dividend+2,?___lomod+2
  3204   0008D8  C006  F006         	movff	___lomod@dividend+3,?___lomod+3
  3205   0008DC  C007  F007         	movff	___lomod@dividend+4,?___lomod+4
  3206   0008E0  C008  F008         	movff	___lomod@dividend+5,?___lomod+5
  3207   0008E4  C009  F009         	movff	___lomod@dividend+6,?___lomod+6
  3208   0008E8  C00A  F00A         	movff	___lomod@dividend+7,?___lomod+7
  3209   0008EC  0012               	return		;funcret
  3210   0008EE                     __end_of___lomod:
  3211                           	callstack 0
  3212                           
  3213 ;; *************** function ___lodiv *****************
  3214 ;; Defined at:
  3215 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  dividend        8    2[COMRAM] unsigned long long 
  3218 ;;  divisor         8   10[COMRAM] unsigned long long 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  quotient        8   18[COMRAM] unsigned long long 
  3221 ;;  counter         1   26[COMRAM] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  8    2[COMRAM] unsigned long long 
  3224 ;; Registers used:
  3225 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/1
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3231 ;;      Params:        16       0       0       0       0       0       0       0       0
  3232 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3234 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3235 ;;Total ram usage:       25 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; Hardware stack levels required when called: 1
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_utoa
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text10
  3246   000772                     __ptext10:
  3247                           	callstack 0
  3248   000772                     ___lodiv:
  3249                           	callstack 25
  3250                           
  3251                           ;incstack = 0
  3252   000772  EE20  F013         	lfsr	2,___lodiv@quotient
  3253   000776  0E07               	movlw	7
  3254   000778                     u1361:
  3255   000778  6ADE               	clrf	postinc2,c
  3256   00077A  06E8               	decf	wreg,f,c
  3257   00077C  E2FD               	bc	u1361
  3258   00077E  500B               	movf	___lodiv@divisor^0,w,c
  3259   000780  100C               	iorwf	(___lodiv@divisor+1)^0,w,c
  3260   000782  100D               	iorwf	(___lodiv@divisor+2)^0,w,c
  3261   000784  100E               	iorwf	(___lodiv@divisor+3)^0,w,c
  3262   000786  100F               	iorwf	(___lodiv@divisor+4)^0,w,c
  3263   000788  1010               	iorwf	(___lodiv@divisor+5)^0,w,c
  3264   00078A  1011               	iorwf	(___lodiv@divisor+6)^0,w,c
  3265   00078C  1012               	iorwf	(___lodiv@divisor+7)^0,w,c
  3266   00078E  B4D8               	btfsc	status,2,c
  3267   000790  D046               	goto	l731
  3268   000792  0E01               	movlw	1
  3269   000794  6E1B               	movwf	___lodiv@counter^0,c
  3270   000796  D00A               	goto	l2739
  3271   000798                     l2737:
  3272   000798  90D8               	bcf	status,0,c
  3273   00079A  360B               	rlcf	___lodiv@divisor^0,f,c
  3274   00079C  360C               	rlcf	(___lodiv@divisor+1)^0,f,c
  3275   00079E  360D               	rlcf	(___lodiv@divisor+2)^0,f,c
  3276   0007A0  360E               	rlcf	(___lodiv@divisor+3)^0,f,c
  3277   0007A2  360F               	rlcf	(___lodiv@divisor+4)^0,f,c
  3278   0007A4  3610               	rlcf	(___lodiv@divisor+5)^0,f,c
  3279   0007A6  3611               	rlcf	(___lodiv@divisor+6)^0,f,c
  3280   0007A8  3612               	rlcf	(___lodiv@divisor+7)^0,f,c
  3281   0007AA  2A1B               	incf	___lodiv@counter^0,f,c
  3282   0007AC                     l2739:
  3283   0007AC  AE12               	btfss	(___lodiv@divisor+7)^0,7,c
  3284   0007AE  D7F4               	goto	l2737
  3285   0007B0                     u1380:
  3286   0007B0  90D8               	bcf	status,0,c
  3287   0007B2  3613               	rlcf	___lodiv@quotient^0,f,c
  3288   0007B4  3614               	rlcf	(___lodiv@quotient+1)^0,f,c
  3289   0007B6  3615               	rlcf	(___lodiv@quotient+2)^0,f,c
  3290   0007B8  3616               	rlcf	(___lodiv@quotient+3)^0,f,c
  3291   0007BA  3617               	rlcf	(___lodiv@quotient+4)^0,f,c
  3292   0007BC  3618               	rlcf	(___lodiv@quotient+5)^0,f,c
  3293   0007BE  3619               	rlcf	(___lodiv@quotient+6)^0,f,c
  3294   0007C0  361A               	rlcf	(___lodiv@quotient+7)^0,f,c
  3295   0007C2  500B               	movf	___lodiv@divisor^0,w,c
  3296   0007C4  5C03               	subwf	___lodiv@dividend^0,w,c
  3297   0007C6  500C               	movf	(___lodiv@divisor+1)^0,w,c
  3298   0007C8  5804               	subwfb	(___lodiv@dividend+1)^0,w,c
  3299   0007CA  500D               	movf	(___lodiv@divisor+2)^0,w,c
  3300   0007CC  5805               	subwfb	(___lodiv@dividend+2)^0,w,c
  3301   0007CE  500E               	movf	(___lodiv@divisor+3)^0,w,c
  3302   0007D0  5806               	subwfb	(___lodiv@dividend+3)^0,w,c
  3303   0007D2  500F               	movf	(___lodiv@divisor+4)^0,w,c
  3304   0007D4  5807               	subwfb	(___lodiv@dividend+4)^0,w,c
  3305   0007D6  5010               	movf	(___lodiv@divisor+5)^0,w,c
  3306   0007D8  5808               	subwfb	(___lodiv@dividend+5)^0,w,c
  3307   0007DA  5011               	movf	(___lodiv@divisor+6)^0,w,c
  3308   0007DC  5809               	subwfb	(___lodiv@dividend+6)^0,w,c
  3309   0007DE  5012               	movf	(___lodiv@divisor+7)^0,w,c
  3310   0007E0  580A               	subwfb	(___lodiv@dividend+7)^0,w,c
  3311   0007E2  A0D8               	btfss	status,0,c
  3312   0007E4  D011               	goto	l2749
  3313   0007E6  500B               	movf	___lodiv@divisor^0,w,c
  3314   0007E8  5E03               	subwf	___lodiv@dividend^0,f,c
  3315   0007EA  500C               	movf	(___lodiv@divisor+1)^0,w,c
  3316   0007EC  5A04               	subwfb	(___lodiv@dividend+1)^0,f,c
  3317   0007EE  500D               	movf	(___lodiv@divisor+2)^0,w,c
  3318   0007F0  5A05               	subwfb	(___lodiv@dividend+2)^0,f,c
  3319   0007F2  500E               	movf	(___lodiv@divisor+3)^0,w,c
  3320   0007F4  5A06               	subwfb	(___lodiv@dividend+3)^0,f,c
  3321   0007F6  500F               	movf	(___lodiv@divisor+4)^0,w,c
  3322   0007F8  5A07               	subwfb	(___lodiv@dividend+4)^0,f,c
  3323   0007FA  5010               	movf	(___lodiv@divisor+5)^0,w,c
  3324   0007FC  5A08               	subwfb	(___lodiv@dividend+5)^0,f,c
  3325   0007FE  5011               	movf	(___lodiv@divisor+6)^0,w,c
  3326   000800  5A09               	subwfb	(___lodiv@dividend+6)^0,f,c
  3327   000802  5012               	movf	(___lodiv@divisor+7)^0,w,c
  3328   000804  5A0A               	subwfb	(___lodiv@dividend+7)^0,f,c
  3329   000806  8013               	bsf	___lodiv@quotient^0,0,c
  3330   000808                     l2749:
  3331   000808  90D8               	bcf	status,0,c
  3332   00080A  3212               	rrcf	(___lodiv@divisor+7)^0,f,c
  3333   00080C  3211               	rrcf	(___lodiv@divisor+6)^0,f,c
  3334   00080E  3210               	rrcf	(___lodiv@divisor+5)^0,f,c
  3335   000810  320F               	rrcf	(___lodiv@divisor+4)^0,f,c
  3336   000812  320E               	rrcf	(___lodiv@divisor+3)^0,f,c
  3337   000814  320D               	rrcf	(___lodiv@divisor+2)^0,f,c
  3338   000816  320C               	rrcf	(___lodiv@divisor+1)^0,f,c
  3339   000818  320B               	rrcf	___lodiv@divisor^0,f,c
  3340   00081A  2E1B               	decfsz	___lodiv@counter^0,f,c
  3341   00081C  D7C9               	goto	u1380
  3342   00081E                     l731:
  3343   00081E  C013  F003         	movff	___lodiv@quotient,?___lodiv
  3344   000822  C014  F004         	movff	___lodiv@quotient+1,?___lodiv+1
  3345   000826  C015  F005         	movff	___lodiv@quotient+2,?___lodiv+2
  3346   00082A  C016  F006         	movff	___lodiv@quotient+3,?___lodiv+3
  3347   00082E  C017  F007         	movff	___lodiv@quotient+4,?___lodiv+4
  3348   000832  C018  F008         	movff	___lodiv@quotient+5,?___lodiv+5
  3349   000836  C019  F009         	movff	___lodiv@quotient+6,?___lodiv+6
  3350   00083A  C01A  F00A         	movff	___lodiv@quotient+7,?___lodiv+7
  3351   00083E  0012               	return		;funcret
  3352   000840                     __end_of___lodiv:
  3353                           	callstack 0
  3354                           
  3355 ;; *************** function _atoi *****************
  3356 ;; Defined at:
  3357 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  s               1    8[COMRAM] PTR const unsigned char 
  3360 ;;		 -> buf_rx(6), 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  n               2   15[COMRAM] int 
  3363 ;;  neg             2   13[COMRAM] int 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  2    8[COMRAM] int 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3373 ;;      Params:         2       0       0       0       0       0       0       0       0
  3374 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3375 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3376 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3377 ;;Total ram usage:        9 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 2
  3380 ;; This function calls:
  3381 ;;		___wmul
  3382 ;;		_isdigit
  3383 ;;		_isspace
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text11
  3390   00067A                     __ptext11:
  3391                           	callstack 0
  3392   00067A                     _atoi:
  3393                           	callstack 28
  3394                           
  3395                           ;incstack = 0
  3396   00067A  0E00               	movlw	0
  3397   00067C  6E11               	movwf	(atoi@n+1)^0,c
  3398   00067E  0E00               	movlw	0
  3399   000680  6E10               	movwf	atoi@n^0,c
  3400   000682  0E00               	movlw	0
  3401   000684  6E0F               	movwf	(atoi@neg+1)^0,c
  3402   000686  0E00               	movlw	0
  3403   000688  6E0E               	movwf	atoi@neg^0,c
  3404   00068A  D001               	goto	l3107
  3405   00068C                     l3103:
  3406   00068C  2A09               	incf	atoi@s^0,f,c
  3407   00068E                     l3107:
  3408   00068E  5009               	movf	atoi@s^0,w,c
  3409   000690  6ED9               	movwf	fsr2l,c
  3410   000692  6ADA               	clrf	fsr2h,c
  3411   000694  0E20               	movlw	32
  3412   000696  18DE               	xorwf	postinc2,w,c
  3413   000698  B4D8               	btfsc	status,2,c
  3414   00069A  D7F8               	goto	l3103
  3415   00069C  5009               	movf	atoi@s^0,w,c
  3416   00069E  6ED9               	movwf	fsr2l,c
  3417   0006A0  6ADA               	clrf	fsr2h,c
  3418   0006A2  50DF               	movf	indf2,w,c
  3419   0006A4  6E0B               	movwf	??_atoi^0,c
  3420   0006A6  0EF7               	movlw	247
  3421   0006A8  240B               	addwf	??_atoi^0,w,c
  3422   0006AA  6E0C               	movwf	(??_atoi+1)^0,c
  3423   0006AC  6A0D               	clrf	(??_atoi+2)^0,c
  3424   0006AE  0EFF               	movlw	255
  3425   0006B0  220D               	addwfc	(??_atoi+2)^0,f,c
  3426   0006B2  500D               	movf	(??_atoi+2)^0,w,c
  3427   0006B4  E10B               	bnz	l3115
  3428   0006B6  0E05               	movlw	5
  3429   0006B8  5C0C               	subwf	(??_atoi+1)^0,w,c
  3430   0006BA  B0D8               	btfsc	status,0,c
  3431   0006BC  D007               	goto	l3115
  3432   0006BE  D7E6               	goto	l3103
  3433   0006C0                     l3111:
  3434   0006C0  0E00               	movlw	0
  3435   0006C2  6E0F               	movwf	(atoi@neg+1)^0,c
  3436   0006C4  0E01               	movlw	1
  3437   0006C6  6E0E               	movwf	atoi@neg^0,c
  3438   0006C8                     l3113:
  3439   0006C8  2A09               	incf	atoi@s^0,f,c
  3440   0006CA  D02C               	goto	l3123
  3441   0006CC                     l3115:
  3442   0006CC  5009               	movf	atoi@s^0,w,c
  3443   0006CE  6ED9               	movwf	fsr2l,c
  3444   0006D0  6ADA               	clrf	fsr2h,c
  3445   0006D2  50DF               	movf	indf2,w,c
  3446   0006D4  6E0B               	movwf	??_atoi^0,c
  3447   0006D6  6A0C               	clrf	(??_atoi+1)^0,c
  3448                           
  3449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3450                           ; Switch size 1, requested type "simple"
  3451                           ; Number of cases is 1, Range of values is 0 to 0
  3452                           ; switch strategies available:
  3453                           ; Name         Instructions Cycles
  3454                           ; simple_byte            4     3 (average)
  3455                           ;	Chosen strategy is simple_byte
  3456   0006D8  500C               	movf	(??_atoi+1)^0,w,c
  3457   0006DA  0A00               	xorlw	0	; case 0
  3458   0006DC  A4D8               	btfss	status,2,c
  3459   0006DE  D022               	goto	l3123
  3460                           
  3461                           ; Switch size 1, requested type "simple"
  3462                           ; Number of cases is 2, Range of values is 43 to 45
  3463                           ; switch strategies available:
  3464                           ; Name         Instructions Cycles
  3465                           ; simple_byte            7     4 (average)
  3466                           ;	Chosen strategy is simple_byte
  3467   0006E0  500B               	movf	??_atoi^0,w,c
  3468   0006E2  0A2B               	xorlw	43	; case 43
  3469   0006E4  B4D8               	btfsc	status,2,c
  3470   0006E6  D7F0               	goto	l3113
  3471   0006E8  0A06               	xorlw	6	; case 45
  3472   0006EA  B4D8               	btfsc	status,2,c
  3473   0006EC  D7E9               	goto	l3111
  3474   0006EE  D01A               	goto	l3123
  3475   0006F0                     l3117:
  3476   0006F0  C010  F003         	movff	atoi@n,___wmul@multiplier
  3477   0006F4  C011  F004         	movff	atoi@n+1,___wmul@multiplier+1
  3478   0006F8  0E00               	movlw	0
  3479   0006FA  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  3480   0006FC  0E0A               	movlw	10
  3481   0006FE  6E05               	movwf	___wmul@multiplicand^0,c
  3482   000700  EC51  F008         	call	___wmul	;wreg free
  3483   000704  5009               	movf	atoi@s^0,w,c
  3484   000706  6ED9               	movwf	fsr2l,c
  3485   000708  6ADA               	clrf	fsr2h,c
  3486   00070A  50DF               	movf	indf2,w,c
  3487   00070C  6E0B               	movwf	??_atoi^0,c
  3488   00070E  500B               	movf	??_atoi^0,w,c
  3489   000710  5E03               	subwf	?___wmul^0,f,c
  3490   000712  0E00               	movlw	0
  3491   000714  5A04               	subwfb	(?___wmul+1)^0,f,c
  3492   000716  0E30               	movlw	48
  3493   000718  2403               	addwf	?___wmul^0,w,c
  3494   00071A  6E10               	movwf	atoi@n^0,c
  3495   00071C  0E00               	movlw	0
  3496   00071E  2004               	addwfc	(?___wmul+1)^0,w,c
  3497   000720  6E11               	movwf	(atoi@n+1)^0,c
  3498   000722  D7D2               	goto	l3113
  3499   000724                     l3123:
  3500   000724  5009               	movf	atoi@s^0,w,c
  3501   000726  6ED9               	movwf	fsr2l,c
  3502   000728  6ADA               	clrf	fsr2h,c
  3503   00072A  50DF               	movf	indf2,w,c
  3504   00072C  6E0B               	movwf	??_atoi^0,c
  3505   00072E  0ED0               	movlw	208
  3506   000730  240B               	addwf	??_atoi^0,w,c
  3507   000732  6E0C               	movwf	(??_atoi+1)^0,c
  3508   000734  6A0D               	clrf	(??_atoi+2)^0,c
  3509   000736  0EFF               	movlw	255
  3510   000738  220D               	addwfc	(??_atoi+2)^0,f,c
  3511   00073A  500D               	movf	(??_atoi+2)^0,w,c
  3512   00073C  E104               	bnz	u1820
  3513   00073E  0E0A               	movlw	10
  3514   000740  5C0C               	subwf	(??_atoi+1)^0,w,c
  3515   000742  A0D8               	btfss	status,0,c
  3516   000744  D7D5               	goto	l3117
  3517   000746                     u1820:
  3518   000746  500E               	movf	atoi@neg^0,w,c
  3519   000748  100F               	iorwf	(atoi@neg+1)^0,w,c
  3520   00074A  A4D8               	btfss	status,2,c
  3521   00074C  D00D               	goto	l986
  3522   00074E  C010  F00B         	movff	atoi@n,??_atoi
  3523   000752  C011  F00C         	movff	atoi@n+1,??_atoi+1
  3524   000756  1E0B               	comf	??_atoi^0,f,c
  3525   000758  1E0C               	comf	(??_atoi+1)^0,f,c
  3526   00075A  4A0B               	infsnz	??_atoi^0,f,c
  3527   00075C  2A0C               	incf	(??_atoi+1)^0,f,c
  3528   00075E  C00B  F009         	movff	??_atoi,?_atoi
  3529   000762  C00C  F00A         	movff	??_atoi+1,?_atoi+1
  3530   000766  0012               	return	
  3531   000768                     l986:
  3532   000768  C010  F009         	movff	atoi@n,?_atoi
  3533   00076C  C011  F00A         	movff	atoi@n+1,?_atoi+1
  3534   000770  0012               	return		;funcret
  3535   000772                     __end_of_atoi:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _isspace *****************
  3539 ;; Defined at:
  3540 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  c               2    2[COMRAM] int 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2    2[COMRAM] int 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3554 ;;      Params:         2       0       0       0       0       0       0       0       0
  3555 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3556 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3557 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3558 ;;Total ram usage:        5 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_atoi
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text12
  3569   001016                     __ptext12:
  3570                           	callstack 0
  3571   001016                     _isspace:
  3572                           	callstack 28
  3573                           
  3574                           ;incstack = 0
  3575   001016  0E01               	movlw	1
  3576   001018  6E07               	movwf	_isspace$1209^0,c
  3577   00101A  0E20               	movlw	32
  3578   00101C  1803               	xorwf	isspace@c^0,w,c
  3579   00101E  1004               	iorwf	(isspace@c+1)^0,w,c
  3580   001020  B4D8               	btfsc	status,2,c
  3581   001022  D00E               	goto	l2991
  3582   001024  0EF7               	movlw	247
  3583   001026  2403               	addwf	isspace@c^0,w,c
  3584   001028  6E05               	movwf	??_isspace^0,c
  3585   00102A  0EFF               	movlw	255
  3586   00102C  2004               	addwfc	(isspace@c+1)^0,w,c
  3587   00102E  6E06               	movwf	(??_isspace+1)^0,c
  3588   001030  5006               	movf	(??_isspace+1)^0,w,c
  3589   001032  E104               	bnz	u1680
  3590   001034  0E05               	movlw	5
  3591   001036  5C05               	subwf	??_isspace^0,w,c
  3592   001038  A0D8               	btfss	status,0,c
  3593   00103A  D002               	goto	l2991
  3594   00103C                     u1680:
  3595   00103C  0E00               	movlw	0
  3596   00103E  6E07               	movwf	_isspace$1209^0,c
  3597   001040                     l2991:
  3598   001040  C007  F003         	movff	_isspace$1209,?_isspace
  3599   001044  6A04               	clrf	(?_isspace+1)^0,c
  3600   001046  0012               	return		;funcret
  3601   001048                     __end_of_isspace:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _isdigit *****************
  3605 ;; Defined at:
  3606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  c               2    2[COMRAM] int 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  2    2[COMRAM] int 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3620 ;;      Params:         2       0       0       0       0       0       0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3622 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3623 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3624 ;;Total ram usage:        4 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 1
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_atoi
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text13
  3635   0010C8                     __ptext13:
  3636                           	callstack 0
  3637   0010C8                     _isdigit:
  3638                           	callstack 28
  3639                           
  3640                           ;incstack = 0
  3641   0010C8  0ED0               	movlw	208
  3642   0010CA  2403               	addwf	isdigit@c^0,w,c
  3643   0010CC  6E05               	movwf	??_isdigit^0,c
  3644   0010CE  0EFF               	movlw	255
  3645   0010D0  2004               	addwfc	(isdigit@c+1)^0,w,c
  3646   0010D2  6E06               	movwf	(??_isdigit+1)^0,c
  3647   0010D4  5006               	movf	(??_isdigit+1)^0,w,c
  3648   0010D6  E106               	bnz	u1690
  3649   0010D8  0E0A               	movlw	10
  3650   0010DA  5C05               	subwf	??_isdigit^0,w,c
  3651   0010DC  B0D8               	btfsc	status,0,c
  3652   0010DE  D002               	goto	u1690
  3653   0010E0  0E01               	movlw	1
  3654   0010E2  D001               	goto	u1700
  3655   0010E4                     u1690:
  3656   0010E4  0E00               	movlw	0
  3657   0010E6                     u1700:
  3658   0010E6  6E03               	movwf	?_isdigit^0,c
  3659   0010E8  6A04               	clrf	(?_isdigit+1)^0,c
  3660   0010EA  0012               	return		;funcret
  3661   0010EC                     __end_of_isdigit:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function ___wmul *****************
  3665 ;; Defined at:
  3666 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  multiplier      2    2[COMRAM] unsigned int 
  3669 ;;  multiplicand    2    4[COMRAM] unsigned int 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  product         2    6[COMRAM] unsigned int 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  2    2[COMRAM] unsigned int 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0, prodl, prodh
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3681 ;;      Params:         4       0       0       0       0       0       0       0       0
  3682 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3684 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3685 ;;Total ram usage:        6 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; Hardware stack levels required when called: 1
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_atoi
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text14
  3696   0010A2                     __ptext14:
  3697                           	callstack 0
  3698   0010A2                     ___wmul:
  3699                           	callstack 28
  3700                           
  3701                           ;incstack = 0
  3702   0010A2  5003               	movf	___wmul@multiplier^0,w,c
  3703   0010A4  0205               	mulwf	___wmul@multiplicand^0,c
  3704   0010A6  CFF3 F007          	movff	prodl,___wmul@product
  3705   0010AA  CFF4 F008          	movff	prodh,___wmul@product+1
  3706   0010AE  5003               	movf	___wmul@multiplier^0,w,c
  3707   0010B0  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  3708   0010B2  50F3               	movf	243,w,c
  3709   0010B4  2608               	addwf	(___wmul@product+1)^0,f,c
  3710   0010B6  5004               	movf	(___wmul@multiplier+1)^0,w,c
  3711   0010B8  0205               	mulwf	___wmul@multiplicand^0,c
  3712   0010BA  50F3               	movf	243,w,c
  3713   0010BC  2608               	addwf	(___wmul@product+1)^0,f,c
  3714   0010BE  C007  F003         	movff	___wmul@product,?___wmul
  3715   0010C2  C008  F004         	movff	___wmul@product+1,?___wmul+1
  3716   0010C6  0012               	return		;funcret
  3717   0010C8                     __end_of___wmul:
  3718                           	callstack 0
  3719                           
  3720 ;; *************** function _S_Uart_Send_String *****************
  3721 ;; Defined at:
  3722 ;;		line 38 in file "uart_soft.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  Text            2    4[COMRAM] PTR unsigned char 
  3725 ;;		 -> STR_34(3), STR_32(3), STR_31(20), STR_30(30), 
  3726 ;;		 -> STR_29(36), STR_28(3), STR_27(27), STR_26(30), 
  3727 ;;		 -> STR_24(33), STR_23(16), STR_22(3), STR_21(34), 
  3728 ;;		 -> STR_20(50), STR_19(30), STR_17(34), STR_16(27), 
  3729 ;;		 -> STR_15(15), STR_14(19), STR_13(18), STR_12(16), 
  3730 ;;		 -> STR_11(3), STR_10(39), STR_9(36), buf_tx(30), 
  3731 ;;		 -> STR_7(19), STR_6(18), STR_5(40), STR_4(19), 
  3732 ;;		 -> STR_3(21), STR_2(22), STR_1(15), 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3744 ;;      Params:         2       0       0       0       0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3747 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3748 ;;Total ram usage:        2 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 2
  3751 ;; This function calls:
  3752 ;;		_S_Uart_Send_Char
  3753 ;; This function is called by:
  3754 ;;		_main
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text15
  3759   000CFA                     __ptext15:
  3760                           	callstack 0
  3761   000CFA                     _S_Uart_Send_String:
  3762                           	callstack 28
  3763                           
  3764                           ;uart_soft.c: 38: void S_Uart_Send_String(char* Text);uart_soft.c: 39: {;uart_soft.c: 40
      +                          :     while(*Text != '\0'){
  3765                           
  3766                           ;incstack = 0
  3767   000CFA  D014               	goto	l3053
  3768   000CFC                     l3049:
  3769                           
  3770                           ;uart_soft.c: 41:         S_Uart_Send_Char(*Text++);
  3771   000CFC  C005  FFF6         	movff	S_Uart_Send_String@Text,tblptrl
  3772   000D00  C006  FFF7         	movff	S_Uart_Send_String@Text+1,tblptrh
  3773   000D04  6AF8               	clrf	tblptru,c
  3774   000D06  0E07               	movlw	(high __ramtop+-1)
  3775   000D08  64F7               	cpfsgt	tblptrh,c
  3776   000D0A  D003               	bra	u1757
  3777   000D0C  0008               	tblrd		*
  3778   000D0E  50F5               	movf	tablat,w,c
  3779   000D10  D005               	bra	u1750
  3780   000D12                     u1757:
  3781   000D12  CFF6 FFE1          	movff	tblptrl,fsr1l
  3782   000D16  CFF7 FFE2          	movff	tblptrh,fsr1h
  3783   000D1A  50E7               	movf	indf1,w,c
  3784   000D1C                     u1750:
  3785   000D1C  ECA6  F006         	call	_S_Uart_Send_Char
  3786   000D20  4A05               	infsnz	S_Uart_Send_String@Text^0,f,c
  3787   000D22  2A06               	incf	(S_Uart_Send_String@Text+1)^0,f,c
  3788   000D24                     l3053:
  3789                           
  3790                           ;uart_soft.c: 40:     while(*Text != '\0'){
  3791   000D24  C005  FFF6         	movff	S_Uart_Send_String@Text,tblptrl
  3792   000D28  C006  FFF7         	movff	S_Uart_Send_String@Text+1,tblptrh
  3793   000D2C  6AF8               	clrf	tblptru,c
  3794   000D2E  0E07               	movlw	(high __ramtop+-1)
  3795   000D30  64F7               	cpfsgt	tblptrh,c
  3796   000D32  D003               	bra	u1767
  3797   000D34  0008               	tblrd		*
  3798   000D36  50F5               	movf	tablat,w,c
  3799   000D38  D005               	bra	u1760
  3800   000D3A                     u1767:
  3801   000D3A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3802   000D3E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3803   000D42  50E7               	movf	indf1,w,c
  3804   000D44                     u1760:
  3805   000D44  0900               	iorlw	0
  3806   000D46  B4D8               	btfsc	status,2,c
  3807   000D48  0012               	return	
  3808   000D4A  D7D8               	goto	l3049
  3809   000D4C                     __end_of_S_Uart_Send_String:
  3810                           	callstack 0
  3811                           
  3812 ;; *************** function _S_Uart_Send_Char *****************
  3813 ;; Defined at:
  3814 ;;		line 23 in file "uart_soft.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  Data            1    wreg     unsigned char 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  Data            1    2[COMRAM] unsigned char 
  3819 ;;  mask            1    3[COMRAM] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0
  3830 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3832 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3833 ;;Total ram usage:        2 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 1
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_S_Uart_Send_String
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text16
  3844   000D4C                     __ptext16:
  3845                           	callstack 0
  3846   000D4C                     _S_Uart_Send_Char:
  3847                           	callstack 28
  3848                           
  3849                           ;incstack = 0
  3850                           ;S_Uart_Send_Char@Data stored from wreg
  3851   000D4C  6E03               	movwf	S_Uart_Send_Char@Data^0,c
  3852                           
  3853                           ;uart_soft.c: 23: void S_Uart_Send_Char(char Data);uart_soft.c: 24: {;uart_soft.c: 25:  
      +                             unsigned char mask;;uart_soft.c: 26:     LATDbits.LD0 = 0;
  3854   000D4E  908C               	bcf	140,0,c	;volatile
  3855                           
  3856                           ;uart_soft.c: 27:     _delay((unsigned long)((((1000000/9600)))*(48000000/4000000.0)));
  3857   000D50  0EF9               	movlw	249
  3858   000D52                     u1997:
  3859   000D52  D000               	nop2	
  3860   000D54  2EE8               	decfsz	wreg,f,c
  3861   000D56  D7FD               	bra	u1997
  3862   000D58  D000               	nop2	
  3863   000D5A  F000               	nop	
  3864                           
  3865                           ;uart_soft.c: 28:     for(mask=0x01; mask!=0; mask=(unsigned char)(mask<<1))
  3866   000D5C  0E01               	movlw	1
  3867   000D5E  6E04               	movwf	S_Uart_Send_Char@mask^0,c
  3868   000D60                     l2919:
  3869                           
  3870                           ;uart_soft.c: 29:     {;uart_soft.c: 30:         if(Data&mask) LATDbits.LD0 = 1;
  3871   000D60  5003               	movf	S_Uart_Send_Char@Data^0,w,c
  3872   000D62  1404               	andwf	S_Uart_Send_Char@mask^0,w,c
  3873   000D64  0900               	iorlw	0
  3874   000D66  B4D8               	btfsc	status,2,c
  3875   000D68  D002               	goto	l267
  3876   000D6A  808C               	bsf	140,0,c	;volatile
  3877   000D6C  D001               	goto	l2923
  3878   000D6E                     l267:
  3879   000D6E  908C               	bcf	140,0,c	;volatile
  3880   000D70                     l2923:
  3881                           
  3882                           ;uart_soft.c: 32:         _delay((unsigned long)(((((1000000/9600)) - (4*16/48)))*(48000
      +                          000/4000000.0)));
  3883   000D70  0EF7               	movlw	247
  3884   000D72                     u2007:
  3885   000D72  D000               	nop2	
  3886   000D74  2EE8               	decfsz	wreg,f,c
  3887   000D76  D7FD               	bra	u2007
  3888   000D78  F000               	nop	
  3889                           
  3890                           ;uart_soft.c: 33:     }
  3891   000D7A  5004               	movf	S_Uart_Send_Char@mask^0,w,c
  3892   000D7C  2404               	addwf	S_Uart_Send_Char@mask^0,w,c
  3893   000D7E  6E04               	movwf	S_Uart_Send_Char@mask^0,c
  3894   000D80  5004               	movf	S_Uart_Send_Char@mask^0,w,c
  3895   000D82  A4D8               	btfss	status,2,c
  3896   000D84  D7ED               	goto	l2919
  3897                           
  3898                           ;uart_soft.c: 34:     LATDbits.LD0 = 1;
  3899   000D86  808C               	bsf	140,0,c	;volatile
  3900                           
  3901                           ;uart_soft.c: 35:     _delay((unsigned long)((((1000000/9600)))*(48000000/4000000.0)));
  3902   000D88  0EF9               	movlw	249
  3903   000D8A                     u2017:
  3904   000D8A  D000               	nop2	
  3905   000D8C  2EE8               	decfsz	wreg,f,c
  3906   000D8E  D7FD               	bra	u2017
  3907   000D90  D000               	nop2	
  3908   000D92  F000               	nop	
  3909   000D94  0012               	return		;funcret
  3910   000D96                     __end_of_S_Uart_Send_Char:
  3911                           	callstack 0
  3912                           
  3913 ;; *************** function _S_Uart_Read_String *****************
  3914 ;; Defined at:
  3915 ;;		line 60 in file "uart_soft.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  str             1    4[COMRAM] PTR unsigned char 
  3918 ;;		 -> buf_rx(6), 
  3919 ;;  size            1    5[COMRAM] unsigned char 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  cont_buf        1    7[COMRAM] unsigned char 
  3922 ;;  c               1    6[COMRAM] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3932 ;;      Params:         2       0       0       0       0       0       0       0       0
  3933 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3935 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3936 ;;Total ram usage:        4 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; Hardware stack levels required when called: 2
  3939 ;; This function calls:
  3940 ;;		_S_Uart_Read
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text17
  3947   000E9C                     __ptext17:
  3948                           	callstack 0
  3949   000E9C                     _S_Uart_Read_String:
  3950                           	callstack 28
  3951                           
  3952                           ;uart_soft.c: 60: void S_Uart_Read_String(char* str, unsigned char size);uart_soft.c: 61
      +                          : {;uart_soft.c: 62:     unsigned char cont_buf = 0;
  3953                           
  3954                           ;incstack = 0
  3955   000E9C  0E00               	movlw	0
  3956   000E9E  6E08               	movwf	S_Uart_Read_String@cont_buf^0,c
  3957   000EA0                     l3057:
  3958                           
  3959                           ;uart_soft.c: 65:     {;uart_soft.c: 66:         c = S_Uart_Read();
  3960   000EA0  ECF0  F006         	call	_S_Uart_Read	;wreg free
  3961   000EA4  6E07               	movwf	S_Uart_Read_String@c^0,c
  3962                           
  3963                           ;uart_soft.c: 67:         str[cont_buf++] = c;
  3964   000EA6  5005               	movf	S_Uart_Read_String@str^0,w,c
  3965   000EA8  2408               	addwf	S_Uart_Read_String@cont_buf^0,w,c
  3966   000EAA  6ED9               	movwf	fsr2l,c
  3967   000EAC  6ADA               	clrf	fsr2h,c
  3968   000EAE  C007  FFDF         	movff	S_Uart_Read_String@c,indf2
  3969   000EB2  2A08               	incf	S_Uart_Read_String@cont_buf^0,f,c
  3970                           
  3971                           ;uart_soft.c: 68:         if(cont_buf >= size) break;
  3972   000EB4  5006               	movf	S_Uart_Read_String@size^0,w,c
  3973   000EB6  5C08               	subwf	S_Uart_Read_String@cont_buf^0,w,c
  3974   000EB8  B0D8               	btfsc	status,0,c
  3975   000EBA  D004               	goto	u1790
  3976                           
  3977                           ;uart_soft.c: 69:     }while(c != '\n');
  3978   000EBC  0E0A               	movlw	10
  3979   000EBE  1807               	xorwf	S_Uart_Read_String@c^0,w,c
  3980   000EC0  A4D8               	btfss	status,2,c
  3981   000EC2  D7EE               	goto	l3057
  3982   000EC4                     u1790:
  3983                           
  3984                           ;uart_soft.c: 70:     str[cont_buf-2] = '\0';
  3985   000EC4  5005               	movf	S_Uart_Read_String@str^0,w,c
  3986   000EC6  2408               	addwf	S_Uart_Read_String@cont_buf^0,w,c
  3987   000EC8  6ED9               	movwf	fsr2l,c
  3988   000ECA  6ADA               	clrf	fsr2h,c
  3989   000ECC  0EFE               	movlw	254
  3990   000ECE  26D9               	addwf	fsr2l,f,c
  3991   000ED0  0E00               	movlw	0
  3992   000ED2  6EDF               	movwf	indf2,c
  3993   000ED4  0012               	return		;funcret
  3994   000ED6                     __end_of_S_Uart_Read_String:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _S_Uart_Read *****************
  3998 ;; Defined at:
  3999 ;;		line 45 in file "uart_soft.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;		None
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  mask            1    3[COMRAM] unsigned char 
  4004 ;;  Data            1    2[COMRAM] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      unsigned char 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4014 ;;      Params:         0       0       0       0       0       0       0       0       0
  4015 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4017 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4018 ;;Total ram usage:        2 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; Hardware stack levels required when called: 1
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_S_Uart_Read_String
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text18
  4029   000DE0                     __ptext18:
  4030                           	callstack 0
  4031   000DE0                     _S_Uart_Read:
  4032                           	callstack 28
  4033                           
  4034                           ;uart_soft.c: 47:     char mask;;uart_soft.c: 48:     char Data = 0;
  4035                           
  4036                           ;incstack = 0
  4037   000DE0  0E00               	movlw	0
  4038   000DE2  6E03               	movwf	S_Uart_Read@Data^0,c
  4039   000DE4                     l278:
  4040   000DE4  B283               	btfsc	131,1,c	;volatile
  4041   000DE6  D7FE               	goto	l278
  4042                           
  4043                           ;uart_soft.c: 50:     _delay((unsigned long)(((((1000000/9600))/2))*(48000000/4000000.0)
      +                          ));
  4044   000DE8  0ED0               	movlw	208
  4045   000DEA                     u2027:
  4046   000DEA  2EE8               	decfsz	wreg,f,c
  4047   000DEC  D7FE               	bra	u2027
  4048                           
  4049                           ;uart_soft.c: 51:     for(mask=0x01; mask!=0; mask=(unsigned char)(mask<<1))
  4050   000DEE  0E01               	movlw	1
  4051   000DF0  6E04               	movwf	S_Uart_Read@mask^0,c
  4052   000DF2                     l2941:
  4053                           
  4054                           ;uart_soft.c: 52:     {;uart_soft.c: 53:         _delay((unsigned long)(((((1000000/9600
      +                          )) - (4*18/48)))*(48000000/4000000.0)));
  4055   000DF2  0EF7               	movlw	247
  4056   000DF4                     u2037:
  4057   000DF4  D000               	nop2	
  4058   000DF6  2EE8               	decfsz	wreg,f,c
  4059   000DF8  D7FD               	bra	u2037
  4060   000DFA  F000               	nop	
  4061                           
  4062                           ;uart_soft.c: 54:         if(PORTDbits.RD1)Data = Data|mask;
  4063   000DFC  A283               	btfss	131,1,c	;volatile
  4064   000DFE  D003               	goto	l283
  4065   000E00  5003               	movf	S_Uart_Read@Data^0,w,c
  4066   000E02  1004               	iorwf	S_Uart_Read@mask^0,w,c
  4067   000E04  6E03               	movwf	S_Uart_Read@Data^0,c
  4068   000E06                     l283:
  4069                           
  4070                           ;uart_soft.c: 55:     }
  4071   000E06  5004               	movf	S_Uart_Read@mask^0,w,c
  4072   000E08  2404               	addwf	S_Uart_Read@mask^0,w,c
  4073   000E0A  6E04               	movwf	S_Uart_Read@mask^0,c
  4074   000E0C  5004               	movf	S_Uart_Read@mask^0,w,c
  4075   000E0E  A4D8               	btfss	status,2,c
  4076   000E10  D7F0               	goto	l2941
  4077                           
  4078                           ;uart_soft.c: 56:     _delay((unsigned long)((((1000000/9600)))*(48000000/4000000.0)));
  4079   000E12  0EF9               	movlw	249
  4080   000E14                     u2047:
  4081   000E14  D000               	nop2	
  4082   000E16  2EE8               	decfsz	wreg,f,c
  4083   000E18  D7FD               	bra	u2047
  4084   000E1A  D000               	nop2	
  4085   000E1C  F000               	nop	
  4086                           
  4087                           ;uart_soft.c: 57:     return Data;
  4088   000E1E  5003               	movf	S_Uart_Read@Data^0,w,c
  4089   000E20  0012               	return		;funcret
  4090   000E22                     __end_of_S_Uart_Read:
  4091                           	callstack 0
  4092                           
  4093 ;; *************** function _S_Uart_Init *****************
  4094 ;; Defined at:
  4095 ;;		line 13 in file "uart_soft.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4113 ;;Total ram usage:        0 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; Hardware stack levels required when called: 1
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_main
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text19
  4124   0010EC                     __ptext19:
  4125                           	callstack 0
  4126   0010EC                     _S_Uart_Init:
  4127                           	callstack 29
  4128                           
  4129                           ;uart_soft.c: 15:   LATDbits.LD0 = 1;
  4130                           
  4131                           ;incstack = 0
  4132   0010EC  808C               	bsf	140,0,c	;volatile
  4133                           
  4134                           ;uart_soft.c: 16:   PORTDbits.RD1 = 1;
  4135   0010EE  8283               	bsf	131,1,c	;volatile
  4136                           
  4137                           ;uart_soft.c: 17:   TRISDbits.RD0 = 0;
  4138   0010F0  9095               	bcf	149,0,c	;volatile
  4139                           
  4140                           ;uart_soft.c: 18:   TRISDbits.RD1 = 1;
  4141   0010F2  8295               	bsf	149,1,c	;volatile
  4142                           
  4143                           ;uart_soft.c: 19:   LATDbits.LD0 = 1;
  4144   0010F4  808C               	bsf	140,0,c	;volatile
  4145                           
  4146                           ;uart_soft.c: 20:   _delay((unsigned long)((((1000000/9600)))*(48000000/4000000.0)));
  4147   0010F6  0EF9               	movlw	249
  4148   0010F8                     u2057:
  4149   0010F8  D000               	nop2	
  4150   0010FA  2EE8               	decfsz	wreg,f,c
  4151   0010FC  D7FD               	bra	u2057
  4152   0010FE  D000               	nop2	
  4153   001100  F000               	nop	
  4154   001102  0012               	return		;funcret
  4155   001104                     __end_of_S_Uart_Init:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function _Fingerprint_StoreModel *****************
  4159 ;; Defined at:
  4160 ;;		line 119 in file "fingerprint.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  id              1    wreg     unsigned char 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  id              1    7[COMRAM] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      unsigned char 
  4167 ;; Registers used:
  4168 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 3F/0
  4171 ;;		On exit  : 3F/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4174 ;;      Params:         0       0       0       0       0       0       0       0       0
  4175 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4176 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4177 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4178 ;;Total ram usage:        2 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; Hardware stack levels required when called: 2
  4181 ;; This function calls:
  4182 ;;		_Fingerprint_Send_Buffer
  4183 ;; This function is called by:
  4184 ;;		_main
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text20
  4189   000BF8                     __ptext20:
  4190                           	callstack 0
  4191   000BF8                     _Fingerprint_StoreModel:
  4192                           	callstack 28
  4193                           
  4194                           ;incstack = 0
  4195                           ;Fingerprint_StoreModel@id stored from wreg
  4196   000BF8  6E08               	movwf	Fingerprint_StoreModel@id^0,c
  4197                           
  4198                           ;fingerprint.c: 119: uint8_t Fingerprint_StoreModel(uint8_t id);fingerprint.c: 120: {;fi
      +                          ngerprint.c: 121:     checksum = 0;
  4199   000BFA  0E00               	movlw	0
  4200   000BFC  6E58               	movwf	(_checksum+1)^0,c
  4201   000BFE  0E00               	movlw	0
  4202   000C00  6E57               	movwf	_checksum^0,c
  4203                           
  4204                           ;fingerprint.c: 122:     finger_store_model[12] = id;
  4205   000C02  C008  F0D5         	movff	Fingerprint_StoreModel@id,_finger_store_model+12
  4206                           
  4207                           ;fingerprint.c: 123:     checksum = (uint16_t)(14 + finger_store_model[12]);
  4208   000C06  0E0E               	movlw	14
  4209   000C08  0100               	movlb	0	; () banked
  4210   000C0A  25D5               	addwf	(_finger_store_model+12)& (0+255),w,b
  4211   000C0C  6E57               	movwf	_checksum^0,c
  4212   000C0E  6A58               	clrf	(_checksum+1)^0,c
  4213   000C10  0E00               	movlw	0
  4214   000C12  2258               	addwfc	(_checksum+1)^0,f,c
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;fingerprint.c: 124:     finger_store_model[13] = (uint8_t)(checksum >> 8);
  4218   000C14  C058  F0D6         	movff	_checksum+1,_finger_store_model+13
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;fingerprint.c: 125:     finger_store_model[14] = (uint8_t)(checksum & 0xFF);
  4222   000C18  C057  F0D7         	movff	_checksum,_finger_store_model+14
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;fingerprint.c: 126:     Fingerprint_Send_Buffer((uint8_t*)finger_store_model, 15);
  4226   000C1C  0EC9               	movlw	low _finger_store_model
  4227   000C1E  6E03               	movwf	Fingerprint_Send_Buffer@buf^0,c
  4228   000C20  6A04               	clrf	(Fingerprint_Send_Buffer@buf+1)^0,c
  4229   000C22  0E0F               	movlw	15
  4230   000C24  6E05               	movwf	Fingerprint_Send_Buffer@size^0,c
  4231   000C26  EC30  F007         	call	_Fingerprint_Send_Buffer	;wreg free
  4232                           
  4233                           ;fingerprint.c: 127:     cont_rx = 0;
  4234   000C2A  0E00               	movlw	0
  4235   000C2C  6E59               	movwf	_cont_rx^0,c
  4236   000C2E                     l3157:
  4237   000C2E  0E0B               	movlw	11
  4238   000C30  1859               	xorwf	_cont_rx^0,w,c
  4239   000C32  A4D8               	btfss	status,2,c
  4240   000C34  D7FC               	goto	l3157
  4241                           
  4242                           ;fingerprint.c: 129:     _delay((unsigned long)((300)*(48000000/4000000.0)));
  4243   000C36  0E05               	movlw	5
  4244   000C38  6E07               	movwf	??_Fingerprint_StoreModel^0,c
  4245   000C3A  0EAC               	movlw	172
  4246   000C3C                     u2067:
  4247   000C3C  2EE8               	decfsz	wreg,f,c
  4248   000C3E  D7FE               	bra	u2067
  4249   000C40  2E07               	decfsz	??_Fingerprint_StoreModel^0,f,c
  4250   000C42  D7FC               	bra	u2067
  4251   000C44                     l3161:
  4252   000C44  0100               	movlb	0	; () banked
  4253   000C46  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  4254   000C48  A4D8               	btfss	status,2,c
  4255   000C4A  D7FC               	goto	l3161
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;fingerprint.c: 131:     return request_fingerprint[9];
  4259   000C4C  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  4260                           
  4261                           ; BSR set to: 0
  4262   000C4E  0012               	return		;funcret
  4263   000C50                     __end_of_Fingerprint_StoreModel:
  4264                           	callstack 0
  4265                           
  4266 ;; *************** function _Fingerprint_Read_Parameters *****************
  4267 ;; Defined at:
  4268 ;;		line 59 in file "fingerprint.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;		None
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      void 
  4275 ;; Registers used:
  4276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 3F/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4282 ;;      Params:         0       0       0       0       0       0       0       0       0
  4283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4284 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4285 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4286 ;;Total ram usage:        1 bytes
  4287 ;; Hardware stack levels used: 1
  4288 ;; Hardware stack levels required when called: 2
  4289 ;; This function calls:
  4290 ;;		_Fingerprint_Send_Buffer
  4291 ;; This function is called by:
  4292 ;;		_main
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text21
  4297   000ED6                     __ptext21:
  4298                           	callstack 0
  4299   000ED6                     _Fingerprint_Read_Parameters:
  4300                           	callstack 28
  4301                           
  4302                           ;fingerprint.c: 61:     Fingerprint_Send_Buffer((uint8_t*)finger_read_data, 12);
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;incstack = 0
  4306   000ED6  0EA7               	movlw	low _finger_read_data
  4307   000ED8  6E03               	movwf	Fingerprint_Send_Buffer@buf^0,c
  4308   000EDA  0E7D               	movlw	high _finger_read_data
  4309   000EDC  6E04               	movwf	(Fingerprint_Send_Buffer@buf+1)^0,c
  4310   000EDE  0E0C               	movlw	12
  4311   000EE0  6E05               	movwf	Fingerprint_Send_Buffer@size^0,c
  4312   000EE2  EC30  F007         	call	_Fingerprint_Send_Buffer	;wreg free
  4313                           
  4314                           ;fingerprint.c: 62:     cont_rx = 0;
  4315   000EE6  0E00               	movlw	0
  4316   000EE8  6E59               	movwf	_cont_rx^0,c
  4317   000EEA                     l3039:
  4318   000EEA  0E1B               	movlw	27
  4319   000EEC  1859               	xorwf	_cont_rx^0,w,c
  4320   000EEE  A4D8               	btfss	status,2,c
  4321   000EF0  D7FC               	goto	l3039
  4322                           
  4323                           ;fingerprint.c: 64:     _delay((unsigned long)((300)*(48000000/4000000.0)));
  4324   000EF2  0E05               	movlw	5
  4325   000EF4  6E07               	movwf	??_Fingerprint_Read_Parameters^0,c
  4326   000EF6  0EAC               	movlw	172
  4327   000EF8                     u2077:
  4328   000EF8  2EE8               	decfsz	wreg,f,c
  4329   000EFA  D7FE               	bra	u2077
  4330   000EFC  2E07               	decfsz	??_Fingerprint_Read_Parameters^0,f,c
  4331   000EFE  D7FC               	bra	u2077
  4332                           
  4333                           ;fingerprint.c: 65:     finger_size_l = request_fingerprint[15];
  4334   000F00  C06F  F081         	movff	_request_fingerprint+15,_finger_size_l
  4335   000F04                     l3045:
  4336   000F04  0100               	movlb	0	; () banked
  4337   000F06  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  4338   000F08  B4D8               	btfsc	status,2,c
  4339   000F0A  0012               	return	
  4340   000F0C  D7FB               	goto	l3045
  4341   000F0E                     __end_of_Fingerprint_Read_Parameters:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _Fingerprint_Init *****************
  4345 ;; Defined at:
  4346 ;;		line 31 in file "fingerprint.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  baud            4   15[COMRAM] unsigned long 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  vx              2   23[COMRAM] unsigned int 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4360 ;;      Params:         4       0       0       0       0       0       0       0       0
  4361 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4362 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4363 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4364 ;;Total ram usage:       10 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 2
  4367 ;; This function calls:
  4368 ;;		___lldiv
  4369 ;; This function is called by:
  4370 ;;		_main
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text22
  4375   0008EE                     __ptext22:
  4376                           	callstack 0
  4377   0008EE                     _Fingerprint_Init:
  4378                           	callstack 28
  4379                           
  4380                           ;fingerprint.c: 31: void Fingerprint_Init(unsigned long baud);fingerprint.c: 32: {;finge
      +                          rprint.c: 33:     unsigned int vx;;fingerprint.c: 34:     TRISCbits.RC6 = 0;
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;incstack = 0
  4384   0008EE  9C94               	bcf	148,6,c	;volatile
  4385                           
  4386                           ;fingerprint.c: 35:     TRISCbits.RC7 = 1;
  4387   0008F0  8E94               	bsf	148,7,c	;volatile
  4388                           
  4389                           ;fingerprint.c: 36:     TXSTA = 0x24;
  4390   0008F2  0E24               	movlw	36
  4391   0008F4  6EAC               	movwf	172,c	;volatile
  4392                           
  4393                           ;fingerprint.c: 37:     RCSTA = 0x90;
  4394   0008F6  0E90               	movlw	144
  4395   0008F8  6EAB               	movwf	171,c	;volatile
  4396                           
  4397                           ;fingerprint.c: 38:     BAUDCON = 0x00;
  4398   0008FA  0E00               	movlw	0
  4399   0008FC  6EB8               	movwf	184,c	;volatile
  4400                           
  4401                           ;fingerprint.c: 39:     BAUDCONbits.BRG16 = 1;
  4402   0008FE  86B8               	bsf	184,3,c	;volatile
  4403                           
  4404                           ;fingerprint.c: 40:     vx = (unsigned int)(48000000/(baud*4))-1;
  4405   000900  0E00               	movlw	0
  4406   000902  6E03               	movwf	___lldiv@dividend^0,c
  4407   000904  0E6C               	movlw	108
  4408   000906  6E04               	movwf	(___lldiv@dividend+1)^0,c
  4409   000908  0EDC               	movlw	220
  4410   00090A  6E05               	movwf	(___lldiv@dividend+2)^0,c
  4411   00090C  0E02               	movlw	2
  4412   00090E  6E06               	movwf	(___lldiv@dividend+3)^0,c
  4413   000910  C010  F014         	movff	Fingerprint_Init@baud,??_Fingerprint_Init
  4414   000914  C011  F015         	movff	Fingerprint_Init@baud+1,??_Fingerprint_Init+1
  4415   000918  C012  F016         	movff	Fingerprint_Init@baud+2,??_Fingerprint_Init+2
  4416   00091C  C013  F017         	movff	Fingerprint_Init@baud+3,??_Fingerprint_Init+3
  4417   000920  0E02               	movlw	2
  4418   000922                     u1725:
  4419   000922  90D8               	bcf	status,0,c
  4420   000924  3614               	rlcf	??_Fingerprint_Init^0,f,c
  4421   000926  3615               	rlcf	(??_Fingerprint_Init+1)^0,f,c
  4422   000928  3616               	rlcf	(??_Fingerprint_Init+2)^0,f,c
  4423   00092A  3617               	rlcf	(??_Fingerprint_Init+3)^0,f,c
  4424   00092C  2EE8               	decfsz	wreg,f,c
  4425   00092E  D7F9               	goto	u1725
  4426   000930  C014  F007         	movff	??_Fingerprint_Init,___lldiv@divisor
  4427   000934  C015  F008         	movff	??_Fingerprint_Init+1,___lldiv@divisor+1
  4428   000938  C016  F009         	movff	??_Fingerprint_Init+2,___lldiv@divisor+2
  4429   00093C  C017  F00A         	movff	??_Fingerprint_Init+3,___lldiv@divisor+3
  4430   000940  ECBC  F004         	call	___lldiv	;wreg free
  4431   000944  0EFF               	movlw	255
  4432   000946  2403               	addwf	?___lldiv^0,w,c
  4433   000948  6E18               	movwf	Fingerprint_Init@vx^0,c
  4434   00094A  0EFF               	movlw	255
  4435   00094C  2004               	addwfc	(?___lldiv+1)^0,w,c
  4436   00094E  6E19               	movwf	(Fingerprint_Init@vx+1)^0,c
  4437                           
  4438                           ;fingerprint.c: 41:     SPBRG = vx & 0x00FF;
  4439   000950  C018  FFAF         	movff	Fingerprint_Init@vx,4015	;volatile
  4440                           
  4441                           ;fingerprint.c: 42:     SPBRGH = vx >> 8;
  4442   000954  C019  FFB0         	movff	Fingerprint_Init@vx+1,4016	;volatile
  4443                           
  4444                           ;fingerprint.c: 43:     PIE1bits.RCIE = 1;
  4445   000958  8A9D               	bsf	157,5,c	;volatile
  4446                           
  4447                           ;fingerprint.c: 44:     PIR1bits.RCIF = 0;
  4448   00095A  9A9E               	bcf	158,5,c	;volatile
  4449                           
  4450                           ;fingerprint.c: 45:     INTCONbits.PEIE = 1;
  4451   00095C  8CF2               	bsf	242,6,c	;volatile
  4452                           
  4453                           ;fingerprint.c: 46:     INTCONbits.GIE = 1;
  4454   00095E  8EF2               	bsf	242,7,c	;volatile
  4455                           
  4456                           ;fingerprint.c: 47:     _delay((unsigned long)((1000)*(48000000/4000.0)));
  4457   000960  0E3D               	movlw	61
  4458   000962  6E15               	movwf	(??_Fingerprint_Init+1)^0,c
  4459   000964  0EE1               	movlw	225
  4460   000966  6E14               	movwf	??_Fingerprint_Init^0,c
  4461   000968  0E40               	movlw	64
  4462   00096A                     u2087:
  4463   00096A  2EE8               	decfsz	wreg,f,c
  4464   00096C  D7FE               	bra	u2087
  4465   00096E  2E14               	decfsz	??_Fingerprint_Init^0,f,c
  4466   000970  D7FC               	bra	u2087
  4467   000972  2E15               	decfsz	(??_Fingerprint_Init+1)^0,f,c
  4468   000974  D7FA               	bra	u2087
  4469   000976  0012               	return		;funcret
  4470   000978                     __end_of_Fingerprint_Init:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function ___lldiv *****************
  4474 ;; Defined at:
  4475 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  dividend        4    2[COMRAM] unsigned long 
  4478 ;;  divisor         4    6[COMRAM] unsigned long 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  quotient        4   10[COMRAM] unsigned long 
  4481 ;;  counter         1   14[COMRAM] unsigned char 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  4    2[COMRAM] unsigned long 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4491 ;;      Params:         8       0       0       0       0       0       0       0       0
  4492 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4494 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4495 ;;Total ram usage:       13 bytes
  4496 ;; Hardware stack levels used: 1
  4497 ;; Hardware stack levels required when called: 1
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_Fingerprint_Init
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text23
  4506   000978                     __ptext23:
  4507                           	callstack 0
  4508   000978                     ___lldiv:
  4509                           	callstack 28
  4510                           
  4511                           ;incstack = 0
  4512   000978  0E00               	movlw	0
  4513   00097A  6E0B               	movwf	___lldiv@quotient^0,c
  4514   00097C  0E00               	movlw	0
  4515   00097E  6E0C               	movwf	(___lldiv@quotient+1)^0,c
  4516   000980  0E00               	movlw	0
  4517   000982  6E0D               	movwf	(___lldiv@quotient+2)^0,c
  4518   000984  0E00               	movlw	0
  4519   000986  6E0E               	movwf	(___lldiv@quotient+3)^0,c
  4520   000988  5007               	movf	___lldiv@divisor^0,w,c
  4521   00098A  1008               	iorwf	(___lldiv@divisor+1)^0,w,c
  4522   00098C  1009               	iorwf	(___lldiv@divisor+2)^0,w,c
  4523   00098E  100A               	iorwf	(___lldiv@divisor+3)^0,w,c
  4524   000990  B4D8               	btfsc	status,2,c
  4525   000992  D02A               	goto	l320
  4526   000994  0E01               	movlw	1
  4527   000996  6E0F               	movwf	___lldiv@counter^0,c
  4528   000998  D006               	goto	l2969
  4529   00099A                     l2967:
  4530   00099A  90D8               	bcf	status,0,c
  4531   00099C  3607               	rlcf	___lldiv@divisor^0,f,c
  4532   00099E  3608               	rlcf	(___lldiv@divisor+1)^0,f,c
  4533   0009A0  3609               	rlcf	(___lldiv@divisor+2)^0,f,c
  4534   0009A2  360A               	rlcf	(___lldiv@divisor+3)^0,f,c
  4535   0009A4  2A0F               	incf	___lldiv@counter^0,f,c
  4536   0009A6                     l2969:
  4537   0009A6  AE0A               	btfss	(___lldiv@divisor+3)^0,7,c
  4538   0009A8  D7F8               	goto	l2967
  4539   0009AA                     u1650:
  4540   0009AA  90D8               	bcf	status,0,c
  4541   0009AC  360B               	rlcf	___lldiv@quotient^0,f,c
  4542   0009AE  360C               	rlcf	(___lldiv@quotient+1)^0,f,c
  4543   0009B0  360D               	rlcf	(___lldiv@quotient+2)^0,f,c
  4544   0009B2  360E               	rlcf	(___lldiv@quotient+3)^0,f,c
  4545   0009B4  5007               	movf	___lldiv@divisor^0,w,c
  4546   0009B6  5C03               	subwf	___lldiv@dividend^0,w,c
  4547   0009B8  5008               	movf	(___lldiv@divisor+1)^0,w,c
  4548   0009BA  5804               	subwfb	(___lldiv@dividend+1)^0,w,c
  4549   0009BC  5009               	movf	(___lldiv@divisor+2)^0,w,c
  4550   0009BE  5805               	subwfb	(___lldiv@dividend+2)^0,w,c
  4551   0009C0  500A               	movf	(___lldiv@divisor+3)^0,w,c
  4552   0009C2  5806               	subwfb	(___lldiv@dividend+3)^0,w,c
  4553   0009C4  A0D8               	btfss	status,0,c
  4554   0009C6  D009               	goto	l2979
  4555   0009C8  5007               	movf	___lldiv@divisor^0,w,c
  4556   0009CA  5E03               	subwf	___lldiv@dividend^0,f,c
  4557   0009CC  5008               	movf	(___lldiv@divisor+1)^0,w,c
  4558   0009CE  5A04               	subwfb	(___lldiv@dividend+1)^0,f,c
  4559   0009D0  5009               	movf	(___lldiv@divisor+2)^0,w,c
  4560   0009D2  5A05               	subwfb	(___lldiv@dividend+2)^0,f,c
  4561   0009D4  500A               	movf	(___lldiv@divisor+3)^0,w,c
  4562   0009D6  5A06               	subwfb	(___lldiv@dividend+3)^0,f,c
  4563   0009D8  800B               	bsf	___lldiv@quotient^0,0,c
  4564   0009DA                     l2979:
  4565   0009DA  90D8               	bcf	status,0,c
  4566   0009DC  320A               	rrcf	(___lldiv@divisor+3)^0,f,c
  4567   0009DE  3209               	rrcf	(___lldiv@divisor+2)^0,f,c
  4568   0009E0  3208               	rrcf	(___lldiv@divisor+1)^0,f,c
  4569   0009E2  3207               	rrcf	___lldiv@divisor^0,f,c
  4570   0009E4  2E0F               	decfsz	___lldiv@counter^0,f,c
  4571   0009E6  D7E1               	goto	u1650
  4572   0009E8                     l320:
  4573   0009E8  C00B  F003         	movff	___lldiv@quotient,?___lldiv
  4574   0009EC  C00C  F004         	movff	___lldiv@quotient+1,?___lldiv+1
  4575   0009F0  C00D  F005         	movff	___lldiv@quotient+2,?___lldiv+2
  4576   0009F4  C00E  F006         	movff	___lldiv@quotient+3,?___lldiv+3
  4577   0009F8  0012               	return		;funcret
  4578   0009FA                     __end_of___lldiv:
  4579                           	callstack 0
  4580                           
  4581 ;; *************** function _Fingerprint_Get_ID *****************
  4582 ;; Defined at:
  4583 ;;		line 181 in file "fingerprint.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  page_id         2   13[COMRAM] unsigned short 
  4588 ;;  sc              2    0        unsigned short 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  2    9[COMRAM] unsigned short 
  4591 ;; Registers used:
  4592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 3F/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4598 ;;      Params:         2       0       0       0       0       0       0       0       0
  4599 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4600 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4601 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4602 ;;Total ram usage:        6 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 3
  4605 ;; This function calls:
  4606 ;;		_Fingerprint_GetImage
  4607 ;;		_Fingerprint_Image2Tz
  4608 ;;		_Fingerprint_Search
  4609 ;; This function is called by:
  4610 ;;		_main
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text24
  4615   000B9E                     __ptext24:
  4616                           	callstack 0
  4617   000B9E                     _Fingerprint_Get_ID:
  4618                           	callstack 27
  4619                           
  4620                           ;fingerprint.c: 183:     uint16_t page_id, sc;;fingerprint.c: 185:     Fingerprint_GetIm
      +                          age();
  4621                           
  4622                           ;incstack = 0
  4623   000B9E  ECD7  F007         	call	_Fingerprint_GetImage	;wreg free
  4624                           
  4625                           ;fingerprint.c: 186:     Fingerprint_Image2Tz(1);
  4626   000BA2  0E01               	movlw	1
  4627   000BA4  EC3D  F005         	call	_Fingerprint_Image2Tz
  4628                           
  4629                           ;fingerprint.c: 187:     Fingerprint_Search();
  4630   000BA8  ECCB  F006         	call	_Fingerprint_Search	;wreg free
  4631                           
  4632                           ;fingerprint.c: 189:     switch(request_fingerprint[9])
  4633   000BAC  D011               	goto	l3081
  4634   000BAE                     l3075:
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;fingerprint.c: 192:             page_id = (uint16_t)((request_fingerprint[10]<<8) | req
      +                          uest_fingerprint[11]);
  4638   000BAE  516B               	movf	(_request_fingerprint+11)& (0+255),w,b
  4639   000BB0  C06A  F00C         	movff	_request_fingerprint+10,??_Fingerprint_Get_ID
  4640   000BB4  6A0D               	clrf	(??_Fingerprint_Get_ID+1)^0,c
  4641   000BB6  C00C  F00D         	movff	??_Fingerprint_Get_ID,??_Fingerprint_Get_ID+1
  4642   000BBA  6A0C               	clrf	??_Fingerprint_Get_ID^0,c
  4643   000BBC  100C               	iorwf	??_Fingerprint_Get_ID^0,w,c
  4644   000BBE  6E0E               	movwf	Fingerprint_Get_ID@page_id^0,c
  4645   000BC0  500D               	movf	(??_Fingerprint_Get_ID+1)^0,w,c
  4646   000BC2  6E0F               	movwf	(Fingerprint_Get_ID@page_id+1)^0,c
  4647                           
  4648                           ;fingerprint.c: 194:             break;
  4649   000BC4  D014               	goto	l243
  4650   000BC6                     l3077:
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;fingerprint.c: 197:             page_id = 0;
  4654   000BC6  0E00               	movlw	0
  4655   000BC8  6E0F               	movwf	(Fingerprint_Get_ID@page_id+1)^0,c
  4656   000BCA  0E00               	movlw	0
  4657   000BCC  6E0E               	movwf	Fingerprint_Get_ID@page_id^0,c
  4658                           
  4659                           ;fingerprint.c: 198:             break;
  4660   000BCE  D00F               	goto	l243
  4661   000BD0                     l3081:
  4662   000BD0  0100               	movlb	0	; () banked
  4663   000BD2  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  4664   000BD4  6E0C               	movwf	??_Fingerprint_Get_ID^0,c
  4665   000BD6  6A0D               	clrf	(??_Fingerprint_Get_ID+1)^0,c
  4666                           
  4667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4668                           ; Switch size 1, requested type "simple"
  4669                           ; Number of cases is 1, Range of values is 0 to 0
  4670                           ; switch strategies available:
  4671                           ; Name         Instructions Cycles
  4672                           ; simple_byte            4     3 (average)
  4673                           ;	Chosen strategy is simple_byte
  4674   000BD8  500D               	movf	(??_Fingerprint_Get_ID+1)^0,w,c
  4675   000BDA  0A00               	xorlw	0	; case 0
  4676   000BDC  A4D8               	btfss	status,2,c
  4677   000BDE  D007               	goto	l243
  4678                           
  4679                           ; BSR set to: 0
  4680                           ; Switch size 1, requested type "simple"
  4681                           ; Number of cases is 2, Range of values is 0 to 9
  4682                           ; switch strategies available:
  4683                           ; Name         Instructions Cycles
  4684                           ; simple_byte            7     4 (average)
  4685                           ;	Chosen strategy is simple_byte
  4686   000BE0  500C               	movf	??_Fingerprint_Get_ID^0,w,c
  4687   000BE2  0A00               	xorlw	0	; case 0
  4688   000BE4  B4D8               	btfsc	status,2,c
  4689   000BE6  D7E3               	goto	l3075
  4690   000BE8  0A09               	xorlw	9	; case 9
  4691   000BEA  B4D8               	btfsc	status,2,c
  4692   000BEC  D7EC               	goto	l3077
  4693   000BEE                     l243:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;fingerprint.c: 200:     return page_id;
  4697   000BEE  C00E  F00A         	movff	Fingerprint_Get_ID@page_id,?_Fingerprint_Get_ID
  4698   000BF2  C00F  F00B         	movff	Fingerprint_Get_ID@page_id+1,?_Fingerprint_Get_ID+1
  4699                           
  4700                           ; BSR set to: 0
  4701   000BF6  0012               	return		;funcret
  4702   000BF8                     __end_of_Fingerprint_Get_ID:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _Fingerprint_Search *****************
  4706 ;; Defined at:
  4707 ;;		line 97 in file "fingerprint.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 3F/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4723 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4724 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4725 ;;Total ram usage:        1 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 2
  4728 ;; This function calls:
  4729 ;;		_Fingerprint_Send_Buffer
  4730 ;; This function is called by:
  4731 ;;		_Fingerprint_Get_ID
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text25
  4736   000D96                     __ptext25:
  4737                           	callstack 0
  4738   000D96                     _Fingerprint_Search:
  4739                           	callstack 27
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;fingerprint.c: 99:     checksum = 0;
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;incstack = 0
  4746   000D96  0E00               	movlw	0
  4747   000D98  6E58               	movwf	(_checksum+1)^0,c
  4748   000D9A  0E00               	movlw	0
  4749   000D9C  6E57               	movwf	_checksum^0,c
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;fingerprint.c: 100:     finger_sh[14] = finger_size_l;
  4753   000D9E  C081  F0B6         	movff	_finger_size_l,_finger_sh+14
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;fingerprint.c: 101:     checksum = (uint16_t)(14 + finger_sh[14]);
  4757   000DA2  0E0E               	movlw	14
  4758   000DA4  25B6               	addwf	(_finger_sh+14)& (0+255),w,b
  4759   000DA6  6E57               	movwf	_checksum^0,c
  4760   000DA8  6A58               	clrf	(_checksum+1)^0,c
  4761   000DAA  0E00               	movlw	0
  4762   000DAC  2258               	addwfc	(_checksum+1)^0,f,c
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;fingerprint.c: 102:     finger_sh[15] = (uint8_t)(checksum >> 8);
  4766   000DAE  C058  F0B7         	movff	_checksum+1,_finger_sh+15
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;fingerprint.c: 103:     finger_sh[16] = (uint8_t)(checksum & 0xFF);
  4770   000DB2  C057  F0B8         	movff	_checksum,_finger_sh+16
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;fingerprint.c: 104:     Fingerprint_Send_Buffer((uint8_t*)finger_sh, 17);
  4774   000DB6  0EA8               	movlw	low _finger_sh
  4775   000DB8  6E03               	movwf	Fingerprint_Send_Buffer@buf^0,c
  4776   000DBA  6A04               	clrf	(Fingerprint_Send_Buffer@buf+1)^0,c
  4777   000DBC  0E11               	movlw	17
  4778   000DBE  6E05               	movwf	Fingerprint_Send_Buffer@size^0,c
  4779   000DC0  EC30  F007         	call	_Fingerprint_Send_Buffer	;wreg free
  4780                           
  4781                           ;fingerprint.c: 105:     cont_rx = 0;
  4782   000DC4  0E00               	movlw	0
  4783   000DC6  6E59               	movwf	_cont_rx^0,c
  4784   000DC8                     l2905:
  4785   000DC8  0E0F               	movlw	15
  4786   000DCA  1859               	xorwf	_cont_rx^0,w,c
  4787   000DCC  A4D8               	btfss	status,2,c
  4788   000DCE  D7FC               	goto	l2905
  4789                           
  4790                           ;fingerprint.c: 107:     _delay((unsigned long)((300)*(48000000/4000000.0)));
  4791   000DD0  0E05               	movlw	5
  4792   000DD2  6E07               	movwf	??_Fingerprint_Search^0,c
  4793   000DD4  0EAC               	movlw	172
  4794   000DD6                     u2097:
  4795   000DD6  2EE8               	decfsz	wreg,f,c
  4796   000DD8  D7FE               	bra	u2097
  4797   000DDA  2E07               	decfsz	??_Fingerprint_Search^0,f,c
  4798   000DDC  D7FC               	bra	u2097
  4799   000DDE  0012               	return		;funcret
  4800   000DE0                     __end_of_Fingerprint_Search:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function _Fingerprint_Image2Tz *****************
  4804 ;; Defined at:
  4805 ;;		line 79 in file "fingerprint.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  n               1    wreg     unsigned char 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  n               1    8[COMRAM] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 3F/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4819 ;;      Params:         0       0       0       0       0       0       0       0       0
  4820 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4821 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4822 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4823 ;;Total ram usage:        3 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; Hardware stack levels required when called: 2
  4826 ;; This function calls:
  4827 ;;		_Fingerprint_Send_Buffer
  4828 ;; This function is called by:
  4829 ;;		_main
  4830 ;;		_Fingerprint_Get_ID
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text26
  4835   000A7A                     __ptext26:
  4836                           	callstack 0
  4837   000A7A                     _Fingerprint_Image2Tz:
  4838                           	callstack 28
  4839                           
  4840                           ;incstack = 0
  4841                           ;Fingerprint_Image2Tz@n stored from wreg
  4842   000A7A  6E09               	movwf	Fingerprint_Image2Tz@n^0,c
  4843                           
  4844                           ;fingerprint.c: 79: void Fingerprint_Image2Tz(uint8_t n);fingerprint.c: 80: {;fingerprin
      +                          t.c: 81:     switch(n)
  4845   000A7C  D012               	goto	l2877
  4846   000A7E                     l2871:
  4847                           
  4848                           ;fingerprint.c: 84:             Fingerprint_Send_Buffer((uint8_t*)finger_img2tz_1, 13);
  4849   000A7E  0E6A               	movlw	low _finger_img2tz_1
  4850   000A80  6E03               	movwf	Fingerprint_Send_Buffer@buf^0,c
  4851   000A82  0E7D               	movlw	high _finger_img2tz_1
  4852   000A84  6E04               	movwf	(Fingerprint_Send_Buffer@buf+1)^0,c
  4853   000A86  0E0D               	movlw	13
  4854   000A88  6E05               	movwf	Fingerprint_Send_Buffer@size^0,c
  4855   000A8A  EC30  F007         	call	_Fingerprint_Send_Buffer	;wreg free
  4856                           
  4857                           ;fingerprint.c: 85:             break;
  4858   000A8E  D017               	goto	l2879
  4859   000A90                     l2873:
  4860                           
  4861                           ;fingerprint.c: 88:             Fingerprint_Send_Buffer((uint8_t*)finger_img2tz_2, 13);
  4862   000A90  0E5D               	movlw	low _finger_img2tz_2
  4863   000A92  6E03               	movwf	Fingerprint_Send_Buffer@buf^0,c
  4864   000A94  0E7D               	movlw	high _finger_img2tz_2
  4865   000A96  6E04               	movwf	(Fingerprint_Send_Buffer@buf+1)^0,c
  4866   000A98  0E0D               	movlw	13
  4867   000A9A  6E05               	movwf	Fingerprint_Send_Buffer@size^0,c
  4868   000A9C  EC30  F007         	call	_Fingerprint_Send_Buffer	;wreg free
  4869                           
  4870                           ;fingerprint.c: 89:             break;
  4871   000AA0  D00E               	goto	l2879
  4872   000AA2                     l2877:
  4873   000AA2  5009               	movf	Fingerprint_Image2Tz@n^0,w,c
  4874   000AA4  6E07               	movwf	??_Fingerprint_Image2Tz^0,c
  4875   000AA6  6A08               	clrf	(??_Fingerprint_Image2Tz+1)^0,c
  4876                           
  4877                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4878                           ; Switch size 1, requested type "simple"
  4879                           ; Number of cases is 1, Range of values is 0 to 0
  4880                           ; switch strategies available:
  4881                           ; Name         Instructions Cycles
  4882                           ; simple_byte            4     3 (average)
  4883                           ;	Chosen strategy is simple_byte
  4884   000AA8  5008               	movf	(??_Fingerprint_Image2Tz+1)^0,w,c
  4885   000AAA  0A00               	xorlw	0	; case 0
  4886   000AAC  A4D8               	btfss	status,2,c
  4887   000AAE  D007               	goto	l2879
  4888                           
  4889                           ; Switch size 1, requested type "simple"
  4890                           ; Number of cases is 2, Range of values is 1 to 2
  4891                           ; switch strategies available:
  4892                           ; Name         Instructions Cycles
  4893                           ; simple_byte            7     4 (average)
  4894                           ;	Chosen strategy is simple_byte
  4895   000AB0  5007               	movf	??_Fingerprint_Image2Tz^0,w,c
  4896   000AB2  0A01               	xorlw	1	; case 1
  4897   000AB4  B4D8               	btfsc	status,2,c
  4898   000AB6  D7E3               	goto	l2871
  4899   000AB8  0A03               	xorlw	3	; case 2
  4900   000ABA  B4D8               	btfsc	status,2,c
  4901   000ABC  D7E9               	goto	l2873
  4902   000ABE                     l2879:
  4903                           
  4904                           ;fingerprint.c: 91:     cont_rx = 0;
  4905   000ABE  0E00               	movlw	0
  4906   000AC0  6E59               	movwf	_cont_rx^0,c
  4907   000AC2                     l2881:
  4908   000AC2  0E0B               	movlw	11
  4909   000AC4  1859               	xorwf	_cont_rx^0,w,c
  4910   000AC6  A4D8               	btfss	status,2,c
  4911   000AC8  D7FC               	goto	l2881
  4912                           
  4913                           ;fingerprint.c: 93:     _delay((unsigned long)((300)*(48000000/4000000.0)));
  4914   000ACA  0E05               	movlw	5
  4915   000ACC  6E07               	movwf	??_Fingerprint_Image2Tz^0,c
  4916   000ACE  0EAC               	movlw	172
  4917   000AD0                     u2107:
  4918   000AD0  2EE8               	decfsz	wreg,f,c
  4919   000AD2  D7FE               	bra	u2107
  4920   000AD4  2E07               	decfsz	??_Fingerprint_Image2Tz^0,f,c
  4921   000AD6  D7FC               	bra	u2107
  4922   000AD8                     l2885:
  4923   000AD8  0100               	movlb	0	; () banked
  4924   000ADA  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  4925   000ADC  B4D8               	btfsc	status,2,c
  4926   000ADE  0012               	return	
  4927   000AE0  D7FB               	goto	l2885
  4928   000AE2                     __end_of_Fingerprint_Image2Tz:
  4929                           	callstack 0
  4930                           
  4931 ;; *************** function _Fingerprint_GetImage *****************
  4932 ;; Defined at:
  4933 ;;		line 69 in file "fingerprint.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 3F/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4949 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4950 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4951 ;;Total ram usage:        1 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; Hardware stack levels required when called: 2
  4954 ;; This function calls:
  4955 ;;		_Fingerprint_Send_Buffer
  4956 ;; This function is called by:
  4957 ;;		_main
  4958 ;;		_Fingerprint_Get_ID
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text27
  4963   000FAE                     __ptext27:
  4964                           	callstack 0
  4965   000FAE                     _Fingerprint_GetImage:
  4966                           	callstack 27
  4967                           
  4968                           ;fingerprint.c: 72:         Fingerprint_Send_Buffer((uint8_t*)finger_detect, 12);
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;incstack = 0
  4972                           ;fingerprint.c: 71:     do{
  4973   000FAE  0E9B               	movlw	low _finger_detect
  4974   000FB0  6E03               	movwf	Fingerprint_Send_Buffer@buf^0,c
  4975   000FB2  0E7D               	movlw	high _finger_detect
  4976   000FB4  6E04               	movwf	(Fingerprint_Send_Buffer@buf+1)^0,c
  4977   000FB6  0E0C               	movlw	12
  4978   000FB8  6E05               	movwf	Fingerprint_Send_Buffer@size^0,c
  4979   000FBA  EC30  F007         	call	_Fingerprint_Send_Buffer	;wreg free
  4980                           
  4981                           ;fingerprint.c: 73:         cont_rx = 0;
  4982   000FBE  0E00               	movlw	0
  4983   000FC0  6E59               	movwf	_cont_rx^0,c
  4984   000FC2                     l2863:
  4985   000FC2  0E0B               	movlw	11
  4986   000FC4  1859               	xorwf	_cont_rx^0,w,c
  4987   000FC6  A4D8               	btfss	status,2,c
  4988   000FC8  D7FC               	goto	l2863
  4989                           
  4990                           ;fingerprint.c: 75:         _delay((unsigned long)((300)*(48000000/4000000.0)));
  4991   000FCA  0E05               	movlw	5
  4992   000FCC  6E07               	movwf	??_Fingerprint_GetImage^0,c
  4993   000FCE  0EAC               	movlw	172
  4994   000FD0                     u2117:
  4995   000FD0  2EE8               	decfsz	wreg,f,c
  4996   000FD2  D7FE               	bra	u2117
  4997   000FD4  2E07               	decfsz	??_Fingerprint_GetImage^0,f,c
  4998   000FD6  D7FC               	bra	u2117
  4999                           
  5000                           ;fingerprint.c: 76:     }while(request_fingerprint[9] != 0x00);
  5001   000FD8  0100               	movlb	0	; () banked
  5002   000FDA  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  5003   000FDC  B4D8               	btfsc	status,2,c
  5004   000FDE  0012               	return	
  5005   000FE0  D7E6               	goto	__ptext27
  5006   000FE2                     __end_of_Fingerprint_GetImage:
  5007                           	callstack 0
  5008                           
  5009 ;; *************** function _Fingerprint_GetTemplateCount *****************
  5010 ;; Defined at:
  5011 ;;		line 149 in file "fingerprint.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;		None
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  usr             1    8[COMRAM] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      unsigned char 
  5018 ;; Registers used:
  5019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 3F/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5025 ;;      Params:         0       0       0       0       0       0       0       0       0
  5026 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5027 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5028 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5029 ;;Total ram usage:        3 bytes
  5030 ;; Hardware stack levels used: 1
  5031 ;; Hardware stack levels required when called: 2
  5032 ;; This function calls:
  5033 ;;		_Fingerprint_Send_Buffer
  5034 ;; This function is called by:
  5035 ;;		_main
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text28
  5040   000AE2                     __ptext28:
  5041                           	callstack 0
  5042   000AE2                     _Fingerprint_GetTemplateCount:
  5043                           	callstack 28
  5044                           
  5045                           ;fingerprint.c: 151:     uint8_t usr = 0;
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;incstack = 0
  5049   000AE2  0E00               	movlw	0
  5050   000AE4  6E09               	movwf	Fingerprint_GetTemplateCount@usr^0,c
  5051                           
  5052                           ;fingerprint.c: 152:     Fingerprint_Send_Buffer((uint8_t*)finger_template, 12);
  5053   000AE6  0E83               	movlw	low _finger_template
  5054   000AE8  6E03               	movwf	Fingerprint_Send_Buffer@buf^0,c
  5055   000AEA  0E7D               	movlw	high _finger_template
  5056   000AEC  6E04               	movwf	(Fingerprint_Send_Buffer@buf+1)^0,c
  5057   000AEE  0E0C               	movlw	12
  5058   000AF0  6E05               	movwf	Fingerprint_Send_Buffer@size^0,c
  5059   000AF2  EC30  F007         	call	_Fingerprint_Send_Buffer	;wreg free
  5060                           
  5061                           ;fingerprint.c: 153:     cont_rx = 0;
  5062   000AF6  0E00               	movlw	0
  5063   000AF8  6E59               	movwf	_cont_rx^0,c
  5064   000AFA                     l3211:
  5065   000AFA  0E0D               	movlw	13
  5066   000AFC  1859               	xorwf	_cont_rx^0,w,c
  5067   000AFE  A4D8               	btfss	status,2,c
  5068   000B00  D7FC               	goto	l3211
  5069                           
  5070                           ;fingerprint.c: 155:     _delay((unsigned long)((300)*(48000000/4000000.0)));
  5071   000B02  0E05               	movlw	5
  5072   000B04  6E07               	movwf	??_Fingerprint_GetTemplateCount^0,c
  5073   000B06  0EAC               	movlw	172
  5074   000B08                     u2127:
  5075   000B08  2EE8               	decfsz	wreg,f,c
  5076   000B0A  D7FE               	bra	u2127
  5077   000B0C  2E07               	decfsz	??_Fingerprint_GetTemplateCount^0,f,c
  5078   000B0E  D7FC               	bra	u2127
  5079   000B10                     l3215:
  5080   000B10  0100               	movlb	0	; () banked
  5081   000B12  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  5082   000B14  B4D8               	btfsc	status,2,c
  5083   000B16  D006               	goto	l3225
  5084   000B18  D7FB               	goto	l3215
  5085   000B1A                     l226:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;fingerprint.c: 161:             usr = request_fingerprint[11];
  5089   000B1A  C06B  F009         	movff	_request_fingerprint+11,Fingerprint_GetTemplateCount@usr
  5090                           
  5091                           ;fingerprint.c: 162:             break;
  5092   000B1E  D010               	goto	l3227
  5093   000B20                     l3217:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;fingerprint.c: 165:             return 0;
  5097   000B20  0E00               	movlw	0
  5098   000B22  0012               	return	
  5099   000B24                     l3225:
  5100                           
  5101                           ; BSR set to: 0
  5102   000B24  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  5103   000B26  6E07               	movwf	??_Fingerprint_GetTemplateCount^0,c
  5104   000B28  6A08               	clrf	(??_Fingerprint_GetTemplateCount+1)^0,c
  5105                           
  5106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5107                           ; Switch size 1, requested type "simple"
  5108                           ; Number of cases is 1, Range of values is 0 to 0
  5109                           ; switch strategies available:
  5110                           ; Name         Instructions Cycles
  5111                           ; simple_byte            4     3 (average)
  5112                           ;	Chosen strategy is simple_byte
  5113   000B2A  5008               	movf	(??_Fingerprint_GetTemplateCount+1)^0,w,c
  5114   000B2C  0A00               	xorlw	0	; case 0
  5115   000B2E  A4D8               	btfss	status,2,c
  5116   000B30  D007               	goto	l3227
  5117                           
  5118                           ; BSR set to: 0
  5119                           ; Switch size 1, requested type "simple"
  5120                           ; Number of cases is 2, Range of values is 0 to 1
  5121                           ; switch strategies available:
  5122                           ; Name         Instructions Cycles
  5123                           ; simple_byte            7     4 (average)
  5124                           ;	Chosen strategy is simple_byte
  5125   000B32  5007               	movf	??_Fingerprint_GetTemplateCount^0,w,c
  5126   000B34  0A00               	xorlw	0	; case 0
  5127   000B36  B4D8               	btfsc	status,2,c
  5128   000B38  D7F0               	goto	l226
  5129   000B3A  0A01               	xorlw	1	; case 1
  5130   000B3C  B4D8               	btfsc	status,2,c
  5131   000B3E  D7F0               	goto	l3217
  5132   000B40                     l3227:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;fingerprint.c: 168:     return usr;
  5136   000B40  5009               	movf	Fingerprint_GetTemplateCount@usr^0,w,c
  5137                           
  5138                           ; BSR set to: 0
  5139   000B42  0012               	return		;funcret
  5140   000B44                     __end_of_Fingerprint_GetTemplateCount:
  5141                           	callstack 0
  5142                           
  5143 ;; *************** function _Fingerprint_GetModel *****************
  5144 ;; Defined at:
  5145 ;;		line 110 in file "fingerprint.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 3F/0
  5156 ;;		On exit  : 3F/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0
  5160 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5161 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5162 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5163 ;;Total ram usage:        1 bytes
  5164 ;; Hardware stack levels used: 1
  5165 ;; Hardware stack levels required when called: 2
  5166 ;; This function calls:
  5167 ;;		_Fingerprint_Send_Buffer
  5168 ;; This function is called by:
  5169 ;;		_main
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text29
  5174   000FE2                     __ptext29:
  5175                           	callstack 0
  5176   000FE2                     _Fingerprint_GetModel:
  5177                           	callstack 28
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;fingerprint.c: 112:     Fingerprint_Send_Buffer((uint8_t*)finger_get_model, 12);
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;incstack = 0
  5184   000FE2  0E8F               	movlw	low _finger_get_model
  5185   000FE4  6E03               	movwf	Fingerprint_Send_Buffer@buf^0,c
  5186   000FE6  0E7D               	movlw	high _finger_get_model
  5187   000FE8  6E04               	movwf	(Fingerprint_Send_Buffer@buf+1)^0,c
  5188   000FEA  0E0C               	movlw	12
  5189   000FEC  6E05               	movwf	Fingerprint_Send_Buffer@size^0,c
  5190   000FEE  EC30  F007         	call	_Fingerprint_Send_Buffer	;wreg free
  5191                           
  5192                           ;fingerprint.c: 113:     cont_rx = 0;
  5193   000FF2  0E00               	movlw	0
  5194   000FF4  6E59               	movwf	_cont_rx^0,c
  5195   000FF6                     l3137:
  5196   000FF6  0E0B               	movlw	11
  5197   000FF8  1859               	xorwf	_cont_rx^0,w,c
  5198   000FFA  A4D8               	btfss	status,2,c
  5199   000FFC  D7FC               	goto	l3137
  5200                           
  5201                           ;fingerprint.c: 115:     _delay((unsigned long)((300)*(48000000/4000000.0)));
  5202   000FFE  0E05               	movlw	5
  5203   001000  6E07               	movwf	??_Fingerprint_GetModel^0,c
  5204   001002  0EAC               	movlw	172
  5205   001004                     u2137:
  5206   001004  2EE8               	decfsz	wreg,f,c
  5207   001006  D7FE               	bra	u2137
  5208   001008  2E07               	decfsz	??_Fingerprint_GetModel^0,f,c
  5209   00100A  D7FC               	bra	u2137
  5210   00100C                     l3141:
  5211   00100C  0100               	movlb	0	; () banked
  5212   00100E  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  5213   001010  B4D8               	btfsc	status,2,c
  5214   001012  0012               	return	
  5215   001014  D7FB               	goto	l3141
  5216   001016                     __end_of_Fingerprint_GetModel:
  5217                           	callstack 0
  5218                           
  5219 ;; *************** function _Fingerprint_EmptyDatabase *****************
  5220 ;; Defined at:
  5221 ;;		line 171 in file "fingerprint.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;		None
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;		None
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      unsigned char 
  5228 ;; Registers used:
  5229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 3F/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5235 ;;      Params:         0       0       0       0       0       0       0       0       0
  5236 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5237 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5238 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5239 ;;Total ram usage:        1 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; Hardware stack levels required when called: 2
  5242 ;; This function calls:
  5243 ;;		_Fingerprint_Send_Buffer
  5244 ;; This function is called by:
  5245 ;;		_main
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text30
  5250   000F44                     __ptext30:
  5251                           	callstack 0
  5252   000F44                     _Fingerprint_EmptyDatabase:
  5253                           	callstack 28
  5254                           
  5255                           ;fingerprint.c: 173:     Fingerprint_Send_Buffer((uint8_t*)finger_delete_all, 12);
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;incstack = 0
  5259   000F44  0E77               	movlw	low _finger_delete_all
  5260   000F46  6E03               	movwf	Fingerprint_Send_Buffer@buf^0,c
  5261   000F48  0E7D               	movlw	high _finger_delete_all
  5262   000F4A  6E04               	movwf	(Fingerprint_Send_Buffer@buf+1)^0,c
  5263   000F4C  0E0C               	movlw	12
  5264   000F4E  6E05               	movwf	Fingerprint_Send_Buffer@size^0,c
  5265   000F50  EC30  F007         	call	_Fingerprint_Send_Buffer	;wreg free
  5266                           
  5267                           ;fingerprint.c: 174:     cont_rx = 0;
  5268   000F54  0E00               	movlw	0
  5269   000F56  6E59               	movwf	_cont_rx^0,c
  5270   000F58                     l3195:
  5271   000F58  0E0B               	movlw	11
  5272   000F5A  1859               	xorwf	_cont_rx^0,w,c
  5273   000F5C  A4D8               	btfss	status,2,c
  5274   000F5E  D7FC               	goto	l3195
  5275                           
  5276                           ;fingerprint.c: 176:     _delay((unsigned long)((300)*(48000000/4000000.0)));
  5277   000F60  0E05               	movlw	5
  5278   000F62  6E07               	movwf	??_Fingerprint_EmptyDatabase^0,c
  5279   000F64  0EAC               	movlw	172
  5280   000F66                     u2147:
  5281   000F66  2EE8               	decfsz	wreg,f,c
  5282   000F68  D7FE               	bra	u2147
  5283   000F6A  2E07               	decfsz	??_Fingerprint_EmptyDatabase^0,f,c
  5284   000F6C  D7FC               	bra	u2147
  5285   000F6E                     l3199:
  5286   000F6E  0100               	movlb	0	; () banked
  5287   000F70  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  5288   000F72  A4D8               	btfss	status,2,c
  5289   000F74  D7FC               	goto	l3199
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;fingerprint.c: 178:     return request_fingerprint[9];
  5293   000F76  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  5294                           
  5295                           ; BSR set to: 0
  5296   000F78  0012               	return		;funcret
  5297   000F7A                     __end_of_Fingerprint_EmptyDatabase:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _Fingerprint_DeleteModel *****************
  5301 ;; Defined at:
  5302 ;;		line 134 in file "fingerprint.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  id              1    wreg     unsigned char 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  id              1    7[COMRAM] unsigned char 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      unsigned char 
  5309 ;; Registers used:
  5310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 3F/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5316 ;;      Params:         0       0       0       0       0       0       0       0       0
  5317 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5318 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5319 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5320 ;;Total ram usage:        2 bytes
  5321 ;; Hardware stack levels used: 1
  5322 ;; Hardware stack levels required when called: 2
  5323 ;; This function calls:
  5324 ;;		_Fingerprint_Send_Buffer
  5325 ;; This function is called by:
  5326 ;;		_main
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text31
  5331   000C50                     __ptext31:
  5332                           	callstack 0
  5333   000C50                     _Fingerprint_DeleteModel:
  5334                           	callstack 28
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;incstack = 0
  5338                           ;Fingerprint_DeleteModel@id stored from wreg
  5339   000C50  6E08               	movwf	Fingerprint_DeleteModel@id^0,c
  5340                           
  5341                           ;fingerprint.c: 134: uint8_t Fingerprint_DeleteModel(uint8_t id);fingerprint.c: 135: {;f
      +                          ingerprint.c: 136:     checksum = 0;
  5342   000C52  0E00               	movlw	0
  5343   000C54  6E58               	movwf	(_checksum+1)^0,c
  5344   000C56  0E00               	movlw	0
  5345   000C58  6E57               	movwf	_checksum^0,c
  5346                           
  5347                           ;fingerprint.c: 137:     finger_delete[11] = id;
  5348   000C5A  C008  F0C4         	movff	Fingerprint_DeleteModel@id,_finger_delete+11
  5349                           
  5350                           ;fingerprint.c: 138:     checksum = (uint16_t)(21 + finger_delete[11]);
  5351   000C5E  0E15               	movlw	21
  5352   000C60  0100               	movlb	0	; () banked
  5353   000C62  25C4               	addwf	(_finger_delete+11)& (0+255),w,b
  5354   000C64  6E57               	movwf	_checksum^0,c
  5355   000C66  6A58               	clrf	(_checksum+1)^0,c
  5356   000C68  0E00               	movlw	0
  5357   000C6A  2258               	addwfc	(_checksum+1)^0,f,c
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;fingerprint.c: 139:     finger_delete[14] = (uint8_t)(checksum >> 8);
  5361   000C6C  C058  F0C7         	movff	_checksum+1,_finger_delete+14
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;fingerprint.c: 140:     finger_delete[15] = (uint8_t)(checksum & 0xFF);
  5365   000C70  C057  F0C8         	movff	_checksum,_finger_delete+15
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;fingerprint.c: 141:     Fingerprint_Send_Buffer((uint8_t*)finger_delete, 16);
  5369   000C74  0EB9               	movlw	low _finger_delete
  5370   000C76  6E03               	movwf	Fingerprint_Send_Buffer@buf^0,c
  5371   000C78  6A04               	clrf	(Fingerprint_Send_Buffer@buf+1)^0,c
  5372   000C7A  0E10               	movlw	16
  5373   000C7C  6E05               	movwf	Fingerprint_Send_Buffer@size^0,c
  5374   000C7E  EC30  F007         	call	_Fingerprint_Send_Buffer	;wreg free
  5375                           
  5376                           ;fingerprint.c: 142:     cont_rx = 0;
  5377   000C82  0E00               	movlw	0
  5378   000C84  6E59               	movwf	_cont_rx^0,c
  5379   000C86                     l3181:
  5380   000C86  0E0B               	movlw	11
  5381   000C88  1859               	xorwf	_cont_rx^0,w,c
  5382   000C8A  A4D8               	btfss	status,2,c
  5383   000C8C  D7FC               	goto	l3181
  5384                           
  5385                           ;fingerprint.c: 144:     _delay((unsigned long)((300)*(48000000/4000000.0)));
  5386   000C8E  0E05               	movlw	5
  5387   000C90  6E07               	movwf	??_Fingerprint_DeleteModel^0,c
  5388   000C92  0EAC               	movlw	172
  5389   000C94                     u2157:
  5390   000C94  2EE8               	decfsz	wreg,f,c
  5391   000C96  D7FE               	bra	u2157
  5392   000C98  2E07               	decfsz	??_Fingerprint_DeleteModel^0,f,c
  5393   000C9A  D7FC               	bra	u2157
  5394   000C9C                     l3185:
  5395   000C9C  0100               	movlb	0	; () banked
  5396   000C9E  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  5397   000CA0  A4D8               	btfss	status,2,c
  5398   000CA2  D7FC               	goto	l3185
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;fingerprint.c: 146:     return request_fingerprint[9];
  5402   000CA4  5169               	movf	(_request_fingerprint+9)& (0+255),w,b
  5403                           
  5404                           ; BSR set to: 0
  5405   000CA6  0012               	return		;funcret
  5406   000CA8                     __end_of_Fingerprint_DeleteModel:
  5407                           	callstack 0
  5408                           
  5409 ;; *************** function _Fingerprint_Send_Buffer *****************
  5410 ;; Defined at:
  5411 ;;		line 50 in file "fingerprint.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  buf             2    2[COMRAM] PTR unsigned char 
  5414 ;;		 -> finger_delete_all(12), finger_template(12), finger_delete(16), finger_store_model(15), 
  5415 ;;		 -> finger_get_model(12), finger_sh(17), finger_img2tz_2(13), finger_img2tz_1(13), 
  5416 ;;		 -> finger_detect(12), finger_read_data(12), 
  5417 ;;  size            1    4[COMRAM] unsigned char 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  i               1    5[COMRAM] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5429 ;;      Params:         3       0       0       0       0       0       0       0       0
  5430 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5432 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5433 ;;Total ram usage:        4 bytes
  5434 ;; Hardware stack levels used: 1
  5435 ;; Hardware stack levels required when called: 1
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_Fingerprint_Read_Parameters
  5440 ;;		_Fingerprint_GetImage
  5441 ;;		_Fingerprint_Image2Tz
  5442 ;;		_Fingerprint_Search
  5443 ;;		_Fingerprint_GetModel
  5444 ;;		_Fingerprint_StoreModel
  5445 ;;		_Fingerprint_DeleteModel
  5446 ;;		_Fingerprint_GetTemplateCount
  5447 ;;		_Fingerprint_EmptyDatabase
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text32
  5452   000E60                     __ptext32:
  5453                           	callstack 0
  5454   000E60                     _Fingerprint_Send_Buffer:
  5455                           	callstack 28
  5456                           
  5457                           ;fingerprint.c: 50: void Fingerprint_Send_Buffer(uint8_t* buf, uint8_t size);fingerprint
      +                          .c: 51: {;fingerprint.c: 52:     for(uint8_t i=0; i<size; i++)
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;incstack = 0
  5461   000E60  0E00               	movlw	0
  5462   000E62  6E06               	movwf	Fingerprint_Send_Buffer@i^0,c
  5463   000E64  D016               	goto	l2819
  5464   000E66                     l149:
  5465   000E66  A2AC               	btfss	172,1,c	;volatile
  5466   000E68  D7FE               	goto	l149
  5467                           
  5468                           ;fingerprint.c: 55:         TXREG = *buf++;
  5469   000E6A  C003  FFF6         	movff	Fingerprint_Send_Buffer@buf,tblptrl
  5470   000E6E  C004  FFF7         	movff	Fingerprint_Send_Buffer@buf+1,tblptrh
  5471   000E72  6AF8               	clrf	tblptru,c
  5472   000E74  0E07               	movlw	(high __ramtop+-1)
  5473   000E76  64F7               	cpfsgt	tblptrh,c
  5474   000E78  D003               	bra	u1507
  5475   000E7A  0008               	tblrd		*
  5476   000E7C  50F5               	movf	tablat,w,c
  5477   000E7E  D005               	bra	u1500
  5478   000E80                     u1507:
  5479   000E80  CFF6 FFE1          	movff	tblptrl,fsr1l
  5480   000E84  CFF7 FFE2          	movff	tblptrh,fsr1h
  5481   000E88  50E7               	movf	indf1,w,c
  5482   000E8A                     u1500:
  5483   000E8A  6EAD               	movwf	173,c	;volatile
  5484   000E8C  4A03               	infsnz	Fingerprint_Send_Buffer@buf^0,f,c
  5485   000E8E  2A04               	incf	(Fingerprint_Send_Buffer@buf+1)^0,f,c
  5486                           
  5487                           ;fingerprint.c: 56:     }
  5488   000E90  2A06               	incf	Fingerprint_Send_Buffer@i^0,f,c
  5489   000E92                     l2819:
  5490   000E92  5005               	movf	Fingerprint_Send_Buffer@size^0,w,c
  5491   000E94  5C06               	subwf	Fingerprint_Send_Buffer@i^0,w,c
  5492   000E96  B0D8               	btfsc	status,0,c
  5493   000E98  0012               	return	
  5494   000E9A  D7E5               	goto	l149
  5495   000E9C                     __end_of_Fingerprint_Send_Buffer:
  5496                           	callstack 0
  5497                           
  5498 ;; *************** function _INT_UART_RX *****************
  5499 ;; Defined at:
  5500 ;;		line 203 in file "fingerprint.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;		None
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5514 ;;      Params:         0       0       0       0       0       0       0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5516 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5517 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5518 ;;Total ram usage:        2 bytes
  5519 ;; Hardware stack levels used: 1
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		Interrupt level 2
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	intcode
  5528   000008                     __pintcode:
  5529                           	callstack 0
  5530   000008                     _INT_UART_RX:
  5531                           	callstack 22
  5532                           
  5533                           ;incstack = 0
  5534   000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5535   00000A  ED3C  F008         	call	int_func,f	;refresh shadow registers
  5536                           
  5537                           	psect	intcode_body
  5538   001078                     __pintcode_body:
  5539                           	callstack 22
  5540   001078                     int_func:
  5541                           	callstack 22
  5542   001078  0006               	pop		; remove dummy address from shadow register refresh
  5543   00107A  CFD9 F001          	movff	fsr2l,??_INT_UART_RX
  5544   00107E  CFDA F002          	movff	fsr2h,??_INT_UART_RX+1
  5545                           
  5546                           ;fingerprint.c: 205:     if(PIR1bits.RCIF == 1)
  5547   001082  AA9E               	btfss	158,5,c	;volatile
  5548   001084  D008               	goto	i2l251
  5549                           
  5550                           ;fingerprint.c: 206:     {;fingerprint.c: 207:         request_fingerprint[cont_rx++] = 
      +                          RCREG;
  5551   001086  5059               	movf	_cont_rx^0,w,c
  5552   001088  0F60               	addlw	low _request_fingerprint
  5553   00108A  6ED9               	movwf	fsr2l,c
  5554   00108C  6ADA               	clrf	fsr2h,c
  5555   00108E  CFAE FFDF          	movff	4014,indf2	;volatile
  5556   001092  2A59               	incf	_cont_rx^0,f,c
  5557                           
  5558                           ;fingerprint.c: 208:         PIR1bits.RCIF = 0;
  5559   001094  9A9E               	bcf	158,5,c	;volatile
  5560   001096                     i2l251:
  5561   001096  C002  FFDA         	movff	??_INT_UART_RX+1,fsr2h
  5562   00109A  C001  FFD9         	movff	??_INT_UART_RX,fsr2l
  5563   00109E  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5564   0010A0  0011               	retfie		f
  5565   0010A2                     __end_of_INT_UART_RX:
  5566                           	callstack 0
  5567                           
  5568                           	psect	rparam
  5569   000000                     
  5570                           	psect	temp
  5571   00005D                     btemp:
  5572                           	callstack 0
  5573   00005D                     	ds	1
  5574   000000                     int$flags	set	btemp
  5575   000000                     wtemp8	set	btemp+1
  5576   000000                     ttemp5	set	btemp+1
  5577   000000                     ttemp6	set	btemp+4
  5578   000000                     ttemp7	set	btemp+8
  5579                           
  5580                           	psect	idloc
  5581                           
  5582                           ;Config register IDLOC0 @ 0x200000
  5583                           ;	unspecified, using default values
  5584   200000                     	org	2097152
  5585   200000  FF                 	db	255
  5586                           
  5587                           ;Config register IDLOC1 @ 0x200001
  5588                           ;	unspecified, using default values
  5589   200001                     	org	2097153
  5590   200001  FF                 	db	255
  5591                           
  5592                           ;Config register IDLOC2 @ 0x200002
  5593                           ;	unspecified, using default values
  5594   200002                     	org	2097154
  5595   200002  FF                 	db	255
  5596                           
  5597                           ;Config register IDLOC3 @ 0x200003
  5598                           ;	unspecified, using default values
  5599   200003                     	org	2097155
  5600   200003  FF                 	db	255
  5601                           
  5602                           ;Config register IDLOC4 @ 0x200004
  5603                           ;	unspecified, using default values
  5604   200004                     	org	2097156
  5605   200004  FF                 	db	255
  5606                           
  5607                           ;Config register IDLOC5 @ 0x200005
  5608                           ;	unspecified, using default values
  5609   200005                     	org	2097157
  5610   200005  FF                 	db	255
  5611                           
  5612                           ;Config register IDLOC6 @ 0x200006
  5613                           ;	unspecified, using default values
  5614   200006                     	org	2097158
  5615   200006  FF                 	db	255
  5616                           
  5617                           ;Config register IDLOC7 @ 0x200007
  5618                           ;	unspecified, using default values
  5619   200007                     	org	2097159
  5620   200007  FF                 	db	255
  5621                           
  5622                           	psect	config
  5623                           
  5624                           ;Config register CONFIG1L @ 0x300000
  5625                           ;	PLL Prescaler Selection bits
  5626                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  5627                           ;	System Clock Postscaler Selection bits
  5628                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5629                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5630                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  5631   300000                     	org	3145728
  5632   300000  21                 	db	33
  5633                           
  5634                           ;Config register CONFIG1H @ 0x300001
  5635                           ;	Oscillator Selection bits
  5636                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  5637                           ;	Fail-Safe Clock Monitor Enable bit
  5638                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5639                           ;	Internal/External Oscillator Switchover bit
  5640                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5641   300001                     	org	3145729
  5642   300001  0E                 	db	14
  5643                           
  5644                           ;Config register CONFIG2L @ 0x300002
  5645                           ;	Power-up Timer Enable bit
  5646                           ;	PWRT = OFF, PWRT disabled
  5647                           ;	Brown-out Reset Enable bits
  5648                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5649                           ;	Brown-out Reset Voltage bits
  5650                           ;	BORV = 3, Minimum setting 2.05V
  5651                           ;	USB Voltage Regulator Enable bit
  5652                           ;	VREGEN = OFF, USB voltage regulator disabled
  5653   300002                     	org	3145730
  5654   300002  19                 	db	25
  5655                           
  5656                           ;Config register CONFIG2H @ 0x300003
  5657                           ;	Watchdog Timer Enable bit
  5658                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5659                           ;	Watchdog Timer Postscale Select bits
  5660                           ;	WDTPS = 32768, 1:32768
  5661   300003                     	org	3145731
  5662   300003  1E                 	db	30
  5663                           
  5664                           ; Padding undefined space
  5665   300004                     	org	3145732
  5666   300004  FF                 	db	255
  5667                           
  5668                           ;Config register CONFIG3H @ 0x300005
  5669                           ;	CCP2 MUX bit
  5670                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5671                           ;	PORTB A/D Enable bit
  5672                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5673                           ;	Low-Power Timer 1 Oscillator Enable bit
  5674                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5675                           ;	MCLR Pin Enable bit
  5676                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5677   300005                     	org	3145733
  5678   300005  81                 	db	129
  5679                           
  5680                           ;Config register CONFIG4L @ 0x300006
  5681                           ;	Stack Full/Underflow Reset Enable bit
  5682                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5683                           ;	Single-Supply ICSP Enable bit
  5684                           ;	LVP = OFF, Single-Supply ICSP disabled
  5685                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5686                           ;	ICPRT = OFF, ICPORT disabled
  5687                           ;	Extended Instruction Set Enable bit
  5688                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5689                           ;	Background Debugger Enable bit
  5690                           ;	DEBUG = 0x1, unprogrammed default
  5691   300006                     	org	3145734
  5692   300006  81                 	db	129
  5693                           
  5694                           ; Padding undefined space
  5695   300007                     	org	3145735
  5696   300007  FF                 	db	255
  5697                           
  5698                           ;Config register CONFIG5L @ 0x300008
  5699                           ;	Code Protection bit
  5700                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5701                           ;	Code Protection bit
  5702                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5703                           ;	Code Protection bit
  5704                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5705                           ;	Code Protection bit
  5706                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5707   300008                     	org	3145736
  5708   300008  0F                 	db	15
  5709                           
  5710                           ;Config register CONFIG5H @ 0x300009
  5711                           ;	Boot Block Code Protection bit
  5712                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5713                           ;	Data EEPROM Code Protection bit
  5714                           ;	CPD = OFF, Data EEPROM is not code-protected
  5715   300009                     	org	3145737
  5716   300009  C0                 	db	192
  5717                           
  5718                           ;Config register CONFIG6L @ 0x30000A
  5719                           ;	Write Protection bit
  5720                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5721                           ;	Write Protection bit
  5722                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5723                           ;	Write Protection bit
  5724                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5725                           ;	Write Protection bit
  5726                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5727   30000A                     	org	3145738
  5728   30000A  0F                 	db	15
  5729                           
  5730                           ;Config register CONFIG6H @ 0x30000B
  5731                           ;	Configuration Register Write Protection bit
  5732                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5733                           ;	Boot Block Write Protection bit
  5734                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5735                           ;	Data EEPROM Write Protection bit
  5736                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5737   30000B                     	org	3145739
  5738   30000B  E0                 	db	224
  5739                           
  5740                           ;Config register CONFIG7L @ 0x30000C
  5741                           ;	Table Read Protection bit
  5742                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5743                           ;	Table Read Protection bit
  5744                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5745                           ;	Table Read Protection bit
  5746                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5747                           ;	Table Read Protection bit
  5748                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5749   30000C                     	org	3145740
  5750   30000C  0F                 	db	15
  5751                           
  5752                           ;Config register CONFIG7H @ 0x30000D
  5753                           ;	Boot Block Table Read Protection bit
  5754                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5755   30000D                     	org	3145741
  5756   30000D  40                 	db	64
  5757                           tosu	equ	0xFFF
  5758                           tosh	equ	0xFFE
  5759                           tosl	equ	0xFFD
  5760                           stkptr	equ	0xFFC
  5761                           pclatu	equ	0xFFB
  5762                           pclath	equ	0xFFA
  5763                           pcl	equ	0xFF9
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           prodh	equ	0xFF4
  5769                           prodl	equ	0xFF3
  5770                           indf0	equ	0xFEF
  5771                           postinc0	equ	0xFEE
  5772                           postdec0	equ	0xFED
  5773                           preinc0	equ	0xFEC
  5774                           plusw0	equ	0xFEB
  5775                           fsr0h	equ	0xFEA
  5776                           fsr0l	equ	0xFE9
  5777                           wreg	equ	0xFE8
  5778                           indf1	equ	0xFE7
  5779                           postinc1	equ	0xFE6
  5780                           postdec1	equ	0xFE5
  5781                           preinc1	equ	0xFE4
  5782                           plusw1	equ	0xFE3
  5783                           fsr1h	equ	0xFE2
  5784                           fsr1l	equ	0xFE1
  5785                           bsr	equ	0xFE0
  5786                           indf2	equ	0xFDF
  5787                           postinc2	equ	0xFDE
  5788                           postdec2	equ	0xFDD
  5789                           preinc2	equ	0xFDC
  5790                           plusw2	equ	0xFDB
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8

Data Sizes:
    Strings     587
    Constant    86
    Data        48
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      92
    BANK0           160     14     134
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_33(CODE[27]), STR_25(CODE[9]), STR_18(CODE[9]), STR_8(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 27
		 -> STR_33(CODE[27]), STR_25(CODE[9]), STR_18(CODE[9]), STR_8(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 27
		 -> STR_33(CODE[27]), STR_25(CODE[9]), STR_18(CODE[9]), STR_8(CODE[9]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1261$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_33(CODE[27]), STR_25(CODE[9]), STR_18(CODE[9]), STR_8(CODE[9]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 30
		 -> buf_tx(BANK0[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1213$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1213$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    atoi@s	PTR const unsigned char  size(1) Largest target is 6
		 -> buf_rx(BANK0[6]), 

    S_Uart_Read_String@str	PTR unsigned char  size(1) Largest target is 6
		 -> buf_rx(BANK0[6]), 

    S_Uart_Send_String@Text	PTR unsigned char  size(2) Largest target is 50
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_31(CODE[20]), STR_30(CODE[30]), 
		 -> STR_29(CODE[36]), STR_28(CODE[3]), STR_27(CODE[27]), STR_26(CODE[30]), 
		 -> STR_24(CODE[33]), STR_23(CODE[16]), STR_22(CODE[3]), STR_21(CODE[34]), 
		 -> STR_20(CODE[50]), STR_19(CODE[30]), STR_17(CODE[34]), STR_16(CODE[27]), 
		 -> STR_15(CODE[15]), STR_14(CODE[19]), STR_13(CODE[18]), STR_12(CODE[16]), 
		 -> STR_11(CODE[3]), STR_10(CODE[39]), STR_9(CODE[36]), buf_tx(BANK0[30]), 
		 -> STR_7(CODE[19]), STR_6(CODE[18]), STR_5(CODE[40]), STR_4(CODE[19]), 
		 -> STR_3(CODE[21]), STR_2(CODE[22]), STR_1(CODE[15]), 

    Fingerprint_Send_Buffer@buf	PTR unsigned char  size(2) Largest target is 17
		 -> finger_delete_all(CODE[12]), finger_template(CODE[12]), finger_delete(BANK0[16]), finger_store_model(BANK0[15]), 
		 -> finger_get_model(CODE[12]), finger_sh(BANK0[17]), finger_img2tz_2(CODE[13]), finger_img2tz_1(CODE[13]), 
		 -> finger_detect(CODE[12]), finger_read_data(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->___lodiv
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _S_Uart_Send_String->_S_Uart_Send_Char
    _S_Uart_Read_String->_S_Uart_Read
    _Fingerprint_StoreModel->_Fingerprint_Send_Buffer
    _Fingerprint_Read_Parameters->_Fingerprint_Send_Buffer
    _Fingerprint_Init->___lldiv
    _Fingerprint_Get_ID->_Fingerprint_Image2Tz
    _Fingerprint_Search->_Fingerprint_Send_Buffer
    _Fingerprint_Image2Tz->_Fingerprint_Send_Buffer
    _Fingerprint_GetImage->_Fingerprint_Send_Buffer
    _Fingerprint_GetTemplateCount->_Fingerprint_Send_Buffer
    _Fingerprint_GetModel->_Fingerprint_Send_Buffer
    _Fingerprint_EmptyDatabase->_Fingerprint_Send_Buffer
    _Fingerprint_DeleteModel->_Fingerprint_Send_Buffer

Critical Paths under _INT_UART_RX in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _INT_UART_RX in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_UART_RX in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_UART_RX in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_UART_RX in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_UART_RX in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_UART_RX in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_UART_RX in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_UART_RX in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   34454
                                             84 COMRAM     2     2      0
                                             12 BANK0      2     2      0
            _Fingerprint_DeleteModel
          _Fingerprint_EmptyDatabase
               _Fingerprint_GetImage
               _Fingerprint_GetModel
       _Fingerprint_GetTemplateCount
                 _Fingerprint_Get_ID
               _Fingerprint_Image2Tz
                   _Fingerprint_Init
        _Fingerprint_Read_Parameters
             _Fingerprint_StoreModel
                        _S_Uart_Init
                 _S_Uart_Read_String
                 _S_Uart_Send_String
                               _atoi
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    14      5    6968
                                             79 COMRAM     5     0      5
                                              0 BANK0     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     2      4    5942
                                             73 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           20    17      3    5481
                                             58 COMRAM    15    12      3
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                31    22      9    3914
                                             27 COMRAM    31    22      9
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     5      5    2533
                                             16 COMRAM    10     5      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1177
                                             10 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     857
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              2 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              2 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 9     7      2    1404
                                              8 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              5     3      2     259
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              4     2      2     191
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _S_Uart_Send_String                                   2     0      2    3286
                                              4 COMRAM     2     0      2
                   _S_Uart_Send_Char
 ---------------------------------------------------------------------------------
 (2) _S_Uart_Send_Char                                     2     2      0     161
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _S_Uart_Read_String                                   4     2      2     998
                                              4 COMRAM     4     2      2
                        _S_Uart_Read
 ---------------------------------------------------------------------------------
 (2) _S_Uart_Read                                          2     2      0     198
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _S_Uart_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Fingerprint_StoreModel                               2     2      0    1933
                                              6 COMRAM     2     2      0
            _Fingerprint_Send_Buffer
 ---------------------------------------------------------------------------------
 (1) _Fingerprint_Read_Parameters                          1     1      0    1902
                                              6 COMRAM     1     1      0
            _Fingerprint_Send_Buffer
 ---------------------------------------------------------------------------------
 (1) _Fingerprint_Init                                    10     6      4     610
                                             15 COMRAM    10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Fingerprint_Get_ID                                   8     6      2    5777
                                              9 COMRAM     6     4      2
               _Fingerprint_GetImage
               _Fingerprint_Image2Tz
                 _Fingerprint_Search
 ---------------------------------------------------------------------------------
 (2) _Fingerprint_Search                                   1     1      0    1902
                                              6 COMRAM     1     1      0
            _Fingerprint_Send_Buffer
 ---------------------------------------------------------------------------------
 (1) _Fingerprint_Image2Tz                                 3     3      0    1933
                                              6 COMRAM     3     3      0
            _Fingerprint_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _Fingerprint_GetImage                                 1     1      0    1902
                                              6 COMRAM     1     1      0
            _Fingerprint_Send_Buffer
 ---------------------------------------------------------------------------------
 (1) _Fingerprint_GetTemplateCount                         3     3      0    1939
                                              6 COMRAM     3     3      0
            _Fingerprint_Send_Buffer
 ---------------------------------------------------------------------------------
 (1) _Fingerprint_GetModel                                 1     1      0    1902
                                              6 COMRAM     1     1      0
            _Fingerprint_Send_Buffer
 ---------------------------------------------------------------------------------
 (1) _Fingerprint_EmptyDatabase                            1     1      0    1902
                                              6 COMRAM     1     1      0
            _Fingerprint_Send_Buffer
 ---------------------------------------------------------------------------------
 (1) _Fingerprint_DeleteModel                              2     2      0    1933
                                              6 COMRAM     2     2      0
            _Fingerprint_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _Fingerprint_Send_Buffer                              4     1      3    1902
                                              2 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INT_UART_RX                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Fingerprint_DeleteModel
     _Fingerprint_Send_Buffer
   _Fingerprint_EmptyDatabase
     _Fingerprint_Send_Buffer
   _Fingerprint_GetImage
     _Fingerprint_Send_Buffer
   _Fingerprint_GetModel
     _Fingerprint_Send_Buffer
   _Fingerprint_GetTemplateCount
     _Fingerprint_Send_Buffer
   _Fingerprint_Get_ID
     _Fingerprint_GetImage
     _Fingerprint_Image2Tz
       _Fingerprint_Send_Buffer
     _Fingerprint_Search
       _Fingerprint_Send_Buffer
   _Fingerprint_Image2Tz
   _Fingerprint_Init
     ___lldiv
   _Fingerprint_Read_Parameters
     _Fingerprint_Send_Buffer
   _Fingerprint_StoreModel
     _Fingerprint_Send_Buffer
   _S_Uart_Init
   _S_Uart_Read_String
     _S_Uart_Read
   _S_Uart_Send_String
     _S_Uart_Send_Char
   _atoi
     ___wmul
     _isdigit
     _isspace
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc

 _INT_UART_RX (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5C       1       97.9%
BITBIGSFRhl         30      0       0      21        0.0%
BITBIGSFRllll       23      0       0      28        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlhlh        C      0       0      24        0.0%
BITBIGSFRlllh        8      0       0      27        0.0%
BITBIGSFRlhhh        8      0       0      22        0.0%
BITBIGSFRlhhlh       7      0       0      23        0.0%
BITBIGSFRllh         7      0       0      26        0.0%
BITBIGSFRlhll        7      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     102      29        0.0%
DATA                 0      0     102       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Oct 28 10:25:21 2022

                                  l60 00E4                                    l61 00F2  
                 ___wmul@multiplicand 0005                         ??_S_Uart_Init 0003  
                       ??_S_Uart_Read 0003                                   l320 09E8  
                                 l226 0B1A                                   l243 0BEE  
                                 l149 0E66                                   l283 0E06  
                                 l267 0D6E                                   l278 0DE4  
                                 l731 081E                                   l741 08CC  
                                 l986 0768                                   _pad 0B44  
             _Fingerprint_Send_Buffer 0E60                                   wreg 000FE8  
          __end_of_S_Uart_Read_String 0ED6                 ?_Fingerprint_GetImage 0001  
                                l1030 0B5A                                  l1040 03F8  
                                l1038 03F0                                  l3001 0F18  
                                l3003 0F28                                  l3111 06C0  
                                l3103 068C                                  l3113 06C8  
                                l3211 0AFA                                  l3123 0724  
                                l3115 06CC                                  l3107 068E  
                                l3141 100C                                  l3045 0F04  
                                l3053 0D24                                  l3117 06F0  
                                l3215 0B10                                  l3039 0EEA  
               ?_Fingerprint_GetModel 0001                                  l3137 0FF6  
                                l3217 0B20                                  l3225 0B24  
                                l3081 0BD0                                  l3161 0C44  
                                l3057 0EA0                                  l3049 0CFC  
                                l3321 01EE                                  l3227 0B40  
                                l3075 0BAE                                  l3323 01FC  
                                l3331 0240                                  l3315 01C0  
                                l3181 0C86                                  l3077 0BC6  
                                l3157 0C2E                                  l3341 027C  
                                l3333 024E                                  l3325 020A  
                                l3253 003A                                  l3185 0C9C  
                                l2801 051C                                  l3361 030C  
                                l3353 02C6                                  l3329 0218  
                                l3265 0084                                  l3195 0F58  
                                l2715 0A0E                                  l3371 0358  
                                l3363 031A                                  l3347 02AA  
                                l3355 02E8                                  l2725 0F84  
                                l3357 02F6                                  l3349 02B8  
                                l3285 011C                                  l3381 038C  
                                l3199 0F6E                                  l3359 02FE  
                                l3367 0328                                  l3383 03BC  
                                l2905 0DC8                                  l2737 0798  
                                l2729 0F96                                  l3369 034A  
                                l2819 0E92                                  l2923 0D70  
                                l2739 07AC                                  l2843 062C  
                                l2941 0DF2                                  l2749 0808  
                                l2765 08B6                                  l2757 085A  
                                l2773 0B52                                  l2837 0602  
                                l2845 064C                                  ?_pad 0011  
                                l2863 0FC2                                  l2871 0A7E  
                                l2919 0D60                                  l2759 086E  
                                l2775 0B64                                  l2791 0430  
                                l2881 0AC2                                  l2873 0A90  
                                l2849 065A                                  l2779 0B78  
                                l2885 0AD8                                  l2877 0AA2  
                                l2879 0ABE                                  l2967 099A  
                                l2991 1040                                  l2969 09A6  
                                l2979 09DA                                  STR_1 7FD7  
                                STR_2 7F50                                  STR_3 7F66  
                                STR_4 7FA2                                  STR_5 7DE5  
                                STR_6 7FB5                                  STR_7 7F8F  
                                STR_8 7FF5                                  STR_9 7E58  
                                u2007 0D72                                  u1320 0A06  
                                u2017 0D8A                                  u1410 0872  
                                u2107 0AD0                                  u2027 0DEA  
                                u1500 0E8A                                  u1340 0A48  
                                u2117 0FD0                                  u2037 0DF4  
                                u2127 0B08                                  u2047 0E14  
                                u2137 1004                                  u2057 10F8  
                                u1361 0778                                  u1450 03E6  
                                u1507 0E80                                  u2147 0F66  
                                u2067 0C3C                                  u1700 10E6  
                                u1380 07B0                                  u2157 0C94  
                                u2077 0EF8                                  u2087 096A  
                                u1480 0546                                  u2097 0DD6  
                                u1481 0544                                  u1650 09AA  
                                u1820 0746                                  u1725 0922  
                                u1750 0D1C                                  u1760 0D44  
                                u1680 103C                                  u1690 10E4  
                                u1757 0D12                                  u1790 0EC4  
                                u1767 0D3A                                  u1957 0108  
                                u1967 0166                                  u1977 018E  
                                u1987 03C6                                  u1997 0D52  
               ?_Fingerprint_Image2Tz 0001             __end_of_finger_delete_all 7D83  
                                _dbuf 0100                                  _atoi 067A  
                                _main 0012                                  _prec 007E  
                                pad@i 0017                                  pad@p 0014  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 0019  
                                fsr2l 000FD9                                  btemp 005D  
                                _utoa 03D6                                  prodh 000FF4  
                                prodl 000FF3                                  start 000E  
                        ___param_bank 000000                 Fingerprint_Image2Tz@n 0009  
                               ??_pad 0016                                 ?_atoi 0009  
                               ?_main 0001                                 STR_10 7E0D  
                               STR_11 7E0A                                 STR_12 7FC7  
                               STR_20 7DB3                                 STR_13 7FB5  
                               STR_21 7E7C                                 STR_22 7E0A  
                               STR_14 7F8F                                 STR_30 7EE1  
                               STR_23 7FC7                                 STR_15 7FE6  
                               STR_31 7F7B                                 STR_32 7E0A  
                               STR_16 7EFF                                 STR_24 7EC0  
                               STR_25 7FF5                                 STR_33 7F35  
                               STR_17 7E9E                                 STR_34 7E0A  
                               STR_26 7EE1                                 STR_18 7FF5  
                               STR_27 7F1A                                 STR_19 7EE1  
                               STR_28 7E0A                                 STR_29 7E34  
                     __end_of___lldiv 09FA                                 ?_utoa 001C  
                     __end_of___lodiv 0840                       __end_of___lomod 08EE  
                               i2l251 1096                                 _RCREG 000FAE  
                               _RCSTA 000FAB                          vfpfcnvrt@fmt 003C  
                               _SPBRG 000FAF                                 _TXREG 000FAD  
                               _TXSTA 000FAC                      _S_Uart_Send_Char 0D4C  
              _Fingerprint_StoreModel 0BF8                          ?_INT_UART_RX 0001  
                 __end_of_S_Uart_Init 1104            Fingerprint_Send_Buffer@buf 0003  
                 __end_of_S_Uart_Read 0E22                                 _flags 0080  
                               _fputc 09FA                                 _fputs 0F7A  
                     __end_of_isdigit 10EC            __end_of_S_Uart_Send_String 0D4C  
                               atoi@n 0010                                 pad@fp 0011  
                               atoi@s 0009                                 _width 007C  
                               _putch 1104                S_Uart_Send_String@Text 0005  
                     __end_of_isspace 1048                                 tablat 000FF5  
                               ttemp5 005E                                 ttemp6 0061  
                               ttemp7 0065                                 utoa@d 001D  
                               utoa@i 0039                                 utoa@n 0031  
                               utoa@p 002F                                 utoa@w 002D  
                               status 000FD8                                 wtemp8 005E  
                     __end_of_sprintf 0E60                      ___lodiv@dividend 0003  
                     __initialization 0CA8                          __end_of_atoi 0772  
                        __end_of_main 03D6            S_Uart_Read_String@cont_buf 0008  
                        __end_of_utoa 0564             ??_Fingerprint_Send_Buffer 0006  
                     S_Uart_Read@Data 0003                                ??_atoi 000B  
                              ??_main 0055                                ??_utoa 0025  
                       __activetblptr 000002                       S_Uart_Read@mask 0004  
                    ___lodiv@quotient 0013                ??_Fingerprint_GetImage 0007  
              ??_Fingerprint_GetModel 0007                                ?_fputc 0003  
                              ?_fputs 000B                ??_Fingerprint_Image2Tz 0007  
                              ?_putch 0001                                _SPBRGH 000FB0  
         ??_Fingerprint_EmptyDatabase 0007            __end_of_Fingerprint_Get_ID 0BF8  
                        vfprintf@cfmt 004E                                ___wmul 10A2  
          __end_of_Fingerprint_Search 0DE0                             ??___lldiv 000B  
                           ??___lodiv 0013                             ??___lomod 0013  
                              _buf_rx 00A2                                _buf_tx 0084  
                              clear_0 0CCE                                clear_1 0CDA  
                              isa$std 000001                                pad@buf 0012  
           Fingerprint_DeleteModel@id 0008                                main@id 00E4  
                         _S_Uart_Init 10EC                           _S_Uart_Read 0DE0  
                              fputc@c 0003                                fputs@c 000E  
                              fputs@i 000F                                fputs@s 000B  
                           ??_isdigit 0005              Fingerprint_Send_Buffer@i 0006  
                        __mediumconst 7D5C                             ??_isspace 0005  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                                putch@c 0001  
                    __end_of_vfprintf 0F44                                utoa@fp 001C  
                           ??_sprintf 0055                            __accesstop 0060  
             __end_of__initialization 0CEC                         ___rparam_used 000001  
           Fingerprint_Get_ID@page_id 000E                        __pcstackCOMRAM 0001  
                        __pidataBANK0 1048                         __end_of_fputc 0A7A  
                       __end_of_fputs 0FAE                         __end_of_putch 1106  
 __end_of_Fingerprint_Read_Parameters 0F0E           _Fingerprint_Read_Parameters 0ED6  
           _Fingerprint_EmptyDatabase 0F44                               ??_fputc 0006  
                             ??_fputs 000E              ?_Fingerprint_DeleteModel 0001  
                             ??_putch 0003                            __pbssBANK0 0060  
                          __pbssBANK1 0100                    _S_Uart_Read_String 0E9C  
            __end_of_S_Uart_Send_Char 0D96                               ?___wmul 0003  
                 ?_S_Uart_Read_String 0005                               _BAUDCON 000FB8  
             ?_Fingerprint_StoreModel 0001                      _Fingerprint_Init 08EE  
                    ___lomod@dividend 0003                  ??_S_Uart_Read_String 0007  
                  _finger_store_model 00C9                               __Hparam 0000  
                             __Lparam 0000                    _S_Uart_Send_String 0CFA  
               S_Uart_Read_String@str 0005                               ___lldiv 0978  
                             ___lodiv 0772                               ___lomod 0840  
                           ?_vfprintf 004A                               _c_empty 005A  
      __end_of_Fingerprint_StoreModel 0C50                               __pcinit 0CA8  
                             _c_store 0083                               __ramtop 0800  
                 ?_S_Uart_Send_String 0005                               __ptext0 0012  
                             __ptext1 0E22                               __ptext2 0F0E  
                             __ptext3 0564                               __ptext4 03D6  
                             __ptext5 0B44                               __ptext6 0F7A  
                             __ptext7 09FA                               __ptext8 1104  
                             __ptext9 0840                               _cont_rx 0059  
                             _isdigit 10C8                               _n_users 005B  
     __end_of_Fingerprint_DeleteModel 0CA8                               _isspace 1016  
                             atoi@neg 000E                               _sprintf 0E22  
                      __pintcode_body 1078                  end_of_initialization 0CEC  
                ??_S_Uart_Send_String 0007                               fputc@fp 0005  
                       __Lmediumconst 7D5C                               int_func 1078  
                             fputs@fp 000D                       ___lldiv@divisor 0007  
                     ___lldiv@counter 000F                 __end_of_finger_detect 7DA7  
                   __end_of_vfpfcnvrt 067A                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                    vfpfcnvrt@convarg 0040                            ??_vfprintf 004E  
__end_of_Fingerprint_GetTemplateCount 0B44          _Fingerprint_GetTemplateCount 0AE2  
                           _PORTDbits 000F83                          ?_S_Uart_Init 0001  
                        ?_S_Uart_Read 0001                    _Fingerprint_Get_ID 0B9E  
                           _TRISCbits 000F94                             _TRISDbits 000F95  
                  _Fingerprint_Search 0D96                   ?_Fingerprint_Get_ID 000A  
                    _finger_get_model 7D8F                   ?_Fingerprint_Search 0001  
                           _TXSTAbits 000FAC                   _request_fingerprint 0060  
                    _finger_read_data 7DA7              ?_Fingerprint_Send_Buffer 0003  
                ??_Fingerprint_Get_ID 000C                           vfpfcnvrt@ap 003D  
                         vfpfcnvrt@cp 0048                           vfpfcnvrt@fp 003B  
                      __end_of___wmul 10C8                           _BAUDCONbits 000FB8  
                ??_Fingerprint_Search 0007                  Fingerprint_Init@baud 0010  
       ?_Fingerprint_GetTemplateCount 0001                   start_initialization 0CA8  
                     ___lodiv@divisor 000B                       ___lodiv@counter 001B  
                         __end_of_pad 0B9E                     ?_S_Uart_Send_Char 0001  
                 S_Uart_Read_String@c 0007                           vfprintf@fmt 004B  
                            ??___wmul 0007              __end_of_Fingerprint_Init 0978  
                  ??_S_Uart_Send_Char 0003                           __pdataBANK0 00A8  
                         __pbssCOMRAM 0057                         __pcstackBANK0 00D8  
                       ??_INT_UART_RX 0001                    Fingerprint_Init@vx 0018  
                S_Uart_Send_Char@Data 0003       __end_of_Fingerprint_Send_Buffer 0E9C  
                S_Uart_Send_Char@mask 0004                             __pintcode 0008  
                       __pmediumconst 7D5C                              ?___lldiv 0003  
                            ?___lodiv 0003                              ?___lomod 0003  
                           _finger_sh 00A8                       ___lomod@divisor 000B  
                     ___lomod@counter 0013                              ?_isdigit 0003  
                            ?_isspace 0003        ??_Fingerprint_GetTemplateCount 0007  
                            ?_sprintf 0050                        ___wmul@product 0007  
                 __end_of_INT_UART_RX 10A2                              _LATDbits 000F8C  
                            _PIE1bits 000F9D                              _PIR1bits 000F9E  
            __end_of_finger_get_model 7D9B                             _vfpfcnvrt 0564  
                     _finger_img2tz_1 7D6A                       _finger_img2tz_2 7D5D  
                          _ADCON1bits 000FC1                     ___wmul@multiplier 0003  
                        _isspace$1209 0007              __end_of_finger_read_data 7DB3  
                           copy_data0 0CBC                       _finger_template 7D83  
     Fingerprint_GetTemplateCount@usr 0009                              __Hrparam 0000  
             _Fingerprint_DeleteModel 0C50           Fingerprint_Send_Buffer@size 0005  
                          vfprintf@ap 004D                              __Lrparam 0000  
                          vfprintf@fp 004A          __end_of_Fingerprint_GetImage 0FE2  
        __end_of_Fingerprint_GetModel 1016                S_Uart_Read_String@size 0006  
        __end_of_Fingerprint_Image2Tz 0AE2                            ?_vfpfcnvrt 003B  
                            _c_delete 0082          ?_Fingerprint_Read_Parameters 0001  
                          sprintf@fmt 0051                              _checksum 0057  
                            __ptext10 0772                              __ptext11 067A  
                            __ptext20 0BF8                              __ptext12 1016  
                            __ptext21 0ED6                              __ptext13 10C8  
                            __ptext30 0F44                              __ptext22 08EE  
                            __ptext14 10A2                              __ptext31 0C50  
                            __ptext23 0978                              __ptext15 0CFA  
                            __ptext32 0E60                              __ptext24 0B9E  
                            __ptext16 0D4C                              __ptext25 0D96  
                            __ptext17 0E9C                              __ptext26 0A7A  
                            __ptext18 0DE0                              __ptext27 0FAE  
                            __ptext19 10EC                              __ptext28 0AE2  
                            __ptext29 0FE2                           _INT_UART_RX 0008  
                            _enter_id 005C              ??_Fingerprint_StoreModel 0007  
             __end_of_finger_img2tz_1 7D77               __end_of_finger_img2tz_2 7D6A  
                            isa$xinst 000000                              int$flags 005D  
                            _vfprintf 0F0E                     ?_Fingerprint_Init 0010  
                  ??_Fingerprint_Init 0014         ??_Fingerprint_Read_Parameters 0007  
                          _INTCONbits 000FF2               __end_of_finger_template 7D8F  
                            isdigit@c 0003                              intlevel2 0000  
                           sprintf@ap 00D8              Fingerprint_StoreModel@id 0008  
                            isspace@c 0003                      ___lldiv@dividend 0003  
           ??_Fingerprint_DeleteModel 0007            ?_Fingerprint_EmptyDatabase 0001  
                       _finger_delete 00B9                         _finger_detect 7D9B  
                         ??_vfpfcnvrt 003E                         _finger_size_l 0081  
                            sprintf@f 00D9                              sprintf@s 0050  
                    ___lldiv@quotient 000B                  _Fingerprint_GetImage 0FAE  
                _Fingerprint_GetModel 0FE2                  _Fingerprint_Image2Tz 0A7A  
                   _finger_delete_all 7D77     __end_of_Fingerprint_EmptyDatabase 0F7A  
